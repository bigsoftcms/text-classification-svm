<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v42-2006-08-23.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07641115-20100105.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20091221" date-publ="20100105">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07641115</doc-number>
<kind>B2</kind>
<date>20100105</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11228497</doc-number>
<date>20050919</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>815</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>19</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20100105</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20100105</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>235385</main-classification>
<further-classification>235375</further-classification>
<further-classification>705 28</further-classification>
<further-classification>707102</further-classification>
<further-classification>7071041</further-classification>
</classification-national>
<invention-title id="d0e53">Type-specific sticker</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4899299</doc-number>
<kind>A</kind>
<name>MacPhail</name>
<date>19900200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707204</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2002/0181010</doc-number>
<kind>A1</kind>
<name>Pineau</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2003/0144923</doc-number>
<kind>A1</kind>
<name>Capozzi et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 26</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0023200</doc-number>
<kind>A1</kind>
<name>Blume</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>434317</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0062769</doc-number>
<kind>A1</kind>
<name>Silverbrook et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0145700</doc-number>
<kind>A1</kind>
<name>Silverbrook et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2005/0200637</doc-number>
<kind>A1</kind>
<name>Silverbrok et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>EP</country>
<doc-number>1291786</doc-number>
<kind>A2</kind>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>69</number-of-drawing-sheets>
<number-of-figures>106</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070066285</doc-number>
<kind>A1</kind>
<date>20070322</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Lapstun</last-name>
<first-name>Paul</first-name>
<address>
<city>Balmain</city>
<country>AU</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>AU</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Hollins</last-name>
<first-name>Michael J</first-name>
<address>
<city>Balmain</city>
<country>AU</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>AU</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Walmsley</last-name>
<first-name>Simon Robert</first-name>
<address>
<city>Balmain</city>
<country>AU</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>AU</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Silverbrook</last-name>
<first-name>Kia</first-name>
<address>
<city>Balmain</city>
<country>AU</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>AU</country>
</residence>
</applicant>
</applicants>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Silverbrook Research Pty Ltd</orgname>
<role>03</role>
<address>
<city>Balmain, New South Wales</city>
<country>AU</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Lee</last-name>
<first-name>Seung H</first-name>
<department>2887</department>
</primary-examiner>
<assistant-examiner>
<last-name>Marshall</last-name>
<first-name>Christle I</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of generating an association between a sticker and an object of an object type, the sticker having disposed therein or thereon coded data at least partially indicative of a sticker identity and the object type, the method including, in a computer system: receiving indicating data from a sensing device, the indicating data being at least partially indicative of the identity of the sticker and the object type, the sensing device, when placed in an operative position relative to the sticker, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data; identifying, using the indicating data, the identity of the sticker, the object type and the object of the object type; and, generating an association based at least partially on the sticker identity and the object.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="102.02mm" wi="299.47mm" file="US07641115-20100105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="221.06mm" wi="180.51mm" file="US07641115-20100105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="247.23mm" wi="185.84mm" file="US07641115-20100105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="248.84mm" wi="168.49mm" file="US07641115-20100105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="242.82mm" wi="180.09mm" file="US07641115-20100105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="215.73mm" wi="150.62mm" file="US07641115-20100105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="242.99mm" wi="144.53mm" file="US07641115-20100105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="260.01mm" wi="181.61mm" file="US07641115-20100105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="253.41mm" wi="159.17mm" file="US07641115-20100105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="221.83mm" wi="150.37mm" file="US07641115-20100105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="127.51mm" wi="177.72mm" file="US07641115-20100105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="221.91mm" wi="179.24mm" file="US07641115-20100105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="255.52mm" wi="145.54mm" file="US07641115-20100105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="257.30mm" wi="166.20mm" file="US07641115-20100105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="254.59mm" wi="161.54mm" file="US07641115-20100105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="219.03mm" wi="146.47mm" orientation="landscape" file="US07641115-20100105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="220.22mm" wi="132.16mm" orientation="landscape" file="US07641115-20100105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="257.05mm" wi="134.03mm" orientation="landscape" file="US07641115-20100105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="263.40mm" wi="122.09mm" orientation="landscape" file="US07641115-20100105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="244.86mm" wi="139.11mm" file="US07641115-20100105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="245.87mm" wi="171.11mm" file="US07641115-20100105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="223.52mm" wi="96.69mm" file="US07641115-20100105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="246.80mm" wi="141.73mm" file="US07641115-20100105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="180.09mm" wi="98.55mm" file="US07641115-20100105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="235.03mm" wi="162.64mm" file="US07641115-20100105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="251.04mm" wi="172.64mm" file="US07641115-20100105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="243.42mm" wi="179.66mm" file="US07641115-20100105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="257.22mm" wi="163.07mm" file="US07641115-20100105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="249.17mm" wi="183.56mm" file="US07641115-20100105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="259.84mm" wi="186.61mm" file="US07641115-20100105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="217.17mm" wi="163.07mm" file="US07641115-20100105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="172.72mm" wi="149.18mm" file="US07641115-20100105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="209.80mm" wi="155.70mm" file="US07641115-20100105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="247.31mm" wi="185.84mm" file="US07641115-20100105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="227.58mm" wi="181.27mm" file="US07641115-20100105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="116.33mm" wi="173.14mm" file="US07641115-20100105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="177.29mm" wi="148.76mm" file="US07641115-20100105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="183.56mm" wi="168.83mm" file="US07641115-20100105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00038" num="00038">
<img id="EMI-D00038" he="249.51mm" wi="188.55mm" file="US07641115-20100105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00039" num="00039">
<img id="EMI-D00039" he="180.85mm" wi="112.86mm" file="US07641115-20100105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00040" num="00040">
<img id="EMI-D00040" he="183.56mm" wi="118.62mm" file="US07641115-20100105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00041" num="00041">
<img id="EMI-D00041" he="208.70mm" wi="162.31mm" file="US07641115-20100105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00042" num="00042">
<img id="EMI-D00042" he="184.66mm" wi="172.38mm" file="US07641115-20100105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00043" num="00043">
<img id="EMI-D00043" he="156.89mm" wi="151.47mm" file="US07641115-20100105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00044" num="00044">
<img id="EMI-D00044" he="190.08mm" wi="180.42mm" file="US07641115-20100105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00045" num="00045">
<img id="EMI-D00045" he="241.81mm" wi="179.24mm" file="US07641115-20100105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00046" num="00046">
<img id="EMI-D00046" he="256.37mm" wi="183.90mm" file="US07641115-20100105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00047" num="00047">
<img id="EMI-D00047" he="248.84mm" wi="173.14mm" file="US07641115-20100105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00048" num="00048">
<img id="EMI-D00048" he="245.11mm" wi="152.23mm" file="US07641115-20100105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00049" num="00049">
<img id="EMI-D00049" he="233.00mm" wi="137.92mm" file="US07641115-20100105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00050" num="00050">
<img id="EMI-D00050" he="139.53mm" wi="127.85mm" file="US07641115-20100105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00051" num="00051">
<img id="EMI-D00051" he="189.74mm" wi="165.35mm" file="US07641115-20100105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00052" num="00052">
<img id="EMI-D00052" he="171.20mm" wi="165.69mm" file="US07641115-20100105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00053" num="00053">
<img id="EMI-D00053" he="243.33mm" wi="119.04mm" file="US07641115-20100105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00054" num="00054">
<img id="EMI-D00054" he="119.30mm" wi="159.94mm" file="US07641115-20100105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00055" num="00055">
<img id="EMI-D00055" he="224.45mm" wi="183.47mm" file="US07641115-20100105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00056" num="00056">
<img id="EMI-D00056" he="233.34mm" wi="168.91mm" file="US07641115-20100105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00057" num="00057">
<img id="EMI-D00057" he="256.88mm" wi="170.43mm" file="US07641115-20100105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00058" num="00058">
<img id="EMI-D00058" he="134.45mm" wi="159.51mm" file="US07641115-20100105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00059" num="00059">
<img id="EMI-D00059" he="260.94mm" wi="174.24mm" file="US07641115-20100105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00060" num="00060">
<img id="EMI-D00060" he="257.89mm" wi="178.14mm" file="US07641115-20100105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00061" num="00061">
<img id="EMI-D00061" he="251.29mm" wi="157.23mm" file="US07641115-20100105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00062" num="00062">
<img id="EMI-D00062" he="192.45mm" wi="175.43mm" orientation="landscape" file="US07641115-20100105-D00062.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00063" num="00063">
<img id="EMI-D00063" he="256.71mm" wi="141.73mm" orientation="landscape" file="US07641115-20100105-D00063.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00064" num="00064">
<img id="EMI-D00064" he="257.73mm" wi="146.39mm" orientation="landscape" file="US07641115-20100105-D00064.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00065" num="00065">
<img id="EMI-D00065" he="119.13mm" wi="128.78mm" file="US07641115-20100105-D00065.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00066" num="00066">
<img id="EMI-D00066" he="178.90mm" wi="163.83mm" file="US07641115-20100105-D00066.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00067" num="00067">
<img id="EMI-D00067" he="235.80mm" wi="163.41mm" file="US07641115-20100105-D00067.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00068" num="00068">
<img id="EMI-D00068" he="235.54mm" wi="169.67mm" file="US07641115-20100105-D00068.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00069" num="00069">
<img id="EMI-D00069" he="228.26mm" wi="177.38mm" file="US07641115-20100105-D00069.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention generally relates to a mobile device incorporating a printer. The invention more specifically relates to a mobile device such as a mobile telecommunications device, for example a mobile or cellular telephone that incorporates a printer which is able to print a wide variety of content on a print medium. However, it will be appreciated by those skilled in the art that the present invention can be used by other types of portable or mobile devices, or even non-portable devices.</p>
<heading id="h-0002" level="1">COPENDING APPLICATIONS</heading>
<p id="p-0003" num="0002">The following applications have been filed by the applicant simultaneously with the present application:</p>
<p id="p-0004" num="0003">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="42pt" align="left"/>
<colspec colname="4" colwidth="42pt" align="left"/>
<colspec colname="5" colwidth="49pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>11/228540</entry>
<entry>11/228500</entry>
<entry>11/228501</entry>
<entry>11/228530</entry>
<entry>11/228490</entry>
</row>
<row>
<entry>11/228531</entry>
<entry>11/228504</entry>
<entry>11/228533</entry>
<entry>11/228502</entry>
<entry>11/228507</entry>
</row>
<row>
<entry>11/228482</entry>
<entry>11/228505</entry>
<entry>11/228487</entry>
<entry>11/228529</entry>
<entry>11/228484</entry>
</row>
<row>
<entry>11/228489</entry>
<entry>11/228518</entry>
<entry>11/228536</entry>
<entry>11/228496</entry>
<entry>11/228488</entry>
</row>
<row>
<entry>11/228506</entry>
<entry>11/228516</entry>
<entry>11/228526</entry>
<entry>11/228539</entry>
<entry>11/228538</entry>
</row>
<row>
<entry>11/228524</entry>
<entry>11/228523</entry>
<entry>11/228519</entry>
<entry>11/228528</entry>
<entry>11/228527</entry>
</row>
<row>
<entry>11/228525</entry>
<entry>11/228520</entry>
<entry>11/228498</entry>
<entry>11/228511</entry>
<entry>11/228522</entry>
</row>
<row>
<entry>11/228515</entry>
<entry>11/228537</entry>
<entry>11/228534</entry>
<entry>11/228491</entry>
<entry>11/228499</entry>
</row>
<row>
<entry>11/228509</entry>
<entry>11/228492</entry>
<entry>11/228493</entry>
<entry>11/228510</entry>
<entry>11/228508</entry>
</row>
<row>
<entry>11/228512</entry>
<entry>11/228514</entry>
<entry>11/228494</entry>
<entry>11/228495</entry>
<entry>11/228486</entry>
</row>
<row>
<entry>11/228481</entry>
<entry>11/228477</entry>
<entry>11/228485</entry>
<entry>11/228483</entry>
<entry>11/228521</entry>
</row>
<row>
<entry>11/228517</entry>
<entry>11/228532</entry>
<entry>11/228513</entry>
<entry>11/228503</entry>
<entry>11/228480</entry>
</row>
<row>
<entry>11/228535</entry>
<entry>11/228478</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0005" num="0004">The disclosures of these copending applications are incorporated herein by reference.</p>
<heading id="h-0003" level="1">CROSS REFERENCES</heading>
<p id="p-0006" num="0005">The following patents or patent applications filed by the applicant or assignee of the present invention are hereby incorporated by cross-reference:</p>
<p id="p-0007" num="0006">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="35pt" align="left"/>
<colspec colname="4" colwidth="42pt" align="left"/>
<colspec colname="5" colwidth="42pt" align="left"/>
<colspec colname="6" colwidth="42pt" align="left"/>
<colspec colname="7" colwidth="42pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>10/815621</entry>
<entry>10/815612</entry>
<entry>10/815630</entry>
<entry>10/815637</entry>
<entry>10/815638</entry>
<entry>10/815640</entry>
<entry>10/815642</entry>
</row>
<row>
<entry>10/815643</entry>
<entry>10/815644</entry>
<entry>10/815618</entry>
<entry>10/815639</entry>
<entry>10/815635</entry>
<entry>10/815647</entry>
<entry>10/815634</entry>
</row>
<row>
<entry>10/815632</entry>
<entry>10/815631</entry>
<entry>10/815648</entry>
<entry>10/815641</entry>
<entry>10/815645</entry>
<entry>10/815646</entry>
<entry>10/815617</entry>
</row>
<row>
<entry>10/815620</entry>
<entry>10/815615</entry>
<entry>10/815613</entry>
<entry>10/815633</entry>
<entry>10/815619</entry>
<entry>10/815616</entry>
<entry>10/815614</entry>
</row>
<row>
<entry>10/815636</entry>
<entry>10/815649</entry>
<entry>11/041650</entry>
<entry>11/041651</entry>
<entry>11/041652</entry>
<entry>11/041649</entry>
<entry>11/041610</entry>
</row>
<row>
<entry>11/041609</entry>
<entry>11/041626</entry>
<entry>11/041627</entry>
<entry>11/041624</entry>
<entry>11/041625</entry>
<entry>11/041556</entry>
<entry>11/041580</entry>
</row>
<row>
<entry>11/041723</entry>
<entry>11/041698</entry>
<entry>11/041648</entry>
<entry>10/815609</entry>
<entry>10/815627</entry>
<entry>10/815626</entry>
<entry>10/815610</entry>
</row>
<row>
<entry>10/815611</entry>
<entry>10/815623</entry>
<entry>10/815622</entry>
<entry>10/815629</entry>
<entry>10/815625</entry>
<entry>10/815624</entry>
<entry>10/815628</entry>
</row>
<row>
<entry>10/913375</entry>
<entry>10/913373</entry>
<entry>10/913374</entry>
<entry>10/913372</entry>
<entry>10/913377</entry>
<entry>10/913378</entry>
<entry>10/913380</entry>
</row>
<row>
<entry>10/913379</entry>
<entry>10/913376</entry>
<entry>10/913381</entry>
<entry>10/986402</entry>
<entry>11/172816</entry>
<entry>11/172815</entry>
<entry>11/172814</entry>
</row>
<row>
<entry>10/409876</entry>
<entry>10/409848</entry>
<entry>10/409845</entry>
<entry>11/084796</entry>
<entry>11/084742</entry>
<entry>11/084806</entry>
<entry>09/575197</entry>
</row>
<row>
<entry>09/575195</entry>
<entry>09/575159</entry>
<entry>09/575132</entry>
<entry>09/575123</entry>
<entry>09/575148</entry>
<entry>09/575130</entry>
<entry>09/575165</entry>
</row>
<row>
<entry>09/575153</entry>
<entry>09/693415</entry>
<entry>09/575118</entry>
<entry>09/609139</entry>
<entry>09/608970</entry>
<entry>09/575131</entry>
<entry>09/575116</entry>
</row>
<row>
<entry>09/575144</entry>
<entry>09/575139</entry>
<entry>09/575186</entry>
<entry>6681045</entry>
<entry>6678499</entry>
<entry>6679420</entry>
<entry>09/663599</entry>
</row>
<row>
<entry>09/607852</entry>
<entry>6728000</entry>
<entry>09/693219</entry>
<entry>09/575145</entry>
<entry>09/607656</entry>
<entry>09/693280</entry>
<entry>6766942</entry>
</row>
<row>
<entry>09/693515</entry>
<entry>09/663701</entry>
<entry>09/575192</entry>
<entry>6720985</entry>
<entry>09/609303</entry>
<entry>09/610095</entry>
<entry>09/609596</entry>
</row>
<row>
<entry>09/693705</entry>
<entry>09/693647</entry>
<entry>09/721895</entry>
<entry>09/721894</entry>
<entry>09/607843</entry>
<entry>09/693690</entry>
<entry>09/607605</entry>
</row>
<row>
<entry>09/608178</entry>
<entry>09/609553</entry>
<entry>09/609233</entry>
<entry>09/609149</entry>
<entry>09/608022</entry>
<entry>09/575181</entry>
<entry>09/722174</entry>
</row>
<row>
<entry>09/721896</entry>
<entry>10/291522</entry>
<entry>6718061</entry>
<entry>10/291523</entry>
<entry>10/291471</entry>
<entry>10/291470</entry>
<entry>10/291819</entry>
</row>
<row>
<entry>10/291481</entry>
<entry>10/291509</entry>
<entry>10/291825</entry>
<entry>10/291519</entry>
<entry>10/291575</entry>
<entry>10/291557</entry>
<entry>10/291661</entry>
</row>
<row>
<entry>10/291558</entry>
<entry>10/291587</entry>
<entry>10/291818</entry>
<entry>10/291576</entry>
<entry>10/291589</entry>
<entry>6714678</entry>
<entry>6644545</entry>
</row>
<row>
<entry>6609653</entry>
<entry>6651879</entry>
<entry>10/291555</entry>
<entry>10/291510</entry>
<entry>10/291592</entry>
<entry>10/291542</entry>
<entry>10/291820</entry>
</row>
<row>
<entry>10/291516</entry>
<entry>10/291363</entry>
<entry>10/291487</entry>
<entry>10/291520</entry>
<entry>10/291521</entry>
<entry>10/291556</entry>
<entry>10/291821</entry>
</row>
<row>
<entry>10/291525</entry>
<entry>10/291586</entry>
<entry>10/291822</entry>
<entry>10/291524</entry>
<entry>10/291553</entry>
<entry>10/291511</entry>
<entry>10/291585</entry>
</row>
<row>
<entry>10/291374</entry>
<entry>10/685523</entry>
<entry>10/685583</entry>
<entry>10/685455</entry>
<entry>10/685584</entry>
<entry>10/757600</entry>
<entry>10/804034</entry>
</row>
<row>
<entry>10/793933</entry>
<entry>10/853356</entry>
<entry>10/831232</entry>
<entry>10/884882</entry>
<entry>10/943875</entry>
<entry>10/943938</entry>
<entry>10/943874</entry>
</row>
<row>
<entry>10/943872</entry>
<entry>10/944044</entry>
<entry>10/943942</entry>
<entry>10/944043</entry>
<entry>10/949293</entry>
<entry>10/943877</entry>
<entry>10/965913</entry>
</row>
<row>
<entry>10/954170</entry>
<entry>10/981773</entry>
<entry>10/981626</entry>
<entry>10/981616</entry>
<entry>10/981627</entry>
<entry>10/974730</entry>
<entry>10/986337</entry>
</row>
<row>
<entry>10/992713</entry>
<entry>11/006536</entry>
<entry>11/020256</entry>
<entry>11/020106</entry>
<entry>11/020260</entry>
<entry>11/020321</entry>
<entry>11/020319</entry>
</row>
<row>
<entry>11/026045</entry>
<entry>11/059696</entry>
<entry>11/051032</entry>
<entry>11/059674</entry>
<entry>11/107944</entry>
<entry>11/107941</entry>
<entry>11/082940</entry>
</row>
<row>
<entry>11/082815</entry>
<entry>11/082827</entry>
<entry>11/082829</entry>
<entry>11/082956</entry>
<entry>11/083012</entry>
<entry>11/124256</entry>
<entry>11/123136</entry>
</row>
<row>
<entry>11/154676</entry>
<entry>11/159196</entry>
<entry>11/182002</entry>
<entry>11/202251</entry>
<entry>11/202252</entry>
<entry>11/202253</entry>
<entry>11/203200</entry>
</row>
<row>
<entry>11/202218</entry>
<entry>11/206778</entry>
<entry>11/203424</entry>
<entry>11/222977</entry>
<entry>09/575193</entry>
<entry>09/575156</entry>
<entry>09/609232</entry>
</row>
<row>
<entry>09/607844</entry>
<entry>6457883</entry>
<entry>09/693593</entry>
<entry>10/743671</entry>
<entry>11/033379</entry>
<entry>09/928055</entry>
<entry>09/927684</entry>
</row>
<row>
<entry>09/928108</entry>
<entry>09/927685</entry>
<entry>09/927809</entry>
<entry>09/575183</entry>
<entry>6789194</entry>
<entry>09/575150</entry>
<entry>6789191</entry>
</row>
<row>
<entry>10/900129</entry>
<entry>10/900127</entry>
<entry>10/913328</entry>
<entry>10/913350</entry>
<entry>10/982975</entry>
<entry>10/983029</entry>
<entry>6644642</entry>
</row>
<row>
<entry>6502614</entry>
<entry>6622999</entry>
<entry>6669385</entry>
<entry>10/322450</entry>
<entry>10/933285</entry>
<entry>10/949307</entry>
<entry>6549935</entry>
</row>
<row>
<entry>NPN004US</entry>
<entry>09/575187</entry>
<entry>6727996</entry>
<entry>6591884</entry>
<entry>6439706</entry>
<entry>6760119</entry>
<entry>09/575198</entry>
</row>
<row>
<entry>09/722148</entry>
<entry>09/722146</entry>
<entry>09/721861</entry>
<entry>6290349</entry>
<entry>6428155</entry>
<entry>6785016</entry>
<entry>09/608920</entry>
</row>
<row>
<entry>6741871</entry>
<entry>09/722171</entry>
<entry>09/721858</entry>
<entry>09/722142</entry>
<entry>10/171987</entry>
<entry>10/202021</entry>
<entry>10/291724</entry>
</row>
<row>
<entry>10/291512</entry>
<entry>10/291554</entry>
<entry>10/659027</entry>
<entry>10/659026</entry>
<entry>10/831242</entry>
<entry>10/884885</entry>
<entry>10/884883</entry>
</row>
<row>
<entry>10/901154</entry>
<entry>10/932044</entry>
<entry>10/962412</entry>
<entry>10/962510</entry>
<entry>10/962552</entry>
<entry>10/965733</entry>
<entry>10/965933</entry>
</row>
<row>
<entry>10/974742</entry>
<entry>10/982974</entry>
<entry>10/983018</entry>
<entry>10/986375</entry>
<entry>11/107817</entry>
<entry>11/148238</entry>
<entry>11/149160</entry>
</row>
<row>
<entry>09/693301</entry>
<entry>09/575174</entry>
<entry>09/575163</entry>
<entry>6474888</entry>
<entry>6627870</entry>
<entry>6724374</entry>
<entry>6788982</entry>
</row>
<row>
<entry>09/722141</entry>
<entry>6788293</entry>
<entry>09/722147</entry>
<entry>6737591</entry>
<entry>09/722172</entry>
<entry>09/693514</entry>
<entry>6792165</entry>
</row>
<row>
<entry>09/722088</entry>
<entry>6795593</entry>
<entry>10/291823</entry>
<entry>6768821</entry>
<entry>10/291366</entry>
<entry>10/291503</entry>
<entry>6797895</entry>
</row>
<row>
<entry>10/274817</entry>
<entry>10/782894</entry>
<entry>10/782895</entry>
<entry>10/778056</entry>
<entry>10/778058</entry>
<entry>10/778060</entry>
<entry>10/778059</entry>
</row>
<row>
<entry>10/778063</entry>
<entry>10/778062</entry>
<entry>10/778061</entry>
<entry>10/778057</entry>
<entry>10/846895</entry>
<entry>10/917468</entry>
<entry>10/917467</entry>
</row>
<row>
<entry>10/917466</entry>
<entry>10/917465</entry>
<entry>10/917356</entry>
<entry>10/948169</entry>
<entry>10/948253</entry>
<entry>10/948157</entry>
<entry>10/917436</entry>
</row>
<row>
<entry>10/943856</entry>
<entry>10/919379</entry>
<entry>10/943843</entry>
<entry>10/943878</entry>
<entry>10/943849</entry>
<entry>10/965751</entry>
<entry>11/071267</entry>
</row>
<row>
<entry>11/144840</entry>
<entry>11/155556</entry>
<entry>11/155557</entry>
<entry>11/193481</entry>
<entry>11/193435</entry>
<entry>11/193482</entry>
<entry>11/193479</entry>
</row>
<row>
<entry>09/575154</entry>
<entry>09/575129</entry>
<entry>09/575124</entry>
<entry>09/575188</entry>
<entry>09/721862</entry>
<entry>10/473747</entry>
<entry>10/120441</entry>
</row>
<row>
<entry>10/291577</entry>
<entry>10/291718</entry>
<entry>6789731</entry>
<entry>10/291543</entry>
<entry>6766944</entry>
<entry>6766945</entry>
<entry>10/291715</entry>
</row>
<row>
<entry>10/291559</entry>
<entry>10/291660</entry>
<entry>10/531734</entry>
<entry>10/409864</entry>
<entry>10/309358</entry>
<entry>10/537159</entry>
<entry>NPT022US</entry>
</row>
<row>
<entry>10/410484</entry>
<entry>10/884884</entry>
<entry>10/853379</entry>
<entry>10/786631</entry>
<entry>10/853782</entry>
<entry>10/893372</entry>
<entry>10/893381</entry>
</row>
<row>
<entry>10/893382</entry>
<entry>10/893383</entry>
<entry>10/893384</entry>
<entry>10/971051</entry>
<entry>10/971145</entry>
<entry>10/971146</entry>
<entry>10/986403</entry>
</row>
<row>
<entry>10/986404</entry>
<entry>10/990459</entry>
<entry>11/059684</entry>
<entry>11/074802</entry>
<entry>10/492169</entry>
<entry>10/492152</entry>
<entry>10/492168</entry>
</row>
<row>
<entry>10/492161</entry>
<entry>10/492154</entry>
<entry>10/502575</entry>
<entry>10/531229</entry>
<entry>10/683151</entry>
<entry>10/531733</entry>
<entry>10/683040</entry>
</row>
<row>
<entry>10/510391</entry>
<entry>10/919260</entry>
<entry>10/510392</entry>
<entry>10/919261</entry>
<entry>10/778090</entry>
<entry>09/575189</entry>
<entry>09/575162</entry>
</row>
<row>
<entry>09/575172</entry>
<entry>09/575170</entry>
<entry>09/575171</entry>
<entry>09/575161</entry>
<entry>10/291716</entry>
<entry>10/291547</entry>
<entry>10/291538</entry>
</row>
<row>
<entry>6786397</entry>
<entry>10/291827</entry>
<entry>10/291548</entry>
<entry>10/291714</entry>
<entry>10/291544</entry>
<entry>10/291541</entry>
<entry>10/291584</entry>
</row>
<row>
<entry>10/291579</entry>
<entry>10/291824</entry>
<entry>10/291713</entry>
<entry>10/291545</entry>
<entry>10/291546</entry>
<entry>10/917355</entry>
<entry>10/913340</entry>
</row>
<row>
<entry>10/940668</entry>
<entry>11/020160</entry>
<entry>11/039897</entry>
<entry>11/074800</entry>
<entry>11/074782</entry>
<entry>11/074777</entry>
<entry>11/075917</entry>
</row>
<row>
<entry>11/102698</entry>
<entry>11/102843</entry>
<entry>11/202112</entry>
</row>
<row>
<entry>6454482</entry>
<entry>09/693704</entry>
<entry>6527365</entry>
<entry>6474773</entry>
<entry>6550997</entry>
<entry>10/181496</entry>
<entry>10/274119</entry>
</row>
<row>
<entry>10/309185</entry>
<entry>10/309066</entry>
<entry>10/949288</entry>
<entry>10/962400</entry>
<entry>10/969121</entry>
<entry>11/185722</entry>
<entry>11/181754</entry>
</row>
<row>
<entry>11/203180</entry>
<entry>09/517539</entry>
<entry>6566858</entry>
<entry>09/112762</entry>
<entry>6331946</entry>
<entry>6246970</entry>
<entry>6442525</entry>
</row>
<row>
<entry>09/517384</entry>
<entry>09/505951</entry>
<entry>6374354</entry>
<entry>09/517608</entry>
<entry>09/505147</entry>
<entry>10/203564</entry>
<entry>6757832</entry>
</row>
<row>
<entry>6334190</entry>
<entry>6745331</entry>
<entry>09/517541</entry>
<entry>10/203559</entry>
<entry>10/203560</entry>
<entry>10/636263</entry>
<entry>10/636283</entry>
</row>
<row>
<entry>10/866608</entry>
<entry>10/902889</entry>
<entry>10/902833</entry>
<entry>10/940653</entry>
<entry>10/942858</entry>
<entry>10/727181</entry>
<entry>10/727162</entry>
</row>
<row>
<entry>10/727163</entry>
<entry>10/727245</entry>
<entry>10/727204</entry>
<entry>10/727233</entry>
<entry>10/727280</entry>
<entry>10/727157</entry>
<entry>10/727178</entry>
</row>
<row>
<entry>10/727210</entry>
<entry>10/727257</entry>
<entry>10/727238</entry>
<entry>10/727251</entry>
<entry>10/727159</entry>
<entry>10/727180</entry>
<entry>10/727179</entry>
</row>
<row>
<entry>10/727192</entry>
<entry>10/727274</entry>
<entry>10/727164</entry>
<entry>10/727161</entry>
<entry>10/727198</entry>
<entry>10/727158</entry>
<entry>10/754536</entry>
</row>
<row>
<entry>10/754938</entry>
<entry>10/727227</entry>
<entry>10/727160</entry>
<entry>10/934720</entry>
<entry>PEA30US</entry>
<entry>10/296522</entry>
<entry>6795215</entry>
</row>
<row>
<entry>10/296535</entry>
<entry>09/575109</entry>
<entry>10/296525</entry>
<entry>09/575110</entry>
<entry>09/607985</entry>
<entry>6398332</entry>
<entry>6394573</entry>
</row>
<row>
<entry>6622923</entry>
<entry>6747760</entry>
<entry>10/189459</entry>
<entry>10/884881</entry>
<entry>10/943941</entry>
<entry>10/949294</entry>
<entry>11/039866</entry>
</row>
<row>
<entry>11/123011</entry>
<entry>11/123010</entry>
<entry>11/144769</entry>
<entry>11/148237</entry>
<entry>10/922846</entry>
<entry>10/922845</entry>
<entry>10/854521</entry>
</row>
<row>
<entry>10/854522</entry>
<entry>10/854488</entry>
<entry>10/854487</entry>
<entry>10/854503</entry>
<entry>10/854504</entry>
<entry>10/854509</entry>
<entry>10/854510</entry>
</row>
<row>
<entry>10/854496</entry>
<entry>10/854497</entry>
<entry>10/854495</entry>
<entry>10/854498</entry>
<entry>10/854511</entry>
<entry>10/854512</entry>
<entry>10/854525</entry>
</row>
<row>
<entry>10/854526</entry>
<entry>10/854516</entry>
<entry>10/854508</entry>
<entry>10/854507</entry>
<entry>10/854515</entry>
<entry>10/854506</entry>
<entry>10/854505</entry>
</row>
<row>
<entry>10/854493</entry>
<entry>10/854494</entry>
<entry>10/854489</entry>
<entry>10/854490</entry>
<entry>10/854492</entry>
<entry>10/854491</entry>
<entry>10/854528</entry>
</row>
<row>
<entry>10/854523</entry>
<entry>10/854527</entry>
<entry>10/854524</entry>
<entry>10/854520</entry>
<entry>10/854514</entry>
<entry>10/854519</entry>
<entry>10/854513</entry>
</row>
<row>
<entry>10/854499</entry>
<entry>10/854501</entry>
<entry>10/854500</entry>
<entry>10/854502</entry>
<entry>10/854518</entry>
<entry>10/854517</entry>
<entry>10/934628</entry>
</row>
<row>
<entry>PLT046US</entry>
<entry>6405055</entry>
<entry>6628430</entry>
<entry>10/920230</entry>
<entry>10/920372</entry>
<entry>10/920229</entry>
<entry>10/919366</entry>
</row>
<row>
<entry>10/919241</entry>
<entry>10/919242</entry>
<entry>10/919243</entry>
<entry>10/919380</entry>
<entry>10/919381</entry>
<entry>10/919382</entry>
<entry>10/919383</entry>
</row>
<row>
<entry>10/920371</entry>
<entry>10/503924</entry>
<entry>10/503901</entry>
<entry>10/159626</entry>
<entry>10/159035</entry>
<entry>10/659023</entry>
<entry>10/659022</entry>
</row>
<row>
<entry>10/920219</entry>
<entry>10/920218</entry>
<entry>10/920220</entry>
<entry>10/920225</entry>
<entry>11/107942</entry>
<entry>11/107943</entry>
<entry>BAL119US</entry>
</row>
<row>
<entry>10/659025</entry>
<entry>10/659024</entry>
<entry>10/920221</entry>
<entry>10/920280</entry>
<entry>11/124158</entry>
<entry>11/124196</entry>
<entry>11/124199</entry>
</row>
<row>
<entry>11/124162</entry>
<entry>11/124202</entry>
<entry>11/124197</entry>
<entry>11/124154</entry>
<entry>11/124198</entry>
<entry>11/124153</entry>
<entry>11/124151</entry>
</row>
<row>
<entry>11/124160</entry>
<entry>11/124192</entry>
<entry>11/124175</entry>
<entry>11/124163</entry>
<entry>11/124149</entry>
<entry>11/124152</entry>
<entry>11/124173</entry>
</row>
<row>
<entry>11/124155</entry>
<entry>11/124157</entry>
<entry>11/124174</entry>
<entry>11/124194</entry>
<entry>11/124164</entry>
<entry>11/124200</entry>
<entry>11/124195</entry>
</row>
<row>
<entry>11/124166</entry>
<entry>11/124150</entry>
<entry>11/124172</entry>
<entry>11/124165</entry>
<entry>11/124186</entry>
<entry>11/124185</entry>
<entry>11/124184</entry>
</row>
<row>
<entry>11/124182</entry>
<entry>11/124201</entry>
<entry>11/124171</entry>
<entry>11/124181</entry>
<entry>11/124161</entry>
<entry>11/124156</entry>
<entry>11/124191</entry>
</row>
<row>
<entry>11/124159</entry>
<entry>11/124175</entry>
<entry>11/124188</entry>
<entry>11/124170</entry>
<entry>11/124187</entry>
<entry>11/124189</entry>
<entry>11/124190</entry>
</row>
<row>
<entry>11/124180</entry>
<entry>11/124193</entry>
<entry>11/124183</entry>
<entry>11/124178</entry>
<entry>11/124177</entry>
<entry>11/124148</entry>
<entry>11/124168</entry>
</row>
<row>
<entry>11/124167</entry>
<entry>11/124179</entry>
<entry>11/124169</entry>
<entry>11/187976</entry>
<entry>11/188011</entry>
<entry>11/188014</entry>
<entry>10/980187</entry>
</row>
<row>
<entry>11/003786</entry>
<entry>11/003354</entry>
<entry>11/003616</entry>
<entry>11/003418</entry>
<entry>11/003334</entry>
<entry>11/003600</entry>
<entry>11/003404</entry>
</row>
<row>
<entry>11/003419</entry>
<entry>11/003700</entry>
<entry>11/003601</entry>
<entry>11/003618</entry>
<entry>11/003615</entry>
<entry>11/003337</entry>
<entry>11/003698</entry>
</row>
<row>
<entry>11/003420</entry>
<entry>11/003682</entry>
<entry>11/003699</entry>
<entry>11/071473</entry>
<entry>11/003463</entry>
<entry>11/003701</entry>
<entry>11/003683</entry>
</row>
<row>
<entry>11/003614</entry>
<entry>11/003702</entry>
<entry>11/003684</entry>
<entry>11/003619</entry>
<entry>11/003617</entry>
<entry>10/760254</entry>
<entry>10/760210</entry>
</row>
<row>
<entry>10/760202</entry>
<entry>10/760197</entry>
<entry>10/760198</entry>
<entry>10/760249</entry>
<entry>10/760263</entry>
<entry>10/760196</entry>
<entry>10/760247</entry>
</row>
<row>
<entry>10/760223</entry>
<entry>10/760264</entry>
<entry>10/760244</entry>
<entry>10/760245</entry>
<entry>10/760222</entry>
<entry>10/760248</entry>
<entry>10/760236</entry>
</row>
<row>
<entry>10/760192</entry>
<entry>10/760203</entry>
<entry>10/760204</entry>
<entry>10/760205</entry>
<entry>10/760206</entry>
<entry>10/760267</entry>
<entry>10/760270</entry>
</row>
<row>
<entry>10/760259</entry>
<entry>10/760271</entry>
<entry>10/760275</entry>
<entry>10/760274</entry>
<entry>10/760268</entry>
<entry>10/760184</entry>
<entry>10/760195</entry>
</row>
<row>
<entry>10/760186</entry>
<entry>10/760261</entry>
<entry>10/760258</entry>
<entry>11/014764</entry>
<entry>11/014763</entry>
<entry>11/014748</entry>
<entry>11/014747</entry>
</row>
<row>
<entry>11/014761</entry>
<entry>11/014760</entry>
<entry>11/014757</entry>
<entry>11/014714</entry>
<entry>11/014713</entry>
<entry>11/014762</entry>
<entry>11/014724</entry>
</row>
<row>
<entry>11/014723</entry>
<entry>11/014756</entry>
<entry>11/014736</entry>
<entry>11/014759</entry>
<entry>11/014758</entry>
<entry>11/014725</entry>
<entry>11/014739</entry>
</row>
<row>
<entry>11/014738</entry>
<entry>11/014737</entry>
<entry>11/014726</entry>
<entry>11/014745</entry>
<entry>11/014712</entry>
<entry>11/014715</entry>
<entry>11/014751</entry>
</row>
<row>
<entry>11/014735</entry>
<entry>11/014734</entry>
<entry>11/014719</entry>
<entry>11/014750</entry>
<entry>11/014749</entry>
<entry>11/014746</entry>
<entry>11/014769</entry>
</row>
<row>
<entry>11/014729</entry>
<entry>11/014743</entry>
<entry>11/014733</entry>
<entry>11/014754</entry>
<entry>11/014755</entry>
<entry>11/014765</entry>
<entry>11/014766</entry>
</row>
<row>
<entry>11/014740</entry>
<entry>11/014720</entry>
<entry>11/014753</entry>
<entry>11/014752</entry>
<entry>11/014744</entry>
<entry>11/014741</entry>
<entry>11/014768</entry>
</row>
<row>
<entry>11/014767</entry>
<entry>11/014718</entry>
<entry>11/014717</entry>
<entry>11/014716</entry>
<entry>11/014732</entry>
<entry>11/014742</entry>
<entry>11/097268</entry>
</row>
<row>
<entry>11/097185</entry>
<entry>11/097184</entry>
<entry>10/728804</entry>
<entry>10/728952</entry>
<entry>10/728806</entry>
<entry>10/728834</entry>
<entry>10/729790</entry>
</row>
<row>
<entry>10/728884</entry>
<entry>10/728970</entry>
<entry>10/728784</entry>
<entry>10/728783</entry>
<entry>10/728925</entry>
<entry>10/728842</entry>
<entry>10/728803</entry>
</row>
<row>
<entry>10/728780</entry>
<entry>10/728779</entry>
<entry>10/773189</entry>
<entry>10/773204</entry>
<entry>10/773198</entry>
<entry>10/773199</entry>
<entry>10/773190</entry>
</row>
<row>
<entry>10/773201</entry>
<entry>10/773191</entry>
<entry>10/773183</entry>
<entry>10/773195</entry>
<entry>10/773196</entry>
<entry>10/773186</entry>
<entry>10/773200</entry>
</row>
<row>
<entry>10/773185</entry>
<entry>10/773192</entry>
<entry>10/773197</entry>
<entry>10/773203</entry>
<entry>10/773187</entry>
<entry>10/773202</entry>
<entry>10/773188</entry>
</row>
<row>
<entry>10/773194</entry>
<entry>10/773193</entry>
<entry>10/773184</entry>
<entry>11/008118</entry>
<entry>11/060751</entry>
<entry>11/060805</entry>
<entry>11/188017</entry>
</row>
<row>
<entry>6623101</entry>
<entry>6406129</entry>
<entry>6505916</entry>
<entry>6457809</entry>
<entry>6550895</entry>
<entry>6457812</entry>
<entry>10/296434</entry>
</row>
<row>
<entry>6428133</entry>
<entry>6746105</entry>
<entry>10/407212</entry>
<entry>10/407207</entry>
<entry>10/683064</entry>
<entry>10/683041</entry>
<entry>6750901</entry>
</row>
<row>
<entry>6476863</entry>
<entry>6788336</entry>
<entry>11/097308</entry>
<entry>11/097309</entry>
<entry>11/097335</entry>
<entry>11/097299</entry>
<entry>11/097310</entry>
</row>
<row>
<entry>11/097213</entry>
<entry>11/210687</entry>
<entry>11/097212</entry>
<entry>11/212637</entry>
<entry>10/760272</entry>
<entry>10/760273</entry>
<entry>10/760187</entry>
</row>
<row>
<entry>10/760182</entry>
<entry>10/760188</entry>
<entry>10/760218</entry>
<entry>10/760217</entry>
<entry>10/760216</entry>
<entry>10/760233</entry>
<entry>10/760246</entry>
</row>
<row>
<entry>10/760212</entry>
<entry>10/760243</entry>
<entry>10/760201</entry>
<entry>10/760185</entry>
<entry>10/760253</entry>
<entry>10/760255</entry>
<entry>10/760209</entry>
</row>
<row>
<entry>10/760208</entry>
<entry>10/760194</entry>
<entry>10/760238</entry>
<entry>10/760234</entry>
<entry>10/760235</entry>
<entry>10/760183</entry>
<entry>10/760189</entry>
</row>
<row>
<entry>10/760262</entry>
<entry>10/760232</entry>
<entry>10/760231</entry>
<entry>10/760200</entry>
<entry>10/760190</entry>
<entry>10/760191</entry>
<entry>10/760227</entry>
</row>
<row>
<entry>10/760207</entry>
<entry>10/760181</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<heading id="h-0004" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0008" num="0007">The assignee has developed mobile or cellular telephones, Personal Data Assistants (PDAs) and other mobile telecommunication devices, with the ability to print hard copies of content, such as images or information stored or accessed by the device, (see for example, U.S. Pat. No. 6,405,055, filed on Nov. 9, 1999). Likewise, the assignee has also designed digital cameras with the ability to print captured images with an in-built printer (see for example, U.S. Pat. No. 6,750,901, filed on Jul. 10, 1998). As the prevalence of mobile telecommunications devices increases, the functionality of these devices is further enhanced by the ability to print hard copies.</p>
<p id="p-0009" num="0008">As these devices are portable, they should be compact for user convenience. Accordingly, any printer incorporated into the device needs to maintain a small form factor. Also, the additional load on the battery should be relatively small. Furthermore, the consumables (such as ink, paper, etc.) should be relatively inexpensive and simple to replenish. It is these factors that strongly influence the commercial success or otherwise of products of this type.</p>
<p id="p-0010" num="0009">The assignee of the present invention has also developed the Netpage system for enabling interaction with computer software using a printed interface and a proprietary stylus-shaped sensing device. As described in detail in U.S. Pat. No. 6,792,165, filed on Nov. 25, 2000 and U.S. patent application Ser. No. 10/778,056, filed on Feb. 17, 2004, a Netpage pen captures, identifies and decodes tags of coded data printed onto a surface such as a page. In a preferred Netpage implementation, each tag encodes a position and an identity of the document. By decoding at least one of the tags and transmitting the position (or a refined version of the position, representing a higher resolution position of the pen) and identity referred to by the decoded tag, a remote computer can determine an action to perform. Such actions can include, for example, causing information to be saved remotely for subsequent retrieval, downloading of a webpage for printing or display via a computer, bill payment or even the performance of handwriting recognition based on a series of locations of the Netpage pen relative to the surface.</p>
<p id="p-0011" num="0010">When printing a Netpage, a printer in a mobile telecommunications device can print the Netpage tags simultaneously with visible user information. The association between the tags and information can already exist on a remote Netpage server, such as where the printer is printing a fully rendered page (including tags) provided by the Netpage server or another computer. Alternatively, the mobile telecommunications device can generate the tags (or source them remotely) and define an association between the tags and user information. The association is then recorded in the remote Netpage server.</p>
<p id="p-0012" num="0011">A problem with these options is that they require the mobile telecommunications device to include Netpage tag printing capabilities. This requires an additional row of print nozzles in the printhead, and reduces the amounts of ink that can be stored for non-tag use. Whilst this is less of an issue with large, mains-powered printers, it can be an issue in small form-factor articles such as mobile telecommunications devices. Alternatively, the mobile telecommunications device can be configured to print on print media that is pre-printed with Netpage tags. That way the printer need only print the user information and record an association between the visible information and the pre-printed tags.</p>
<p id="p-0013" num="0012">It is desirable to provide functional applications making use of the mobile telecommunications device. Such applications can include, for example, mobile printing applications, linking, capturing and/or printing generic or specific objects to a print medium, and many other applications providing functionality to the mobile telecommunications device and various uses of types of print media.</p>
<heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0014" num="0013">In one particular, but non-limiting, aspect, an M-Print device is a mobile device such as a telephone or PDA which incorporates a printer. Paper is either manually presented or auto-fed from a cartridge, depending on device form factor. The printer may or may not print tags, for example infrared tags, and the printer or a sensor detects tags printed, for example pre-printed, onto blank media. The paper path either includes a tag reader, or it includes a simpler sensor for reading a linear data track on the card. The data track can encode the same identifier as the tags. Reading the identifier allows the M-Print device to associate the card's graphic and/or interactive content with the identifier. This allows subsequent interactions with the card to be properly interpreted. The graphic and/or interactive content is stored on a network-based server, indexed by the identifier.</p>
<p id="p-0015" num="0014">It should be noted that the media identifier (i.e. print media identifier) may correspond to a range of 2D coordinates without an explicit single media identifier. Hence, reference to the media identifier is to be read as a reference to an explicit or defined one or more media identifiers, or, as a reference to a range of 2D coordinates.</p>
<p id="p-0016" num="0015">The device also optionally incorporates a pointer. The pointer may be used to click on a hyperlink, but generally doesn't operate at a sufficiently high rate to capture motion. Alternatively, the telephone may incorporate a fully-functional Netpage-type pen. Even when the M-Print device doesn't incorporate a pointer, the user can interact with printed cards by feeding them through the paper path. The data track reader or tag reader in the paper path extracts the identifier, which allows the device to identify the graphic and/or interactive content of the card, and object(s) linked to the card. Not all M-Print cards have to be produced by an M-Print device. For example, pre-printed M-Print cards of a collectible or promotional nature may be included in cereal packets or magazines. And even blank media may bear advertising on the reverse side. Not all M-Print cards have to be interacted with via a pointer in an M-Print device. They can be interacted with via any device, or another scanning device altogether which can read the data track or an application-specific printed barcode.</p>
<p id="p-0017" num="0016">An M-Print card acts as a token for the graphic and/or interactive content of the card, including any objects linked to the card. A user can easily obtain the original digital content of the card by clicking on the card or &#x2018;virtually scanning&#x2019; the card through the paper path. For example, a photo acts as a token for the original digital image, and a business card acts as a token for the contact details linked to the card. By acting as a token for its own content, a card allows a user to obtain a perfect re-print. In addition to the identifier, the data track and the tags encode a digital signature which allows the card to be authenticated. This has two purposes. Firstly, it allows a blank card to be authenticated during printing to prevent the use of non-sanctioned blanks. Secondly, it allows a card to be authenticated when used as a token, to prevent fraudulent access to the content of the card or objects linked to the card.</p>
<p id="p-0018" num="0017">Various applications are possible using aspects, components or features of the mobile telecommunications device and associated coded print medium. Such applications can include mobile printing applications, linking, capturing and/or printing generic or specific objects to a print medium, and many other applications providing practical uses for the coded print medium and/or the mobile telecommunications device. Various particular applications are herein described.</p>
<p id="p-0019" num="0018">In a first aspect there is provided a method of generating an association between a sticker and an object of an object type, the sticker having disposed therein or thereon coded data at least partially indicative of a sticker identity and the object type, the method including, in a computer system:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0019">receiving indicating data from a sensing device, the indicating data being at least partially indicative of the identity of the sticker and the object type, the sensing device, when placed in an operative position relative to the sticker, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</li>
        <li id="ul0002-0002" num="0020">identifying, using the indicating data, the identity of the sticker, the object type and the object of the object type; and,</li>
        <li id="ul0002-0003" num="0021">generating an association based at least partially on the sticker identity and the object.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0020" num="0022">Optionally the object is stored in an object repository, the method including, in the computer system:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0023">generating the association based at least partially on the object stored in the object repository.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0021" num="0024">Optionally the method includes, in the computer system:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0025">receiving object data indicative of at least one received object; and,</li>
        <li id="ul0006-0002" num="0026">storing, using the received object data, the at least one received object in the object repository.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0022" num="0027">Optionally the method includes, in the computer system:
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0000">
    <ul id="ul0008" list-style="none">
        <li id="ul0008-0001" num="0028">selecting, using the object type, a stored object having the object type to be associated with the sticker identity.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0023" num="0029">Optionally the method includes, in the computer system:
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0000">
    <ul id="ul0010" list-style="none">
        <li id="ul0010-0001" num="0030">receiving, from the sensing device, indicating data indicative of a value related to at least some of the coded data; and,</li>
        <li id="ul0010-0002" num="0031">determining, using the value, the object type for selecting an object to be associated with the sticker.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0024" num="0032">Optionally the object type includes at least one of:
<ul id="ul0011" list-style="none">
    <li id="ul0011-0001" num="0000">
    <ul id="ul0012" list-style="none">
        <li id="ul0012-0001" num="0033">a video object;</li>
        <li id="ul0012-0002" num="0034">an image object;</li>
        <li id="ul0012-0003" num="0035">a audio object;</li>
        <li id="ul0012-0004" num="0036">a text object;</li>
        <li id="ul0012-0005" num="0037">a file object; and,</li>
        <li id="ul0012-0006" num="0038">a data object.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0025" num="0039">Optionally the coded data is at least partially indicative of at least one interactive element, the at least one interactive element being related to at least one action, the method including, in the computer system:
<ul id="ul0013" list-style="none">
    <li id="ul0013-0001" num="0000">
    <ul id="ul0014" list-style="none">
        <li id="ul0014-0001" num="0040">receiving, from the sensing device, indicating data at least partially indicative of the at least one action, the sensing device, when placed in an operative position relative to the at least one interactive element, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</li>
        <li id="ul0014-0002" num="0041">identifying, using the indicating data, the at least one action; and,</li>
        <li id="ul0014-0003" num="0042">generating, using the at least one action, the association.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0026" num="0043">Optionally the objects stored in the object repository are ordered according to when a received object was stored in the object repository, the method including, in the computer system:
<ul id="ul0015" list-style="none">
    <li id="ul0015-0001" num="0000">
    <ul id="ul0016" list-style="none">
        <li id="ul0016-0001" num="0044">updating, using the received object data, the order of received objects in the object repository;</li>
        <li id="ul0016-0002" num="0045">determining, using the order indicated by the object repository, a stored object which has been most recently stored in the object repository; and,</li>
        <li id="ul0016-0003" num="0046">generating an association based at least partially on the most recently stored object.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0027" num="0047">Optionally the method includes, in the computer system:
<ul id="ul0017" list-style="none">
    <li id="ul0017-0001" num="0000">
    <ul id="ul0018" list-style="none">
        <li id="ul0018-0001" num="0048">recording the generated association in the computer system.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0028" num="0049">Optionally the method includes, in the computer system:
<ul id="ul0019" list-style="none">
    <li id="ul0019-0001" num="0000">
    <ul id="ul0020" list-style="none">
        <li id="ul0020-0001" num="0050">deleting, from the object repository, the stored object after generating the association.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0029" num="0051">Optionally object repository is located on a server, the method including, in a computer system:
<ul id="ul0021" list-style="none">
    <li id="ul0021-0001" num="0000">
    <ul id="ul0022" list-style="none">
        <li id="ul0022-0001" num="0052">storing, using the received object data, the received object in the object repository located on the server;</li>
        <li id="ul0022-0002" num="0053">retrieving, using the object repository located on the server, the stored object to be associated with the sticker identity; and,</li>
        <li id="ul0022-0003" num="0054">recording, in the server, the generated association.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0030" num="0055">Optionally the method includes, in the computer system:
<ul id="ul0023" list-style="none">
    <li id="ul0023-0001" num="0000">
    <ul id="ul0024" list-style="none">
        <li id="ul0024-0001" num="0056">receiving object data indicative of an object identity of the received object;</li>
        <li id="ul0024-0002" num="0057">storing the object identity in the object repository; and,</li>
        <li id="ul0024-0003" num="0058">generating an association based at least partially on the object identity.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0031" num="0059">Optionally the generated association is indicative of:
<ul id="ul0025" list-style="none">
    <li id="ul0025-0001" num="0000">
    <ul id="ul0026" list-style="none">
        <li id="ul0026-0001" num="0060">the sticker identity;</li>
        <li id="ul0026-0002" num="0061">the object.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0032" num="0062">Optionally if the object repository is empty, the method includes, in the computer system:
<ul id="ul0027" list-style="none">
    <li id="ul0027-0001" num="0000">
    <ul id="ul0028" list-style="none">
        <li id="ul0028-0001" num="0063">indicating an error when an association cannot be generated.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0033" num="0064">Optionally the association is generated according to a user identity, wherein the method includes, in the computer system:
<ul id="ul0029" list-style="none">
    <li id="ul0029-0001" num="0000">
    <ul id="ul0030" list-style="none">
        <li id="ul0030-0001" num="0065">storing, using the received object data, the received object associated with the user identity in the object repository.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0034" num="0066">Optionally the method includes, in the computer system:
<ul id="ul0031" list-style="none">
    <li id="ul0031-0001" num="0000">
    <ul id="ul0032" list-style="none">
        <li id="ul0032-0001" num="0067">determining, using the object repository and the user identity, a stored object to be associated with the sticker identity.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0035" num="0068">Optionally the coded data is indicative of at least one location on the sticker, the method including, in the computer system:
<ul id="ul0033" list-style="none">
    <li id="ul0033-0001" num="0000">
    <ul id="ul0034" list-style="none">
        <li id="ul0034-0001" num="0069">receiving the indicating data indicative of at least one position of the sensing device relative to the sticker, the sensing device being responsive to sensing at least some of the coded data to generate the indicating data;</li>
        <li id="ul0034-0002" num="0070">identifying, using the indicating data, the at least one position; and,</li>
        <li id="ul0034-0003" num="0071">generating an association based at least partially on the at least one position.</li>
        <li id="ul0034-0004" num="0072">Optionally the coded data is substantially invisible to an unaided human.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0036" num="0073">Optionally the coded data is printed on the sticker using at least one of:
<ul id="ul0035" list-style="none">
    <li id="ul0035-0001" num="0000">
    <ul id="ul0036" list-style="none">
        <li id="ul0036-0001" num="0074">an invisible ink; and,</li>
        <li id="ul0036-0002" num="0075">an infrared-absorptive ink.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0037" num="0076">In a further aspect there is provided a computer system configured to generate an association between a sticker and an object of an object type, the sticker having disposed therein or thereon coded data at least partially indicative of a sticker identity and the object type, the computer system being configured to:
<ul id="ul0037" list-style="none">
    <li id="ul0037-0001" num="0000">
    <ul id="ul0038" list-style="none">
        <li id="ul0038-0001" num="0077">receive indicating data from a sensing device, the indicating data being at least partially indicative of the identity of the sticker and the object type, the sensing device, when placed in an operative position relative to the sticker, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</li>
        <li id="ul0038-0002" num="0078">identify, using the indicating data, the identity of the sticker, the object type and the object of the object type; and,</li>
        <li id="ul0038-0003" num="0079">generate an association based at least partially on the sticker identity and the object.</li>
    </ul>
    </li>
</ul>
</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0038" num="0080">An example embodiment of the present invention should become apparent from the following description, which is given by way of example only, of a preferred but non-limiting embodiment, described in connection with the accompanying figures.</p>
<p id="p-0039" num="0081"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example High Level Architecture;</p>
<p id="p-0040" num="0082"><figref idref="DRAWINGS">FIG. 2</figref> illustrates example M-Doc Retriever Components;</p>
<p id="p-0041" num="0083"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example Nugget Generation Service;</p>
<p id="p-0042" num="0084"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example Player;</p>
<p id="p-0043" num="0085"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example PlayRequest;</p>
<p id="p-0044" num="0086"><figref idref="DRAWINGS">FIG. 6</figref> illustrates example Values, Types and Categories;</p>
<p id="p-0045" num="0087"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example interactive business card;</p>
<p id="p-0046" num="0088"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an example Player Sequence;</p>
<p id="p-0047" num="0089"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an example RequestRouter and related classes;</p>
<p id="p-0048" num="0090"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an example UserRequestRouter;</p>
<p id="p-0049" num="0091"><figref idref="DRAWINGS">FIG. 11</figref> illustrates a typical arrangement of routers and player agents in a Netpage system;</p>
<p id="p-0050" num="0092"><figref idref="DRAWINGS">FIG. 12</figref> illustrates example Capability and Request Propagation;</p>
<p id="p-0051" num="0093"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example Capability Aggregation;</p>
<p id="p-0052" num="0094"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an example Capability Transformation;</p>
<p id="p-0053" num="0095"><figref idref="DRAWINGS">FIG. 15</figref> illustrates example PlayerProfiles;</p>
<p id="p-0054" num="0096"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an example Printed Interface for selecting the current player profile;</p>
<p id="p-0055" num="0097"><figref idref="DRAWINGS">FIG. 17</figref> illustrates example PlayRequests embedded in an interactive document;</p>
<p id="p-0056" num="0098"><figref idref="DRAWINGS">FIG. 18</figref> illustrates an example Request Routing;</p>
<p id="p-0057" num="0099"><figref idref="DRAWINGS">FIG. 19</figref> illustrates an example Synchronous Messaging Sequence Diagram;</p>
<p id="p-0058" num="0100"><figref idref="DRAWINGS">FIG. 20</figref> illustrates an example Asynchronous Messaging Communication Sequence;</p>
<p id="p-0059" num="0101"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an example Streaming Messaging Sequence;</p>
<p id="p-0060" num="0102"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an example Interactive Messaging Sequence;</p>
<p id="p-0061" num="0103"><figref idref="DRAWINGS">FIG. 23</figref> illustrates an example Hybrid Messaging Sequence;</p>
<p id="p-0062" num="0104"><figref idref="DRAWINGS">FIG. 24</figref> illustrates an example Player Session Sequence Diagram;</p>
<p id="p-0063" num="0105"><figref idref="DRAWINGS">FIG. 25</figref> illustrates an example Player Session Detailed Sequence Diagram;</p>
<p id="p-0064" num="0106"><figref idref="DRAWINGS">FIG. 26</figref> illustrates an example Desktop Player Deployment;</p>
<p id="p-0065" num="0107"><figref idref="DRAWINGS">FIG. 27</figref> illustrates an example Short-Range Thin Mobile Player Deployment;</p>
<p id="p-0066" num="0108"><figref idref="DRAWINGS">FIG. 28</figref> illustrates an example Long-Range Thin Mobile Player Deployment;</p>
<p id="p-0067" num="0109"><figref idref="DRAWINGS">FIG. 29</figref> illustrates an example Smart Mobile Player;</p>
<p id="p-0068" num="0110"><figref idref="DRAWINGS">FIG. 30</figref> illustrates an Object association being displayed in a physical Player Device;</p>
<p id="p-0069" num="0111"><figref idref="DRAWINGS">FIG. 31</figref> illustrates an Object association being displayed in the Explorer application;</p>
<p id="p-0070" num="0112"><figref idref="DRAWINGS">FIG. 32</figref> illustrates a Creation of an impression object association;</p>
<p id="p-0071" num="0113"><figref idref="DRAWINGS">FIG. 33</figref> illustrates an example Tagged Sticker;</p>
<p id="p-0072" num="0114"><figref idref="DRAWINGS">FIG. 34</figref> illustrates an example Reusable Sticker;</p>
<p id="p-0073" num="0115"><figref idref="DRAWINGS">FIG. 35</figref> illustrates an example Sticker with &#x201c;Confirm Action&#x201d;;</p>
<p id="p-0074" num="0116"><figref idref="DRAWINGS">FIG. 36</figref> illustrates an example Sticker with limited interactive areas to prevent accidental invocation of destructive operations;</p>
<p id="p-0075" num="0117"><figref idref="DRAWINGS">FIG. 37</figref> illustrates example Category Specific Stickers;</p>
<p id="p-0076" num="0118"><figref idref="DRAWINGS">FIG. 38</figref> illustrates an example Swipe based printed toolbar for creating impression associations;</p>
<p id="p-0077" num="0119"><figref idref="DRAWINGS">FIG. 39</figref> illustrates an example Swipe Based Sticker with Transparent Region;</p>
<p id="p-0078" num="0120"><figref idref="DRAWINGS">FIG. 40</figref> illustrates an example Swipe Based Sticker with Graphics over the Transparent Region;</p>
<p id="p-0079" num="0121"><figref idref="DRAWINGS">FIG. 41</figref> illustrates an example Impression Associations Object Model;</p>
<p id="p-0080" num="0122"><figref idref="DRAWINGS">FIG. 42</figref> illustrates example Field Associations in the Netpage Server;</p>
<p id="p-0081" num="0123"><figref idref="DRAWINGS">FIG. 43</figref> illustrates an example Object Association Sample Application;</p>
<p id="p-0082" num="0124"><figref idref="DRAWINGS">FIG. 44</figref> illustrates an example Underlying Form;</p>
<p id="p-0083" num="0125"><figref idref="DRAWINGS">FIG. 45</figref> illustrates an example Overlayed Form;</p>
<p id="p-0084" num="0126"><figref idref="DRAWINGS">FIG. 46</figref> illustrates an example Printed Contacts with Phone Numbers;</p>
<p id="p-0085" num="0127"><figref idref="DRAWINGS">FIG. 47</figref> illustrates an example State machine for basic clipboard interaction;</p>
<p id="p-0086" num="0128"><figref idref="DRAWINGS">FIG. 48</figref> illustrates an example interactive Netpage card with common operations;</p>
<p id="p-0087" num="0129"><figref idref="DRAWINGS">FIG. 49</figref> illustrates an example State machine for operation based clipboard;</p>
<p id="p-0088" num="0130"><figref idref="DRAWINGS">FIG. 50</figref> illustrates simultaneously supporting both object first and command first models;</p>
<p id="p-0089" num="0131"><figref idref="DRAWINGS">FIG. 51</figref> illustrates example Single use clipboard entries;</p>
<p id="p-0090" num="0132"><figref idref="DRAWINGS">FIG. 52</figref> illustrates an example Single-use clipboard with timeouts;</p>
<p id="p-0091" num="0133"><figref idref="DRAWINGS">FIG. 53</figref> illustrates an example Multi-use clipboard with timeouts;</p>
<p id="p-0092" num="0134"><figref idref="DRAWINGS">FIG. 54</figref> illustrates an example Interactive card for selecting a printer;</p>
<p id="p-0093" num="0135"><figref idref="DRAWINGS">FIG. 55</figref> illustrates example Field details of printer selection card;</p>
<p id="p-0094" num="0136"><figref idref="DRAWINGS">FIG. 56</figref> illustrates an example Netpage form containing various commands;</p>
<p id="p-0095" num="0137"><figref idref="DRAWINGS">FIG. 57</figref> illustrates an example Command form showing details of office printer field;</p>
<p id="p-0096" num="0138"><figref idref="DRAWINGS">FIG. 58</figref> illustrates an example SMS Based Downloadable Content Purchase;</p>
<p id="p-0097" num="0139"><figref idref="DRAWINGS">FIG. 59</figref> illustrates an example Netpage Play Sequence for Previewing a Ringtone;</p>
<p id="p-0098" num="0140"><figref idref="DRAWINGS">FIG. 60</figref> illustrates an example Using play requests to deliver the product;</p>
<p id="p-0099" num="0141"><figref idref="DRAWINGS">FIG. 61</figref> illustrates an example Using play requests to purchase the product, and traditional delivery;</p>
<p id="p-0100" num="0142"><figref idref="DRAWINGS">FIG. 62</figref> illustrates an example Hybrid approach using traditional delivery on the last hop to the handset;</p>
<p id="p-0101" num="0143"><figref idref="DRAWINGS">FIG. 63</figref> illustrates an example Load card;</p>
<p id="p-0102" num="0144"><figref idref="DRAWINGS">FIG. 64</figref> illustrates an example Validating an ID;</p>
<p id="p-0103" num="0145"><figref idref="DRAWINGS">FIG. 65</figref> illustrates an example High level printing sequence;</p>
<p id="p-0104" num="0146"><figref idref="DRAWINGS">FIG. 66</figref> illustrates an example High level sequence diagram for uploading from a mobile device;</p>
<p id="p-0105" num="0147"><figref idref="DRAWINGS">FIG. 67</figref> illustrates an example High level sequence diagram for downloading to a mobile device, using a SMS alert to trigger the download;</p>
<p id="p-0106" num="0148"><figref idref="DRAWINGS">FIG. 68</figref> illustrates an example Sequence fragment showing the processing of scanned ID;</p>
<p id="p-0107" num="0149"><figref idref="DRAWINGS">FIG. 69</figref> illustrates an example Local Photo Printing Sequence;</p>
<p id="p-0108" num="0150"><figref idref="DRAWINGS">FIG. 70</figref> illustrates an example Printing Uploads to a Photo Archive;</p>
<p id="p-0109" num="0151"><figref idref="DRAWINGS">FIG. 71</figref> illustrates an example Capturing a Netpage document via printing;</p>
<p id="p-0110" num="0152"><figref idref="DRAWINGS">FIG. 72</figref> illustrates an example Business Card;</p>
<p id="p-0111" num="0153"><figref idref="DRAWINGS">FIG. 73</figref> illustrates example Business Card Phone Number Fields;</p>
<p id="p-0112" num="0154"><figref idref="DRAWINGS">FIG. 74</figref> illustrates an example Business Card Fax Field;</p>
<p id="p-0113" num="0155"><figref idref="DRAWINGS">FIG. 75</figref> illustrates an example Business Card Web URL Field;</p>
<p id="p-0114" num="0156"><figref idref="DRAWINGS">FIG. 76</figref> illustrates example Business Card SMS and MMS Fields;</p>
<p id="p-0115" num="0157"><figref idref="DRAWINGS">FIG. 77</figref> illustrates an example Business Card Email Field;</p>
<p id="p-0116" num="0158"><figref idref="DRAWINGS">FIG. 78</figref> illustrates an example Street Address Field;</p>
<p id="p-0117" num="0159"><figref idref="DRAWINGS">FIG. 79</figref> illustrates an example Business Card Photo and Name Field;</p>
<p id="p-0118" num="0160"><figref idref="DRAWINGS">FIG. 80</figref> illustrates an example Business Card Identifier Field;</p>
<p id="p-0119" num="0161"><figref idref="DRAWINGS">FIG. 81</figref> illustrates an example Printed photo card;</p>
<p id="p-0120" num="0162"><figref idref="DRAWINGS">FIG. 82</figref> illustrates example Interactive fields for photo card;</p>
<p id="p-0121" num="0163"><figref idref="DRAWINGS">FIG. 83</figref> illustrates an example Scanning of an M-Print printout;</p>
<p id="p-0122" num="0164"><figref idref="DRAWINGS">FIG. 84</figref> illustrates an example Sequence diagram for generating Netpage clicks from a mobile device GUI;</p>
<p id="p-0123" num="0165"><figref idref="DRAWINGS">FIG. 85</figref> illustrates a schematic representation of the modular interaction in a printer/mobile phone;</p>
<p id="p-0124" num="0166"><figref idref="DRAWINGS">FIG. 86</figref> illustrates a schematic representation of the modular interaction in a tag sensor/mobile phone;</p>
<p id="p-0125" num="0167"><figref idref="DRAWINGS">FIG. 87</figref> illustrates a schematic representation of the modular interaction in a printer/tag sensor/mobile phone;</p>
<p id="p-0126" num="0168"><figref idref="DRAWINGS">FIG. 88</figref> is a more detailed schematic representation of the architecture within the mobile phone of <figref idref="DRAWINGS">FIG. 87</figref>;</p>
<p id="p-0127" num="0169"><figref idref="DRAWINGS">FIG. 89</figref> is a more detailed schematic representation of the architecture within the mobile phone module of <figref idref="DRAWINGS">FIG. 88</figref>;</p>
<p id="p-0128" num="0170"><figref idref="DRAWINGS">FIG. 90</figref> is a more detailed schematic representation of the architecture within the printer module of <figref idref="DRAWINGS">FIG. 88</figref>;</p>
<p id="p-0129" num="0171"><figref idref="DRAWINGS">FIG. 91</figref> is a more detailed schematic representation of the architecture within the tag sensor module of <figref idref="DRAWINGS">FIG. 88</figref>;</p>
<p id="p-0130" num="0172"><figref idref="DRAWINGS">FIG. 92</figref> is a schematic representation of the architecture within a tag decoder module for use instead of the tag sensor module of <figref idref="DRAWINGS">FIG. 88</figref>;</p>
<p id="p-0131" num="0173"><figref idref="DRAWINGS">FIG. 93</figref> illustrates an exploded perspective view of a &#x201c;candy bar&#x201d; type mobile phone embodiment;</p>
<p id="p-0132" num="0174"><figref idref="DRAWINGS">FIG. 94</figref> illustrates a partially cut away front and bottom view of the embodiment shown in <figref idref="DRAWINGS">FIG. 93</figref>;</p>
<p id="p-0133" num="0175"><figref idref="DRAWINGS">FIG. 95</figref> illustrates a partially cut away rear and bottom view of the embodiment shown in <figref idref="DRAWINGS">FIG. 93</figref>;</p>
<p id="p-0134" num="0176"><figref idref="DRAWINGS">FIG. 96</figref> illustrates a front elevation of the embodiment shown in <figref idref="DRAWINGS">FIG. 93</figref> with a card being fed into the entry slot;</p>
<p id="p-0135" num="0177"><figref idref="DRAWINGS">FIG. 97</figref> illustrates a cross section view taken along line A-A of <figref idref="DRAWINGS">FIG. 96</figref>;</p>
<p id="p-0136" num="0178"><figref idref="DRAWINGS">FIG. 98</figref> illustrates a cross section view taken along line A-A of <figref idref="DRAWINGS">FIG. 96</figref> with the card emerging from the media exit slot of the mobile phone;</p>
<p id="p-0137" num="0179"><figref idref="DRAWINGS">FIG. 99</figref> illustrates a lateral cross section through a print cartridge;</p>
<p id="p-0138" num="0180"><figref idref="DRAWINGS">FIG. 100</figref> illustrates the media coding on the card with separate clock and data tracks;</p>
<p id="p-0139" num="0181"><figref idref="DRAWINGS">FIG. 101</figref> illustrates a block diagram of an M-print system that uses media with separate clock and data tracks;</p>
<p id="p-0140" num="0182"><figref idref="DRAWINGS">FIG. 102</figref> illustrates a simplified circuit diagram for an optical encoder;</p>
<p id="p-0141" num="0183"><figref idref="DRAWINGS">FIG. 103</figref> illustrates a block diagram of the MoPEC with the clock and data inputs;</p>
<p id="p-0142" num="0184"><figref idref="DRAWINGS">FIG. 104</figref> illustrates a block diagram of the optional edge detector and page sync generator for the M-print system of <figref idref="DRAWINGS">FIG. 101</figref>;</p>
<p id="p-0143" num="0185"><figref idref="DRAWINGS">FIG. 105</figref> illustrates a block diagram of a MoPEC that uses media with a pilot sequence in the data track to generate a page sync signal;</p>
<p id="p-0144" num="0186"><figref idref="DRAWINGS">FIG. 106</figref> illustrates a schematic representation of the position of the encoders along the media feed path.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0007" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0145" num="0187">The following modes, given by way of example only, are described in order to provide a more precise understanding of the subject matter of a preferred embodiment or embodiments. In the figures, incorporated to illustrate features of an example embodiment, like reference numerals are used to identify like parts throughout the figures.</p>
<p id="h-0008" num="0000">1.0 Printing Internet Based Content Product Architecture</p>
<p id="p-0146" num="0188">An example of a M-Print print media is the size of a business card. In general, documents or web based materials that have been designed for display on a desktop monitor or to be printed on A4 or Letter paper and may not print well on such sized media. If the content is reduced for the business card media then the content may be too small for easy reading. If multiple pages of media are used to print a page then the user is required to assemble the pages in the correct order before the printout is meaningful. To have presentable, effective content on a business card sized media the content should be specifically authored for that sized media. Described herein is a general mechanism to allow the authors and providers of web applications and web sites to make explicit use of the new media size, such as a business card.</p>
<p id="p-0147" num="0189">The term &#x201c;Mobile Document&#x201d; or M-Doc is herein used to refer to documents specifically authored to be printed via M-Print. The format of a &#x201c;Mobile Document&#x201d; (i.e. print medium) may vary, it can be pre-rendered and in a format ready to be sent directly to the printer, or it can be in a higher level format that requires rendering before printing. On some mobile devices it is not be possible to render the &#x201c;Mobile Document&#x201d; on the device, thus the &#x201c;Mobile Document&#x201d; is rendered before being sent to the mobile device. In regard of other mobile devices, the &#x201c;Mobile Document&#x201d; can be sent in the high level format and rendered on the mobile device. In general, to be able to render on the device the &#x201c;Mobile Document&#x201d; format is provided in an encapsulated format that contains the data necessary to render the M-Doc. Thus, by providing the M-Doc in an encapsulated format, the M-Doc does not necessarily have to rely on a particular font or bitmap being available on the mobile device (i.e. mobile telecommunications device).</p>
<p id="p-0148" num="0190">A common usage of a &#x201c;Mobile Document&#x201d; is for the author of a web page to summarise contents of the web-page in a &#x201c;Mobile Document&#x201d;, which will herein be referred to as a &#x201c;Nugget&#x201d;, and to provide a link on the page for users to print the nugget. When the web page is static HTML the content of the nugget can also be static. If the web page is dynamic HTML then it is likely the content of the nugget may also have to be dynamically created.</p>
<p id="p-0149" num="0191">Current 2.5 G mobile data networks have low bandwidth, high latency, and are expensive to transfer data over. The emerging 3 G networks improve the bandwidth and latency but are still expensive to transfer data over. Mobile carriers tend to subsidise some of the data transfer mechanisms to encourage use, so it is possible to have a situation where it is significantly cheaper to send data via an MMS than it is to transfer it via a HTTP request over the same network. For this reason the proposed architecture supports multiple ways of delivering an M-Doc to a mobile device. The architecture is also designed to minimise the number of requests that need to be made from the device to retrieve a M-Doc and to also to minimise the amount of data that needs to be transferred to the device to transmit an M-Doc.</p>
<p id="p-0150" num="0192">There are three messaging services in common use in the mobile networks at the moment: SMS (Short Message Service), EMS (Enhanced Message Service and MMS) (Multimedia Message Service). SMS is generally designed for sending text only messages up to 160 characters long. EMS is an enhanced version of SMS consisting of several SMS messages clustered together. This mechanism is used to deliver ring tones, etc to handsets. Both SMS and EMS are implemented using existing mechanisms in the GSM or CDMA networks and do not require IP based bearers such as GPRS. MMS provides the ability to send a mixture of multimedia formats such as images, sound and movies along with a definition of how to use these multimedia formats using the Synchronized Multimedia Integration Language, SMIL. MMS does not have any theoretical size limits. MMS is implemented on top of IP bearers and requires GPRS or one the 3 G equivalents to be deployed. Since MMS uses IP bearers it is not able to self-transfer or &#x201c;push&#x201d; itself out to a handset, instead it uses SMS to alert the user to the fact that an MMS message is waiting in the network for the user to retrieve, so it requires a &#x201c;push&#x201d; and &#x201c;pull&#x201d; to retrieve the message, whereas SMS requires a single &#x201c;push&#x201d; and EMS is delivered by multiple &#x201c;pushes&#x201d;.</p>
<p id="h-0009" num="0000">1.1 High Level Architecture</p>
<p id="p-0151" num="0193">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a M-Doc <b>500</b> residing in the network <b>501</b> generally requires delivery to the mobile device <b>100</b> before it can be printed. There are two ways in which a request to retrieve and print an M-Doc <b>500</b> can originate:
<ul id="ul0039" list-style="none">
    <li id="ul0039-0001" num="0000">
    <ul id="ul0040" list-style="none">
        <li id="ul0040-0001" num="0194">1&#x2014;direct user action, typically clicking on a link on a web page; or</li>
        <li id="ul0040-0002" num="0195">2&#x2014;the arrival of an SMS or MMS containing a M-Doc reference <b>507</b> or an M-Doc <b>500</b> itself.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0152" num="0196">A M-Doc Retriever <b>502</b> is a component responsible for fetching an M-Doc <b>500</b>. The M-Doc <b>500</b> is then passed to the M-Doc Printing Service <b>503</b> and printed. The following sections explain each of these major components and their inputs and outputs in more detail.</p>
<p id="h-0010" num="0000">1.1.1 Web/WAP Browser</p>
<p id="p-0153" num="0197">The Web Browser <b>504</b> is a third party application available on the mobile device <b>100</b>. It is used by the user to browse web pages. A web site that supports printing M-Docs <b>500</b> includes web pages that contain M-Doc Reference links. When the user clicks on a M-Doc Reference link, a M-Doc <b>500</b> reference is returned to the browser <b>504</b>. The M-Doc reference <b>507</b> can be handled by the browser <b>504</b> in a number of ways dependent upon the operating system running on the mobile device <b>100</b>.</p>
<p id="p-0154" num="0198">It is also possible for the M-Doc Retriever <b>502</b> to be activated directly by passing the M-Doc Retriever <b>502</b> a web page reference. This triggers a Nugget Creation service <b>506</b> to generate a Nugget for the website which the web page reference is associated with. The ability to generate a meaningful Nugget for a website depends on the content of the website.</p>
<p id="h-0011" num="0000">1.1.2 M-Doc Retriever</p>
<p id="p-0155" num="0199">The M-Doc retriever <b>502</b> is activated by the arrival of M-Doc reference <b>507</b> to the device.</p>
<p id="p-0156" num="0200">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, the M-Doc Retriever <b>502</b> is responsible for taking a M-Doc Reference <b>507</b> and resolving it to an M-Doc <b>500</b> to be passed onto the M-Doc Printing Service <b>503</b>. There are a number of ways that a M-Doc Reference <b>507</b> can be supplied to the M-Doc Retriever <b>502</b>:
<ul id="ul0041" list-style="none">
    <li id="ul0041-0001" num="0000">
    <ul id="ul0042" list-style="none">
        <li id="ul0042-0001" num="0201">1. MIME type recogniser <b>508</b>&#x2014;This can be activated either by clicking on a link in a web page that causes an &#x201c;HTTP Get&#x201d; of an object whose MIME type is an M-Doc reference <b>507</b>. Or it can be activated by the arrival on the mobile device of an Obex transfer <b>511</b>.</li>
        <li id="ul0042-0002" num="0202">2. Message Monitor <b>509</b>&#x2014;This is a component that monitors the Inbox of the Messaging Service on the mobile device. When it receives a message from any source that contains an M-Doc reference <b>507</b>, the Message Monitor <b>504</b> passes the M-Doc reference <b>507</b> onto the M-Doc Retriever <b>502</b>.</li>
        <li id="ul0042-0003" num="0203">3. Web browser plugin <b>510</b>&#x2014;This is triggered by explicit scripting code in a web page being browsed on a web browser <b>504</b>. When the Web browser plugin is activated, it is passed a M-Doc reference <b>507</b> which is passed onto the M-Doc Retriever <b>502</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0157" num="0204">The M-Doc Retriever <b>502</b> receives the M-Doc Reference <b>507</b> which is in the format of a URI (Uniform Resource Identifier). The M-Doc Retriever <b>502</b> appends device specific information to URI and is dispatched via an HTTP request to the M-Doc Retrieval Service <b>512</b> running on the device. Device specific information that is appended to the URI is dependent upon how the system has been deployed and the capabilities of the device.</p>
<p id="p-0158" num="0205">If a Mobile Device Capability Service <b>513</b> is deployed in the network <b>501</b> then the device specific information appended only requires identification the handset, via IMEI. If the Mobile Device Capability Service <b>513</b> is not deployed in the network <b>501</b> then the device <b>100</b> is required to append information relating to the printer <b>4</b>, the formats of M-Doc's <b>500</b> the device <b>100</b> is capable of printing and the preferred delivery method. The printer information required is deployment specific. If the renderer is able to look up the printer characteristics based on the handset or a printer version number then only those need to be provided, but if not, then information relating the printers resolution and colour space parameters are required.</p>
<p id="p-0159" num="0206">The M-Doc URI that is supplied by the application is used to retrieve the M-Doc <b>500</b>. This URI contains information needed to retrieve or generate the M-Doc <b>500</b> from the application <b>514</b>. If the format of the returned M-Doc <b>500</b> matches the format(s) the device <b>100</b> is capable of printing, then the document <b>500</b> is delivered to the device <b>100</b>. If there is an unsuccessful match, the M-Doc <b>500</b> is rendered. This is performed by passing the document <b>500</b> to the rendering service <b>515</b> along with the printer information. The rendering service returns the document in a pre-rendered format which can be printed by a mobile device <b>100</b> containing a printer <b>4</b>.</p>
<p id="p-0160" num="0207">The way in which the M-Doc <b>500</b> is delivered back to the M-Doc retriever <b>502</b> can also vary. It may be returned in the reply to the original HTTP request or it may be sent via an MMS or e-mail. These later two cases are most likely to be used in an environment where the pricing policy of a carrier encourages MMS or email use over general web browsing. The preferred delivery method may be included in the retrieval request or it may be looked up via the Mobile Device Capability Service <b>513</b>.</p>
<p id="p-0161" num="0208">The Rendering Service <b>515</b> may also be used directly by application writers who want to provide pre-rendered M-Doc's within their application. In this case the Rendering Service <b>515</b> is accessed via SOAP (Simple Object Access Protocol) as a web service, providing the M-Doc <b>500</b> in its authored format and obtaining the pre-rendered print format document and a thumbnail image for use in a GUI <b>516</b> of the application <b>514</b> running on the device <b>100</b>.</p>
<p id="p-0162" num="0209">When an MMS <b>517</b> is sent to the mobile device <b>100</b>, the MMS <b>517</b> is stored in the mobile network at a MMS Message Centre <b>518</b> and an SMS is sent to the device to alert the user an MMS <b>517</b> is waiting to be fetched. With a modification this notification mechanism can be used to deliver an M-Doc <b>500</b> to a phone <b>100</b>. The SMS notification can contain both an M-Doc reference <b>507</b> and an MMS notification. The request to fetch the MMS from the Message Centre <b>518</b> can be enhanced with the M-Doc reference <b>509</b>, allowing the Message Centre <b>518</b> to contact the M-Doc Retrieval Service <b>512</b> to retrieve the M-Doc <b>500</b> in the body of the MMS <b>517</b>. This service is called an M-Doc MMS service.</p>
<p id="p-0163" num="0210">Any email, MMS, Obex or web page may contain a direct M-Doc <b>500</b> rather than an M-Doc Reference <b>507</b>. In this case the M-Doc <b>500</b> is passed directly onto the M-Doc Printing Service <b>503</b>. Unless the sender of the message knows the capability of the handset receiving the M-Doc <b>500</b>, the M-Doc <b>500</b> may not be able to be rendered appropriately, hence the M-Doc Reference <b>507</b> approach is preferred, but in some cases, such as a subscription, the sender may know the capabilities of the handset and hence be able to by-pass the M-Doc Retrieval process and deliver the M-Doc <b>500</b> directly.</p>
<p id="h-0012" num="0000">1.1.3 M-Doc Printing Service</p>
<p id="p-0164" num="0211">The M-Doc Printing Service <b>503</b> prints the document <b>500</b> to the printer <b>4</b> in the mobile device <b>100</b>. M-Doc's <b>500</b> may have different document formats, but the M-Doc Retriever stage ensures that it retrieves an M-Doc <b>500</b> in a format that can be printed by the mobile device <b>100</b> without any further network interactions.</p>
<p id="h-0013" num="0000">1.1.4 Nugget Production</p>
<p id="p-0165" num="0212">A Nugget is the distillation of the content of a web page onto an M-Print sized printout. In general this not only involves reducing the web layout so that the content fits onto the M-Print printout. The process also involves selecting the key pieces of information on the web page and explicitly composing an M-Doc <b>500</b> that presents the information appropriately. Nugget support can be provided in two ways:
<ul id="ul0043" list-style="none">
    <li id="ul0043-0001" num="0000">
    <ul id="ul0044" list-style="none">
        <li id="ul0044-0001" num="0213">1. As part of the design of the application <b>514</b></li>
        <li id="ul0044-0002" num="0214">2. By a nugget generating service <b>519</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0166" num="0215">Providing nugget support as part of the design of web application <b>514</b> requires the author of the web interface to provide a link to a nugget on the web page. Depending on the nature of the web content the nugget could either be statically authored along with the page or it could be dynamically authored based on the dynamic content on the web page.</p>
<p id="p-0167" num="0216">For web sites that do not support Nuggets as part of the interface, nuggets can be generated by a nugget generation service <b>519</b>.</p>
<p id="p-0168" num="0217">Referring to <figref idref="DRAWINGS">FIG. 3</figref>, the Nugget Generation Service <b>519</b> is activated when a special form of a M-Doc Reference <b>507</b> is passed to the M-Doc Retriever <b>502</b> on the mobile device <b>100</b>, which references a web page rather than an M-Doc. The Nugget Retrieval Service detects this and passes the request onto the Nugget Creation Service <b>519</b>.</p>
<p id="p-0169" num="0218">The Nugget Creation Service <b>519</b> generates a nugget for the supplied web page in one of two ways:
<ul id="ul0045" list-style="none">
    <li id="ul0045-0001" num="0000">
    <ul id="ul0046" list-style="none">
        <li id="ul0046-0001" num="0219">1. If the supplied web page comes from an explicitly supported web application, it passes the web page onto the nugget generator for that web application. Common web applications such as: Google, e-bay, Yahoo, Wikipedia and Amazon could be supported.</li>
        <li id="ul0046-0002" num="0220">2. If the web page is not from a supported application, then the contents is scaled to fit into an M-Doc <b>500</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0170" num="0221">The nugget generator for supported applications include knowledge of the structure of the web page and the main purpose of the web application, and thus be able to extract information from the key fields and present that in a nugget. For example:
<ul id="ul0047" list-style="none">
    <li id="ul0047-0001" num="0000">
    <ul id="ul0048" list-style="none">
        <li id="ul0048-0001" num="0222">A Google web page could be distilled to a nugget by showing the: search criteria; the top ten hits; how many other hits where returned.</li>
        <li id="ul0048-0002" num="0223">An Amazon web page could be distilled to showing the contents of the shopping cart.</li>
        <li id="ul0048-0003" num="0224">A Wikipedia web page could be distilled to the term and the definition.
<br/>
1.2 Applications
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0171" num="0225">This section discusses some applications of Internet Based M-Document printing architecture. Any M-Doc <b>500</b> can be Netpage enabled.</p>
<p id="h-0014" num="0000">1.2.1 Daily Subscription Services</p>
<p id="p-0172" num="0226">Many people buy the daily newspapers to access a few small sections of the paper, e.g. puzzles, crosswords or cartoons. Using M-Doc printing it is possible for a user to browse online to the content and then request a printout of the content of their choice. To avoid having to browse each day, a subscription service that &#x201c;pushes&#x201d; the user's desired sections out to them each day can be set up. The service could use: SMS, MMS or e-mail to &#x201c;push&#x201d; the M-Doc References out to the mobile device. The user can then print then content of the subscription when required.</p>
<p id="p-0173" num="0227">Some of the sections of a newspaper that would suit this form of distribution are:
<ul id="ul0049" list-style="none">
    <li id="ul0049-0001" num="0000">
    <ul id="ul0050" list-style="none">
        <li id="ul0050-0001" num="0228">Crossword puzzles: Crossword grid on one sheet; clues on another.</li>
        <li id="ul0050-0002" num="0229">Number puzzles, e.g. Sudoku</li>
        <li id="ul0050-0003" num="0230">Jokes</li>
        <li id="ul0050-0004" num="0231">Cartoons</li>
        <li id="ul0050-0005" num="0232">Local Weather
<br/>
1.2.2 Navigation and Location Based Services
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0174" num="0233">Web services such as &#x201c;WhereIs&#x201d; (www.whereis.com) provide both the ability to get a list of directions to go from one location to another and/or a map. Using a mobile device's browser <b>504</b> the user can enter the destination and their current location and then have the map and directions delivered as an M-Doc <b>500</b> to be printed.</p>
<p id="p-0175" num="0234">This gives a more convenient presentation of the map and directions to refer to while driving. Also in many regions in the world it is illegal to look at a mobile phone while driving, but it is not illegal to consult a map or written directions.</p>
<p id="p-0176" num="0235">Mobile devices <b>100</b> that support location services are able to supply their location automatically. In this case it is only necessary to specify the destination to receive a map and/or a set of directions to print.</p>
<p id="p-0177" num="0236">As well as assisting navigation, location based services can be used to present of list of possible destinations. For example:
<ul id="ul0051" list-style="none">
    <li id="ul0051-0001" num="0000">
    <ul id="ul0052" list-style="none">
        <li id="ul0052-0001" num="0237">A service that prints out the list of restaurants within walking distance;</li>
        <li id="ul0052-0002" num="0238">Directions to the closest Service Station (or any type of shop);</li>
        <li id="ul0052-0003" num="0239">Directions to the closest public transport stop.
<br/>
1.2.3 Company Business Cards
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0178" num="0240">Corporate websites often promote a company's public image, this can be extended by providing the ability to print a &#x201c;Company Business Card&#x201d; that gives the general information about the company and its general contact details. As well as a general &#x201c;Company Business Card&#x201d;, individual departments could easily have their own business cards, e.g. the Service Department contact details.</p>
<p id="p-0179" num="0241">Web sites for companies normally have a page dedicated to how to find them, that is, directions on how to get to their buildings from major transport hubs. These sites could easily include M-Documents <b>500</b> showing maps of:
<ul id="ul0053" list-style="none">
    <li id="ul0053-0001" num="0000">
    <ul id="ul0054" list-style="none">
        <li id="ul0054-0001" num="0242">How to get to the company's premises</li>
        <li id="ul0054-0002" num="0243">Where the closest parking is</li>
        <li id="ul0054-0003" num="0244">Where the closest Hotel is</li>
        <li id="ul0054-0004" num="0245">Directions on how to navigate from one building to another.
<br/>
1.2.4 Discount Coupon/Voucher
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0180" num="0246">Discount coupons can be delivered by M-Documents <b>500</b>. These can be delivered via the web as part of an advertisement, either directly with the advertisement containing a link to a M-Document <b>500</b> or a coupon could be delivered to the mobile device as a reward for clicking through an advertisement to the companies web site.</p>
<p id="p-0181" num="0247">A company could &#x201c;push&#x201d; out via SMS, MMS or e-mail vouchers to members of their loyalty scheme or just to the general public as a promotion. Another variation on this scheme is the ability to deliver a voucher or coupon to a user who enters a competition or votes on-line. For example, using an SMS to vote on a reality TV show could result in an MMS being returned with a coupon for a prize, or voting from a web site could return an M-Doc <b>500</b> with an advertisement and the possibility of a prize.</p>
<p id="h-0015" num="0000">1.2.5 On-line Receipts</p>
<p id="p-0182" num="0248">When performing on-line transactions from a mobile device <b>100</b> a receipt for the transaction can be returned via an M-Doc <b>500</b>. This gives a printout that can be filed with a user's other receipts. The receipts can contain bar codes and/or be Netpage enabled to allow the transaction to be recalled on-line on demand. Some example on-line transactions this could be used for are:
<ul id="ul0055" list-style="none">
    <li id="ul0055-0001" num="0000">
    <ul id="ul0056" list-style="none">
        <li id="ul0056-0001" num="0249">Betting, the nugget can record: the selected options, the odds, the money wagered and the possible payouts;</li>
        <li id="ul0056-0002" num="0250">Banking, the nugget can be similar to an EFTPOS receipt;</li>
        <li id="ul0056-0003" num="0251">Purchasing, the nugget can be similar to a shop receipt;</li>
        <li id="ul0056-0004" num="0252">Paying bills;</li>
        <li id="ul0056-0005" num="0253">Taxi payment
<br/>
1.2.6 Ticketing
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0183" num="0254">For tickets that do not require magnetic stripes it is possible to deliver them over-the-air at the time of purchase. This could included: Public transport tickets; Theme park ride tickets; Theatre tickets; Cinema tickets.</p>
<p id="h-0016" num="0000">1.2.7 Web CAM Print</p>
<p id="p-0184" num="0255">While viewing a web cam on your mobile device, a user can select print and have an M-Document <b>500</b> of the image at that time sent to the users phone.</p>
<p id="h-0017" num="0000">1.2.8 On-line Gaming</p>
<p id="p-0185" num="0256">On-line games can use Nuggets to provide additional information about the game. They can be used to provide: Cheat sheets; Maps; Character summaries; Brag cards, to demonstrate what level you have reached; Vouchers or Coupons as rewards for achievement.</p>
<p id="h-0018" num="0000">2. Player Architecture</p>
<p id="p-0186" num="0257">A Netpage Player <b>520</b> is a physical or virtual device capable of &#x201c;playing&#x201d; requests of various types. A play request <b>521</b> consists of three parts:
<ul id="ul0057" list-style="none">
    <li id="ul0057-0001" num="0000">
    <ul id="ul0058" list-style="none">
        <li id="ul0058-0001" num="0258">1. The target <b>522</b>, which specifies which player <b>520</b> the request <b>521</b> should be played.</li>
        <li id="ul0058-0002" num="0259">2. The operation <b>523</b>, which specifies the action to be performed.</li>
        <li id="ul0058-0003" num="0260">3. A set of values <b>524</b>, which are supplied as parameters to the operation <b>523</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0187" num="0261">Typically play requests <b>521</b> arise in response to user actions. For example, the user clicks on a tagged surface with a Netpage pointer, or interacts with an application that is in contact with the Netpage system. Play requests <b>521</b> can be used to provide a simple feedback mechanism (such as a request to display a text string to the user), or may be used to cause more sophisticated interactions with physical devices (such as setting the thermostat temperature on a home air conditioning system).</p>
<p id="p-0188" num="0262">Individual players <b>520</b> can be associated with a user <b>525</b> as shown in <figref idref="DRAWINGS">FIG. 4</figref>. A user <b>525</b> may be associated with multiple players <b>520</b> each of which supports the playing of possibly overlapping sets of PlayRequests <b>521</b>.</p>
<p id="p-0189" num="0263">It is likely that in many cases a single physical NetpagePlayer device <b>520</b> is shared between multiple users <b>525</b>. For example, a hi-fi audio system in a family room may be configured as an audio player for multiple members of the family. For the sake of brevity, this section focuses on cases where physical players are exclusively used by a single user, however, it will be appreciated that this section may be applied to multiple users.</p>
<p id="p-0190" num="0264">Central to the NetpagePlayer <b>520</b> concept is the notion of a PlayRequest <b>521</b> which are objects that represent a request to perform an operation on some device. This sections describes various details related to PlayRequests <b>521</b>.</p>
<p id="h-0019" num="0000">2.1 Structure of a PlayRequest</p>
<p id="p-0191" num="0265">A PlayRequest (see <figref idref="DRAWINGS">FIG. 5</figref>) consists of three parts, each of which is optional:
<ul id="ul0059" list-style="none">
    <li id="ul0059-0001" num="0266">1. An optional target <b>522</b> which specifies which Netpage player <b>520</b> the request <b>521</b> should be played,</li>
    <li id="ul0059-0002" num="0267">2. An optional operation <b>523</b> which specifies the type of action to be performed on the target player <b>522</b>, and</li>
    <li id="ul0059-0003" num="0268">3. An optional list of values <b>524</b> which are supplied as parameters to the operation <b>523</b>.</li>
</ul>
</p>
<p id="p-0192" num="0269">A play request <b>521</b> may either be fully or partially specified. A fully specified play request completely specifies all of the information (target, operation, and parameters) required to unambiguously deliver the request to the target <b>522</b> and to perform the desired operation <b>532</b>. A partially specified play request provides some indication of the request <b>521</b> to be played, but does not provide enough information in order for the play request <b>521</b> to be successfully delivered and played without further processing.</p>
<p id="p-0193" num="0270">A target <b>522</b> may either fully or partially specify the target <b>522</b> of a play request <b>521</b>. A fully specified target completely identifies the physical player <b>520</b> on which the request <b>521</b> should be played. A partially specified target provides some indication of the desired target <b>522</b>, but does not provide enough information in order for the play request <b>521</b> to be delivered without further processing. An operation <b>523</b> can also be fully or partially specified. A Value <b>524</b> consists of a physical type <b>525</b> and associated data <b>526</b>. For example, the physical type <b>525</b> might be &#x201c;image/jpeg&#x201d; and the data <b>526</b> would be the binary image data.</p>
<p id="h-0020" num="0000">2.2 Values and Types</p>
<p id="p-0194" num="0271">A Value <b>524</b> represents an instance of some physical type <b>525</b>. Each Value <b>524</b> has an associated physical type <b>525</b> and zero or more associated type categories. The physical type identifies the structure of the data element of the Value <b>524</b>. A possible mechanism would be to use MIME types. For example, if the physical type <b>525</b> is image/jpeg then the data element would contain the binary data of an image in jpeg format.</p>
<p id="p-0195" num="0272">Referring to <figref idref="DRAWINGS">FIG. 6</figref>, a Value is also optionally associated with one or more Categories <b>527</b>. A Category <b>527</b> is used to provide additional information about the value <b>524</b> which may allow it to be handled more sensibly by the system (i.e. to allow a PlayRequest to be better matched against the capabilities of candidate targets during request routing). As an example, an image value produced by a digital camera may have the physical type <b>525</b> image/jpeg, but may also be associated with a category <b>527</b> of &#x201c;photo&#x201d;, whereas an image value produced by a fax package might also have the physical type <b>525</b> image/jpeg, but could be associated with a category <b>527</b> of &#x201c;facsimile&#x201d; or with no category at all.</p>
<p id="p-0196" num="0273">RequestRouters can take into account both the physical type <b>525</b> of a value <b>524</b> and the categories <b>527</b> to which it belongs when determining the most appropriate way to handle a request <b>521</b>.</p>
<p id="h-0021" num="0000">2.3 Sample PlayRequests</p>
<p id="p-0197" num="0274">To better demonstrate the PlayRequest concept, this section provides a number of sample PlayRequests <b>521</b>. A PlayRequest <b>521</b> can be viewed in tabular form as shown below by example in Table 1.</p>
<p id="p-0198" num="0275">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="140pt" align="left"/>
<colspec colname="3" colwidth="42pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>target</entry>
<entry>&#x3c;identification of the target of the request&#x3e;</entry>
<entry/>
</row>
<row>
<entry>operation</entry>
<entry>&#x3c;the name of the operation to be performed&#x3e;</entry>
</row>
<row>
<entry>parameters</entry>
<entry>&#x3c;physical type and categories of parameter 1&#x3e;</entry>
<entry>&#x3c;value of</entry>
</row>
<row>
<entry/>
<entry/>
<entry>parameter 1&#x3e;</entry>
</row>
<row>
<entry/>
<entry>. . .</entry>
<entry>. . .</entry>
</row>
<row>
<entry/>
<entry>&#x3c;physical type and categories of parameter n&#x3e;</entry>
<entry>&#x3c;value of</entry>
</row>
<row>
<entry/>
<entry/>
<entry>parameter n&#x3e;</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0199" num="0276">Firstly, the Request 1 shows a fully specified PlayRequest <b>521</b> for dialling a number on a specific mobile phone.</p>
<p id="p-0200" num="0277">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 1</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="98pt" align="left"/>
<colspec colname="3" colwidth="56pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry>mobile-phone-xyz56474238</entry>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>dial</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 6754&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0201" num="0278">The target field <b>522</b> is fully specified and indicates that the request <b>521</b> is to be performed on the device <b>520</b> identified by the name/address &#x201c;mobile-phone-xyz56474238&#x201d;. Note that for simplicity, simple text strings to indicate the address of each physical target <b>522</b>. The play request <b>521</b> contains an operation of &#x201c;dial&#x201d; which is understood by the mobile phone's NetpagePlayer <b>520</b>. The request <b>521</b> also includes a phone number which is a required parameter <b>528</b> to the &#x201c;dial&#x201d; operation <b>523</b>.</p>
<p id="p-0202" num="0279">As shown below, Request 2 is only partially specified due to only containing a partially specified target <b>522</b>. The target <b>522</b> specifies that the request <b>521</b> should be played on a mobile phone, but does not specify which mobile phone.</p>
<p id="p-0203" num="0280">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 2</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry>mobile phone</entry>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>dial</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 6754&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0204" num="0281">Request 3 shown below is also only partially specified. In this case, the target <b>522</b> has been completely left out. Although only being partially specified, the request <b>521</b> has a definite meaning: &#x201c;dial the phone number 555 6754&#x201d;. The device to be used to dial the number is still to be determined.</p>
<p id="p-0205" num="0282">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 3</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>dial</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 6754&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0206" num="0283">Request 4 is even less fully specified that Request 3. Request 4 simply contains the phone number &#x201c;555 6754&#x201d;. The operation to be performed with the number and the device to handle the request (the target) is still to be determined and the device to handle the request (the target) is still to be determined.</p>
<p id="p-0207" num="0284">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 4</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 6754&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0208" num="0285">Request 5 contains a fully specified target <b>522</b>, but does not specify an operation <b>523</b>. Thus, the target of the request <b>521</b> is known, but what the target <b>522</b> is to do with the request (the operation) is still to be determined.</p>
<p id="p-0209" num="0286">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 5</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="98pt" align="left"/>
<colspec colname="3" colwidth="56pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry>mobile-phone-xyz56474238</entry>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 6754&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0210" num="0287">Request 6 can be used to send a simple text message to the user. The target <b>522</b> is not specified, so the request means display the following message on whichever player is the most appropriate at the current time.</p>
<p id="p-0211" num="0288">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Request 6</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>display</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>text</entry>
<entry>&#x201c;Temperature in Sydney is 28&#xb0; C.&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
2.4 Invocation of PlayRequests
</p>
<p id="p-0212" num="0289">Play requests <b>521</b> can arise in one of two ways:
<ul id="ul0060" list-style="none">
    <li id="ul0060-0001" num="0000">
    <ul id="ul0061" list-style="none">
        <li id="ul0061-0001" num="0290">1. The user interacts with a printed Netpage form that has been authored to include invocations of play requests <b>521</b>.</li>
        <li id="ul0061-0002" num="0291">2. An arbitrary application sends a play request <b>521</b> to a Netpage Server <b>529</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0213" num="0292">These are discussed in the following sections.</p>
<p id="h-0022" num="0000">2.4.1 Authored PlayRequests</p>
<p id="p-0214" num="0293">PlayRequests <b>521</b> can be authored directly into a printed Netpage document. <figref idref="DRAWINGS">FIG. 7</figref> provides an example of an interactive business card <b>530</b>. The business card <b>530</b> contains interactive elements <b>531</b> that can be triggered by clicking on them with a Netpage pointer. Each interactive element causes a PlayRequest <b>521</b> to be invoked. The Netpage Server <b>529</b> then arranges for the request <b>521</b> to be played by routing it to the appropriate player device <b>520</b>.</p>
<p id="p-0215" num="0294">For example, referring to <figref idref="DRAWINGS">FIG. 7</figref>, consider a user with a Netpage-enabled mobile phone device <b>100</b> with a built-in Netpage pointer. The user clicks on the mobile phone icon <b>532</b> on the business card <b>530</b> which causes the PlayRequest <b>521</b> to be triggered. The server <b>529</b> routes the play request <b>521</b> to the user's mobile phone <b>100</b> and upon receiving the request <b>521</b>, the mobile phone <b>100</b> commences dialling the required number.</p>
<p id="h-0023" num="0000">2.4.2 Application Invoked PlayRequests</p>
<p id="p-0216" num="0295"><figref idref="DRAWINGS">FIG. 8</figref> shows a typical example of an application invoked PlayRequest <b>521</b>. The steps are as follows:
<ul id="ul0062" list-style="none">
    <li id="ul0062-0001" num="0000">
    <ul id="ul0063" list-style="none">
        <li id="ul0063-0001" num="0296">1. A Netpage pen <b>533</b> transmits a digital ink stroke <b>534</b> to the Netpage Server <b>529</b>.</li>
        <li id="ul0063-0002" num="0297">2. The stroke <b>534</b> is determined to be a request <b>521</b> to submit a Netpage form for processing.</li>
        <li id="ul0063-0003" num="0298">3. The form is submitted to the corresponding Application <b>535</b>.</li>
        <li id="ul0063-0004" num="0299">4. As part of the form submission processing, the application <b>535</b> requests that a play request <b>521</b> be played by a Netpage Player <b>520</b> associated with the user <b>525</b> who made the submission.</li>
        <li id="ul0063-0005" num="0300">5. The Server <b>529</b> determines the target device <b>522</b> and relays the play request <b>521</b> to that device <b>522</b>.
<br/>
2.5 Player Devices
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0217" num="0301">Netpage Player instances can be deployed on various Player devices (platforms). Individual players support some subset of the full range of PlayRequests <b>521</b> supported by Netpage. Table 2 shows some examples of Netpage Player Devices.</p>
<p id="p-0218" num="0302">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="301pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 2</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Example Netpage Player Devices</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="252pt" align="left"/>
<tbody valign="top">
<row>
<entry>Player Device</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Desktop Player</entry>
<entry>This device is a powerful computing unit usually with fixed network connectivity. A</entry>
</row>
<row>
<entry>585</entry>
<entry>desktop player is capable of playing a wide range of PlayRequests (e.g. audio, video,</entry>
</row>
<row>
<entry/>
<entry>image, html, etc). The player can interact with various external software/hardware</entry>
</row>
<row>
<entry/>
<entry>components running on the device.</entry>
</row>
<row>
<entry>Thin Mobile</entry>
<entry>This device is a mobile unit with limited computing power such as web-enabled or</entry>
</row>
<row>
<entry>Player</entry>
<entry>low-end mobile phones.</entry>
</row>
<row>
<entry>587</entry>
<entry>The thin player running on such mobile device is capable of playing various</entry>
</row>
<row>
<entry/>
<entry>PlayRequests by utilizing the capabilities of the device. Examples include sending</entry>
</row>
<row>
<entry/>
<entry>SMS objects, dialling phone number objects, etc.</entry>
</row>
<row>
<entry/>
<entry>Due to the processing limitations of the device, a remote server (Netpage and</entry>
</row>
<row>
<entry/>
<entry>Application Server) processes the input strokes/clicks and provides the objects to the</entry>
</row>
<row>
<entry/>
<entry>player.</entry>
</row>
<row>
<entry>Smart Mobile</entry>
<entry>This device is a mobile unit with more computing and storage capabilities, such as a</entry>
</row>
<row>
<entry>Player</entry>
<entry>high-end smart mobile phone or a PDA.</entry>
</row>
<row>
<entry>588</entry>
<entry>Such device is capable of enabling most of the Netpage functionality by running a</entry>
</row>
<row>
<entry/>
<entry>Micro edition of the Netpage Server locally.</entry>
</row>
<row>
<entry/>
<entry>In such an environment, the player can receive PlayRequests from the local server</entry>
</row>
<row>
<entry/>
<entry>(running on the device) and no on-line connectivity to a remote server peer would be</entry>
</row>
<row>
<entry/>
<entry>necessarily required at the time of playing.</entry>
</row>
<row>
<entry>Embedded</entry>
<entry>An embedded player is a custom device that is built for a specific application.</entry>
</row>
<row>
<entry>Player</entry>
<entry>Examples of such players are Digital Camera, capable of playing (i.e. showing) images</entry>
</row>
<row>
<entry/>
<entry>and possibly video; or Audio Player, capable of playing audio. The Netpage player is</entry>
</row>
<row>
<entry/>
<entry>either built into the device or as a detachable unit.</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry namest="1" nameend="2" align="left" id="FOO-00001">Note that while some of the devices mentioned in Table 2 are also capable of recording/capturing objects (e.g. a digital camera of a mobile phone is capable of capturing images), access to such captured data is not accessible via the Netpage Player concept, but can be accessed via a Netpage Clipboard, which will be discussed in more detail.</entry>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
2.6 Request Processing
</p>
<p id="p-0219" num="0303">This sections describes how PlayRequest objects <b>521</b> are processed throughout the Netpage system. The processing of requests includes two operations:
<ul id="ul0064" list-style="none">
    <li id="ul0064-0001" num="0000">
    <ul id="ul0065" list-style="none">
        <li id="ul0065-0001" num="0304">1. The routing of requests <b>521</b> from one NetpagePlayer <b>520</b> to another.</li>
        <li id="ul0065-0002" num="0305">2. The transformation of PlayRequests <b>521</b> (for example to change partially specified request more specified) as they are being routed.
<br/>
2.6.1 Request Routing
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0220" num="0306">A play request <b>521</b> is routed from source to the eventual destination via one or more intermediary RequestRouters <b>536</b> as shown in <figref idref="DRAWINGS">FIG. 9</figref>. RequestRouters <b>536</b> implement the NetpagePlayer interface, and are responsible for routing each PlayRequest <b>521</b> they receive to an appropriate target NetpagePlayer <b>520</b>. Each RequestRouter <b>536</b> maintains a set of potential targets <b>538</b>. Eventually a PlayRequest <b>521</b> arrives at a PlayerAgent <b>537</b> which is responsible for actually performing the play request <b>521</b>.</p>
<p id="p-0221" num="0307">All PlayRequests <b>521</b> from (or on behalf of) a user <b>525</b> are initially handled by a RequestRouter <b>536</b> inside the Netpage Server <b>529</b>. This router is called the UserRequestRouter <b>539</b> (see <figref idref="DRAWINGS">FIG. 10</figref>). Typically the UserRequestRouter <b>539</b> forwards requests to a RequestRouter <b>536</b> residing on a physical device, although such forwarding may pass through an arbitrary number of intermediary RequestRouters <b>536</b> along the way. Device based RequestRouters <b>536</b> are responsible for routing requests <b>521</b> to the various player agents <b>537</b> running on the device.</p>
<p id="p-0222" num="0308">The typical scenario is shown in <figref idref="DRAWINGS">FIG. 11</figref>. The UserRequestRouter <b>539</b> has a set of potential targets <b>538</b> which are all RequestRouters <b>536</b> residing on physical devices. Each device's RequestRouter <b>536</b> then has a set of potential PlayerAgent targets. The PlayerAgents are the NetpagePlayers <b>520</b> that actually play requests <b>521</b>.</p>
<p id="h-0024" num="0000">2.6.2 Request Transformation</p>
<p id="p-0223" num="0309">Each RequestRouter <b>536</b> can optionally transform the PlayRequest <b>521</b> it receives before passing it on to a subsequent NetpagePlayer <b>520</b>. The transformation typically produces a more fully specified version of the supplied PlayRequest <b>521</b>, but may also produce a completely new PlayRequest <b>521</b> with no fields in common with the source PlayRequest <b>521</b>.</p>
<p id="h-0025" num="0000">2.6.3 Player Capabilities</p>
<p id="p-0224" num="0310">Different players have different capabilities. That is, each player is capable of playing a different set of PlayRequests <b>521</b>. The capabilities of a NetpagePlayer <b>520</b> are specified in a CapabilitySpecification <b>540</b>. The capabilities <b>541</b> of each child player are taken into account by RequestRouters <b>536</b> when handling PlayRequests <b>521</b>. The capabilities <b>541</b> of different players may overlap, potentially resulting in ambiguous PlayRequests <b>521</b>. Such ambiguities are resolved by RequestRouters using methods described in further detail below.</p>
<p id="p-0225" num="0311">The CapabilitySpecification <b>540</b> is not limited to simply specifying which operations <b>523</b> can be performed on which value types <b>524</b>. It may also specify finer grained details. For a specific PlayRequest <b>521</b> the CapabilitySpecification <b>540</b> might specify that it can only handle a subset of possible values. For example, a player <b>520</b> that supports the playing of audio objects could place a limitation on the size of audio objects supported.</p>
<p id="h-0026" num="0000">2.6.3.1 Capability and Request Propagation</p>
<p id="p-0226" num="0312">As shown in <figref idref="DRAWINGS">FIG. 12</figref>, a PlayerAgent <b>537</b> advertises its capabilities <b>541</b> to its parent RequestRouter <b>542</b> which in turn propagates the aggregation of its children's capabilities <b>544</b> to its parent RequestRouter <b>543</b>. Eventually the propagation reaches the UserRequestRouter <b>539</b> which then has an overall view of the capabilities <b>545</b> of all of the players at its disposal. PlayRequest propagation moves in the opposite direction. Requests <b>521</b> start at the UserRequestRouter which determines the most appropriate child to which the request should be sent. The (possibly transformed) request is sent to the selected child which in turn propagates the request to one of its children. Eventually the request reaches a PlayerAgent <b>537</b> which is responsible for actually playing the request.</p>
<p id="h-0027" num="0000">2.6.3.2 Capability Aggregation and Transformation</p>
<p id="p-0227" num="0313">As a RequestRouter propagates player capabilities (<b>541</b>, <b>544</b>, <b>545</b>) to its parent RequestRouter <b>536</b>, it may perform capability aggregation and transformation. Capability Aggregation is where the router <b>536</b> combines the capabilities of its children into a single capability specification <b>548</b>. Capability Transformation is where the router <b>536</b> modifies the advertised capabilities of its children due to capabilities (or perhaps limitations) of the router itself.</p>
<p id="p-0228" num="0314"><figref idref="DRAWINGS">FIG. 13</figref> provides an example of a simple capability aggregation. The router has two children <b>550</b>, <b>551</b>, the first child <b>550</b> of which advertises the capability to display jpeg images, the second child advertises the capability <b>553</b> to display plain text. The router <b>536</b> then aggregates the child capabilities <b>552</b>, <b>553</b> into a single capability specification <b>540</b> which is capable of displaying both jpeg images and plain text.</p>
<p id="p-0229" num="0315"><figref idref="DRAWINGS">FIG. 14</figref> provides an example of a capability transformation. The PlayerAgent <b>537</b> advertises its capability <b>555</b> to display image/jpegs. The RequestRouter <b>536</b> has access to an image converter <b>559</b> that can convert images in png format to jpeg format. As such, the capability specification <b>555</b> is transformed before propagation into a capability specification <b>556</b> that includes the ability to display files in png format as well as in jpeg format.</p>
<p id="h-0028" num="0000">2.6.4 Dynamic Capabilities</p>
<p id="p-0230" num="0316">The capabilities advertised by a particular NetpagePlayer <b>520</b> can change over time. For example:
<ul id="ul0066" list-style="none">
    <li id="ul0066-0001" num="0000">
    <ul id="ul0067" list-style="none">
        <li id="ul0067-0001" num="0317">1. Additional hardware or software can be installed/removed to/from a device, enabling the player to support more/less PlayRequests <b>521</b>.</li>
        <li id="ul0067-0002" num="0318">2. The maximum object size supported by a player may change depending on the spare capacity in the player's memory.</li>
        <li id="ul0067-0003" num="0319">3. A mobile player might be capable of receiving streaming media when it is connected to the network through a high-bandwidth network.</li>
        <li id="ul0067-0004" num="0320">4. Common user interactions with the player (e.g. starting an application, changing a setting) can cause the player to advertise more or less capabilities.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0231" num="0321">Such changes in capabilities are to be communicated to the player's parent RequestRouter <b>536</b>, and potentially, but not always, to the parent's parent, and so on all the way to the UserRequestRouter <b>539</b>.</p>
<p id="p-0232" num="0322">At the same time, as dynamic capability changes are being propagated, requests <b>521</b> are being routed in the opposite direction (as shown in <figref idref="DRAWINGS">FIG. 12</figref>). This creates a race condition between capability propagation and request routing, such that by the time a request arrives at a RequestRouter <b>536</b>, either the request can no longer be handled by the player <b>520</b>, or the player <b>520</b> is no longer the most appropriate recipient for that request <b>521</b>. Either case may require that a request <b>521</b> be rejected by the player <b>520</b> (be it a router or an agent) and re-routed to the appropriate player <b>520</b>.</p>
<p id="p-0233" num="0323">Additionally, dynamic propagation of capability changes could potentially cause an undesirable level of network traffic, harming overall system performance.</p>
<p id="h-0029" num="0000">2.6.5 Request Handling by the UserRequestRouter</p>
<p id="p-0234" num="0324">As already discussed, all PlayRequests <b>521</b> presented to the NetpageServer <b>529</b> are handled by the UserRequestRouter <b>539</b>. The purpose of the UserRequestRouter <b>539</b> is twofold: (i) To determine the most appropriate child NetpagePlayer (the target <b>522</b>) to which the request <b>521</b> should be routed; and (ii) To determine any required transformations to the request <b>521</b> that are necessary in order for the selected target <b>521</b> to be able to handle the request <b>521</b>.</p>
<p id="p-0235" num="0325">In order to determine both of the above, the UserRequestRouter <b>539</b> takes into account the content of the PlayRequest <b>521</b> and the context within which it is handled. The context includes a large range of factors, including, but not limited to the following:
<ul id="ul0068" list-style="none">
    <li id="ul0068-0001" num="0000">
    <ul id="ul0069" list-style="none">
        <li id="ul0069-0001" num="0326">1. The capabilities of each of the available children NetpagePlayers. Availability being partially determined by the user identity.</li>
        <li id="ul0069-0002" num="0327">2. The current contents of the Netpage clipboard.</li>
        <li id="ul0069-0003" num="0328">3. The originating source of the request (e.g. the Netpage pointer device which triggered the play request) and/or the route via which the request arrived.</li>
        <li id="ul0069-0004" num="0329">4. The current player profile.</li>
        <li id="ul0069-0005" num="0330">5. The current date and time.
<br/>
2.6.6 Player Profiles
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0236" num="0331">It is possible that multiple players registered with a user support the same PlayRequests <b>521</b>. As a concrete example, consider the following scenario where a user has registered the following players. The user <b>525</b> has three registered players <b>520</b> all of which are capable of playing images:
<ul id="ul0070" list-style="none">
    <li id="ul0070-0001" num="0000">
    <ul id="ul0071" list-style="none">
        <li id="ul0071-0001" num="0332">A camera phone for playing phone numbers, plain text, and images.</li>
        <li id="ul0071-0002" num="0333">A digital camera for playing images.</li>
        <li id="ul0071-0003" num="0334">A desktop application for playing plain text, html, images, video and audio.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0237" num="0335">Now consider the case where the UserRequestRouter <b>539</b> receives the following partially specified PlayRequest <b>521</b>:</p>
<p id="p-0238" num="0336">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="84pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>display</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>image</entry>
<entry>contents of image</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0239" num="0337">The request <b>521</b> could potentially be played on any of the devices <b>520</b> mentioned. As such, the request <b>521</b> is ambiguous.</p>
<p id="p-0240" num="0338">PlayerProfiles <b>557</b> are one mechanism which can be used in order to allow the UserRequestRouter <b>539</b> to resolve such ambiguities. A PlayerProfile <b>557</b> provides a (typically restricted) view of the set of players <b>520</b> available for a particular user <b>525</b> and the set of PlayRequests <b>521</b> that can be played on those players <b>520</b>. A user <b>525</b> may have multiple player profiles <b>525</b> indicating the various scenarios within which they use the Netpage system. At any point in time, one of these profiles <b>525</b> is set as the Current Profile <b>558</b> as shown in <figref idref="DRAWINGS">FIG. 15</figref>.</p>
<p id="p-0241" num="0339">For example, a user might have the following profiles:
<ul id="ul0072" list-style="none">
    <li id="ul0072-0001" num="0000">
    <ul id="ul0073" list-style="none">
        <li id="ul0073-0001" num="0340">An &#x201c;office&#x201d; profile that directs most player requests to their desktop PC.</li>
        <li id="ul0073-0002" num="0341">A &#x201c;home&#x201d; profile that directs requests to various devices throughout the user's house.</li>
        <li id="ul0073-0003" num="0342">A &#x201c;mobile&#x201d; profile that directs player requests to various portable devices (e.g. a smart phone).</li>
        <li id="ul0073-0004" num="0343">A &#x201c;car&#x201d; profile that directs player requests to devices within the user's automobile.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0242" num="0344">A user can quickly change their current profile by a simple user action. For example, if in the office, the user could select the profile via a desktop GUI. Alternatively the user could use their Netpage pen/pointer to select a profile from a printed interface <b>559</b> such as that shown in <figref idref="DRAWINGS">FIG. 16</figref>. The system could also allow a user to specify regular scheduled times at which their current profile should switch.</p>
<p id="h-0030" num="0000">2.6.7 An Example Request Routing</p>
<p id="p-0243" num="0345">Consider the interactive business card <b>530</b> shown in <figref idref="DRAWINGS">FIG. 7</figref>. The business card contains a number of interactive elements including the two fields <b>560</b>, <b>561</b> highlighted in <figref idref="DRAWINGS">FIG. 17</figref>. Each of the fields <b>560</b>, <b>561</b> is represented by a partially specified PlayRequest <b>562</b>, <b>563</b>. Clicking on either field <b>560</b>, <b>561</b> with a Netpage pointer causes the corresponding play request <b>562</b>, <b>563</b> to be submitted to the Netpage Server <b>529</b> for processing.</p>
<p id="p-0244" num="0346"><figref idref="DRAWINGS">FIG. 18</figref> provides an example of how such a field might be routed. At step <b>564</b> we have the original play request as submitted to the server. At step <b>565</b> the UserRequestRouter interrogates the PlayRequest and the current context and determines that the request should be routed to the user's mobile phone. As such it transforms the original PlayRequest to produce the request shown in step <b>566</b> and routes the play request to the RequestRouter on the mobile phone. At step <b>567</b> the mobile phone's RequestRouter checks whether the phone is in a quiescent state (i.e. no applications running). If so, it transforms the PlayRequest by setting the operation to &#x201c;dial&#x201d;, and is routed to the voice communications sub-system agent <b>568</b>. If, however, the SMS creation application is running, then the PlayRequest is transformed by setting the operation to &#x201c;set-destination-number&#x201d;, and it is routed to the running SMS creation application <b>569</b>. Lastly, if instead the Contacts application is running, then the PlayRequest is transformed by setting the operation to &#x201c;add-contact&#x201d;, and it is routed to the Contacts application <b>570</b>.</p>
<p id="p-0245" num="0347">The end result is that the act of clicking on a telephone number on the business card can have very different results depending on the context within which it is applied. In this example, both the current context within the Netpage Server <b>529</b> and the current context on the mobile phone were taken into account when processing the PlayRequest <b>521</b>.</p>
<p id="h-0031" num="0000">2.7 Communicating with Players</p>
<p id="p-0246" num="0348">Various communication methods are used between a Netpage Server <b>529</b>, intermediate gateways <b>570</b> and the Netpage client to enable the playing of PlayRequests <b>521</b> on the Player device <b>520</b>. Environmental factors such as the following affect the selected communication mechanism:
<ul id="ul0074" list-style="none">
    <li id="ul0074-0001" num="0000">
    <ul id="ul0075" list-style="none">
        <li id="ul0075-0001" num="0349">Available network connectivity.</li>
        <li id="ul0075-0002" num="0350">Type of player device being targeted.</li>
        <li id="ul0075-0003" num="0351">Size and type of objects being transferred and the nature of the operation being played.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0247" num="0352">This section describes categories of messaging mechanisms. Note that in a single play scenario a combination of messaging methods can be used.</p>
<p id="h-0032" num="0000">2.7.1 RPC (Synchronous) Messaging</p>
<p id="p-0248" num="0353">Referring to <figref idref="DRAWINGS">FIG. 19</figref>, in an environment where a persistent connection can be maintained between the Netpage Server <b>529</b> and the Player <b>520</b>, the server <b>529</b> can send the play request <b>521</b> to the player, block till play a request is handled and a response <b>571</b> is returned. A Desktop Player in an active session can communicate to the server <b>529</b> using this method.</p>
<p id="h-0033" num="0000">2.7.2 Notification (Asynchronous) Messaging</p>
<p id="p-0249" num="0354">Referring to <figref idref="DRAWINGS">FIG. 20</figref>, notification messaging is used when the environment allows playing of an Object through an asynchronous play( ) request <b>521</b> initiated from the Netpage Server <b>529</b> to the Netpage Player <b>520</b>, delivering the object to be played. The server <b>529</b> may continue its activities and optionally receive a future response from the Player. The example of a notification based request delivery is when Netpage server pushes an image to a Netpage Player.</p>
<p id="p-0250" num="0355">Depending on the underlying network infrastructure, a suitable protocol is used to push notifications to the Netpage Player, i.e. WAP push, SMS, etc.</p>
<p id="h-0034" num="0000">2.7.3 Streaming</p>
<p id="p-0251" num="0356">Referring to <figref idref="DRAWINGS">FIG. 21</figref>, for certain media types, it is preferable to be able to stream data to a player rather than transmitting the entire object before playing commences. The reasons are that:
<ul id="ul0076" list-style="none">
    <li id="ul0076-0001" num="0000">
    <ul id="ul0077" list-style="none">
        <li id="ul0077-0001" num="0357">Large objects may take significant time to transmit in their entirety to the player. Streaming allows for playing to take place before the entire object has arrived at the player thereby reducing latency.</li>
        <li id="ul0077-0002" num="0358">Target player devices may not have the capacity to hold the entire object. In that case, streaming is one option for playing the object on the device due to this limitation.</li>
        <li id="ul0077-0003" num="0359">Unbounded objects such as live video can be transmitted by streaming.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0252" num="0360">Video and audio provide the most significant examples of types that are typically better suited to streaming. To enable the streaming Netpage Server would be involved in the player selection process and would then leave actual streaming up to the two parties. Otherwise the server is likely to be a bottleneck and a source of additional latency.</p>
<p id="p-0253" num="0361">Player can perform read-ahead operations to buffer the data ahead of playing and avoid network delays and jitters which can affect the user's experience.</p>
<p id="h-0035" num="0000">2.7.4 Interactive Messaging</p>
<p id="p-0254" num="0362">Referring to <figref idref="DRAWINGS">FIG. 22</figref>, in some scenarios multiple user/pointer interactions with the Netpage Server <b>529</b> invoking multiple play requests is required to complete a user play experience. For instance consider a scenario where a user has a Netpage printout photo that he/she would like to send as a MMS message to a friend. One way of achieving this is by the user clicking on the friend's business card's MMS hyperlink. This action sends a play request to the player activating the MMS editor with the phone number to which the message is being sent. At this point user can choose to click on the photo to attach it to the MMS message. This results in the photo being sent as a second play request to the Player, wherein the photo is attached to the MMS content. The state of the player <b>520</b> allows chaining multiple play requests <b>521</b> to complete a transaction.</p>
<p id="h-0036" num="0000">2.7.5 Hybrid Messaging</p>
<p id="p-0255" num="0363">Referring to <figref idref="DRAWINGS">FIG. 23</figref>, in some scenarios a multi-transaction messaging without user interaction is performed to play an object. Some examples of hybrid messaging are:
<ul id="ul0078" list-style="none">
    <li id="ul0078-0001" num="0000">
    <ul id="ul0079" list-style="none">
        <li id="ul0079-0001" num="0364">Consider a scenario where a low-end mobile phone player without support for the suitable push-based notification, wishes to play an unbounded object. A hybrid solution can be adopted to push a small notification to the device, notifying the player application (i.e. through SMS) to initiate a stream-based communication to the Netpage Server request (i.e. WSP) for delivery of the object.</li>
        <li id="ul0079-0002" num="0365">Displaying a URL object also uses a multi-transaction hybrid messaging, where the original object (the URI) is pushed to the device using a Notification message. At this point the player (without user interaction) retrieves the URI content by sending a synchronous request/response message through HTTP.
<br/>
2.7.6 Player Session Establishment
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0256" num="0366">When players <b>520</b> are instantiated on devices (for instance during user login on a desktop player or on-demand by the mobile user), the player <b>520</b> registers the mobile device <b>100</b> is available for play requests by initiating a player session <b>580</b> with the Netpage Server <b>529</b>.</p>
<p id="p-0257" num="0367"><figref idref="DRAWINGS">FIG. 24</figref> shows the basic lifecycle of a NetpagePlayer session <b>580</b>. First, a process, which is typically running on a remote machine/device, calls the startPlayerSession( ) method <b>581</b> to commence a NetpagePlayer session <b>581</b> with the Netpage Server <b>529</b>. A userId <b>582</b> is provided which indicates the user <b>525</b> to which the supplied player <b>520</b> should be associated. Upon reception of a startPlayerSession( ) request <b>581</b>, the server <b>529</b> creates a PlayerSession object which is returned to the remote process <b>583</b>. This object can be used at some later time to terminate the session by calling the terminate( ) method.</p>
<p id="p-0258" num="0368"><figref idref="DRAWINGS">FIG. 25</figref> shows more details of the handling a player session <b>580</b> within the server <b>529</b>. As shown previously, a player session is created <b>589</b> by calling the startPlayerSession( ) method on the Netpage Server's CommandProcessor. This causes the creation of a PlayerSession which in turn creates a NetpagePlayerProxy which is run within the server and acts as a proxy for the real player by implementing the NetpagePlayer interface and passing all requests on to the real player. NetpagePlayerManager::addSession( ) is called to register the session with the NetpagePlayerManager. The NetpagePlayerManager is a singleton object responsible for managing all NetpagePlayer sessions and also for coordinating all NetpagePlayer traffic within the server.</p>
<p id="h-0037" num="0000">2.8 Player Deployment</p>
<p id="h-0038" num="0000">2.8.1 Player Connectivity</p>
<p id="p-0259" num="0369">Netpage Player <b>520</b> can be deployed on various devices with different network connectivity capabilities. Table 3 lists some examples of player network connectivity and transmission mechanisms. Note that a deployment environment may utilize a combination of connectivity types. Each connectivity type explains how one hop communicates to the next hop. For instance a player communicates with a wireless gateway on the path to the Netpage Server.</p>
<p id="p-0260" num="0370">
<tables id="TABLE-US-00012" num="00012">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="315pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 3</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Netpage Player Connectivity Types</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<tbody valign="top">
<row>
<entry>Player</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Connectivity</entry>
<entry>Comments</entry>
<entry>Example Standards</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Local</entry>
<entry>On a desktop device or a smart mobile, the player communicates</entry>
<entry>Shared memory,</entry>
</row>
<row>
<entry/>
<entry>with the next hop locally through the on-board IPC mechanisms.</entry>
<entry>TCP/IP on the loop-</entry>
</row>
<row>
<entry/>
<entry>The next hop could be the server running on the same desktop, or</entry>
<entry>back interface, etc.</entry>
</row>
<row>
<entry/>
<entry>the micro server running on the smart mobile, or the gateway to</entry>
</row>
<row>
<entry/>
<entry>the remote server running locally.</entry>
</row>
<row>
<entry>Fixed Network</entry>
<entry>The connectivity to the next hop is over a fixed (wired) network.</entry>
<entry>TCP over the Internet</entry>
</row>
<row>
<entry/>
<entry>For instance the desktop player communicates to the remote</entry>
<entry>through a dial-up serial</entry>
</row>
<row>
<entry/>
<entry>server through IP-based protocols over Internet.</entry>
<entry>link, etc.</entry>
</row>
<row>
<entry>Short-range</entry>
<entry>The player connects to the next hop through a Wireless Personal</entry>
<entry>IrDA, Bluetooth,</entry>
</row>
<row>
<entry>wireless</entry>
<entry>Area network (WPAN). For instance a player running on a PDA</entry>
<entry>802.15, etc.</entry>
</row>
<row>
<entry/>
<entry>uses Bluetooth to communicate to a Relay module running on a</entry>
</row>
<row>
<entry/>
<entry>local desktop.</entry>
</row>
<row>
<entry>Long-range</entry>
<entry>The player communicates with the next hop through a long-range</entry>
<entry>802.11a, b, g, GPRS,</entry>
</row>
<row>
<entry>wireless</entry>
<entry>wireless network with national (WLAN) or global (WWAN and</entry>
<entry>WCDMA, etc.</entry>
</row>
<row>
<entry/>
<entry>Satellite) coverage. For instance the player is a WAP-enabled cell</entry>
</row>
<row>
<entry/>
<entry>phone connecting to the remote server over GPRS wireless</entry>
</row>
<row>
<entry/>
<entry>network.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
2.8.2 Player Deployment Configuration
</p>
<p id="p-0261" num="0371">Different combinations of player devices and connectivity types can be configured to provide a suitable Netpage Player and Server integration environment. <figref idref="DRAWINGS">FIGS. 26 to 29</figref> demonstrate some of the more widely applicable types of deployment environments. Example pen connectivity is demonstrated for clarity.</p>
<p id="h-0039" num="0000">3. Object Association Design</p>
<p id="h-0040" num="0000">3.1 Object Associations Overview</p>
<p id="p-0262" num="0372">A Netpage object association allows content (objects <b>601</b>) to be associated with locations <b>513</b> on Netpage documents <b>603</b> and printouts. Arbitrary content types can be supported, but common examples include pictures/photos, audio, and video.</p>
<p id="p-0263" num="0373">An object <b>601</b> can either be associated <b>616</b> with a document during the authoring of the document (static association) or can be associated with a particular document printout at some arbitrary time after that printout has been created (dynamic association).</p>
<p id="p-0264" num="0374">Additionally, an association <b>616</b> may either be an impression association or a field association. An impression association is a dynamic association that is associated with a particular {x,y} location <b>613</b> on an impression. A field association is associated with a particular field of a form (static association) or form instance (dynamic association).</p>
<p id="h-0041" num="0000">3.2 Communicating Status to the User</p>
<p id="p-0265" num="0375">At times the mechanisms described require communication of status information (often errors) to the user. The simplest way to achieve this is to make use of the Netpage Player infrastructure. Special operations (e.g. show-status-ok-message and show-status-error-message) can be designated for transmitting status information to the user. The player architecture would determine, for each message, the most appropriate device (or devices) on which to display the message and the way in which to display it. For example, it may be that in certain situations the pointer is the only available player, in which case an error status might be &#x201c;played&#x201d; by illuminating a red LED on the pointer or playing a short sound.</p>
<p id="h-0042" num="0000">3.3 Impression Associations</p>
<p id="p-0266" num="0376">An object <b>601</b> can be associated dynamically with a specific {x,y} location <b>613</b> on an impression. The associations <b>616</b> are stored inside the Netpage Server <b>529</b> and can then be viewed in a number of ways:
<ul id="ul0080" list-style="none">
    <li id="ul0080-0001" num="0000">
    <ul id="ul0081" list-style="none">
        <li id="ul0081-0001" num="0377">1. By interacting with the physical impression using a device that communicates with the Netpage Server <b>529</b> to retrieve the associated objects <b>601</b>.</li>
        <li id="ul0081-0002" num="0378">2. By interacting with a virtual view of the impression from within a graphical software application <b>602</b>.
<br/>
3.4 Interacting with Dynamic Associations
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0267" num="0379">Referring to <figref idref="DRAWINGS">FIG. 30</figref>, an associated object <b>601</b> can be viewed by interacting with the physical impression using a Netpage Tag aware device. This shows an example where a tag reading device with built in screen is passed over a physical impression. The device communicates impression locations to the Netpage server <b>529</b> which responds with information regarding any associated object <b>601</b> that is currently sensed by the device. Depending on configuration, the device might begin immediately playing each associated object or present the user <b>525</b> with the option of playing the object <b>601</b>. If multiple objects <b>601</b> are within the device's field of view, then the device could present the user with a list of the objects <b>601</b> for selection.</p>
<p id="p-0268" num="0380">Associated objects <b>601</b> can also be viewed by interacting with a virtual view of the impression from within a graphical software application <b>602</b>. There are a number of possible mechanisms for displaying associated objects <b>601</b> in such an application <b>602</b>. Each mechanism is responsible for:
<ul id="ul0082" list-style="none">
    <li id="ul0082-0001" num="0000">
    <ul id="ul0083" list-style="none">
        <li id="ul0083-0001" num="0381">Indicating the presence of an associated object (or objects <b>601</b>), and</li>
        <li id="ul0083-0002" num="0382">Displaying the actual content of an associated object <b>601</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0269" num="0383">An example mechanism is shown in <figref idref="DRAWINGS">FIG. 31</figref> where a graphical &#x201c;Netpage Explorer&#x201d; application <b>602</b> is being used to view an impression which contains associated objects <b>601</b>. The example shows an approach in which some visible token <b>603</b> (in this case a black star) is displayed that indicates the locations that contain object associations <b>616</b>. The display of the tokens <b>603</b> can be toggled by clicking on a toolbar button <b>609</b>. To view an associated object <b>601</b> the user clicks (or alternatively double-clicks) on the relevant token <b>603</b> which causes the Netpage Explorer application <b>602</b> to retrieve the associated object <b>601</b> from the Netpage Server <b>529</b> and to then play the object <b>601</b>. Depending on the capabilities of the Netpage Explorer application <b>602</b>, the object <b>601</b> can either be played within the Netpage Explorer application <b>602</b> itself, or by an external application.</p>
<p id="h-0043" num="0000">3.5 Methods for Creating Impression Associations</p>
<p id="p-0270" num="0384">This section describes various alternative techniques that may be provided to allow users to dynamically associate content with a location on an impression. They include:
<ul id="ul0084" list-style="none">
    <li id="ul0084-0001" num="0000">
    <ul id="ul0085" list-style="none">
        <li id="ul0085-0001" num="0385">Modal association mechanisms</li>
        <li id="ul0085-0002" num="0386">Sticker based mechanisms</li>
        <li id="ul0085-0003" num="0387">Swipe Based mechanisms</li>
        <li id="ul0085-0004" num="0388">Swipe Based Stickers
<br/>
3.5.1 Modal Association
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0271" num="0389">A Modal Association involves first placing the user/pen session in a mode in which the next pointer click is interpreted as the specification of an impression location to which a current clipboard object <b>601</b> should be associated.</p>
<p id="p-0272" num="0390"><figref idref="DRAWINGS">FIG. 32</figref> shows an example of how an impression object association <b>617</b> might be created modally. In this case, the user attaches a photo to an impression. The steps are as follows:
<ul id="ul0086" list-style="none">
    <li id="ul0086-0001" num="0000">
    <ul id="ul0087" list-style="none">
        <li id="ul0087-0001" num="0391">1. The user takes a photograph using their digital camera <b>610</b>.</li>
        <li id="ul0087-0002" num="0392">2. The user pushes the photograph to the Netpage clipboard on the Netpage Server <b>529</b> (possibly implicitly).</li>
        <li id="ul0087-0003" num="0393">3. The user clicks with their Netpage pointer <b>533</b> on a printed toolbar <b>611</b>. In this case, the user clicks on the &#x201c;Attach Object&#x201d; button <b>612</b>. This places the pointer session into a mode in which the next click with the pointer <b>533</b> is interpreted as the specification of an impression location to which the current clipboard object <b>601</b> should be associated.</li>
        <li id="ul0087-0004" num="0394">4. The user clicks on the desired location <b>613</b> on a printed page <b>614</b>. This causes the Netpage Server <b>527</b> to retrieve the current object <b>601</b> from the user's clipboard <b>615</b> and to associate the object with the impression location selected in step 3.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0273" num="0395">An alternative approach requires steps 3 and 4 to be performed in the opposite order. That is, the &#x201c;Attach Object&#x201d; command is interpreted to mean associate the object with the impression location most recently touched by the user.</p>
<p id="p-0274" num="0396">Modal association mechanisms can be implemented on top of the Netpage Clipboard <b>615</b> mechanism.</p>
<p id="h-0044" num="0000">3.5.2 Tagged Stickers</p>
<p id="p-0275" num="0397">A tagged sticker <b>620</b> is a physical adhesive sticker which is Netpage tag encoded <b>617</b>. That is, it is a Netpage impression printed onto a physical sticker. Clicking on a tagged sticker causes an object to be associated with that sticker (impression). Tagged stickers <b>620</b> can be physically attached to any surface whether it be tagged or otherwise (e.g. books, desks, walls, etc) and thus provide a very flexible mechanism for dynamically associating objects with locations.</p>
<p id="p-0276" num="0398"><figref idref="DRAWINGS">FIG. 33</figref> shows an example of a simple tagged sticker <b>620</b>. In order to associate an object <b>601</b> with the sticker <b>620</b>, the user would perform the following steps.
<ul id="ul0088" list-style="none">
    <li id="ul0088-0001" num="0000">
    <ul id="ul0089" list-style="none">
        <li id="ul0089-0001" num="0399">1. Push object <b>601</b> into Netpage Clipboard <b>615</b></li>
        <li id="ul0089-0002" num="0400">2. Physically paste sticker <b>620</b> onto any surface</li>
        <li id="ul0089-0003" num="0401">3. Use Netpage pointer <b>533</b> to click on the sticker <b>620</b> to associate the object <b>620</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0277" num="0402">Once an object <b>601</b> has been associated with a sticker <b>620</b>, there are various ways in which the user can retrieve/play the object <b>601</b>. Firstly, the object <b>601</b> can be interacted with using a physical Netpage Player device <b>520</b>. Secondly, simply clicking on the sticker <b>620</b> with a Netpage pointer <b>533</b> would cause the object <b>601</b> to be played. This latter behaviour suggests that sticker associations would actually be implemented as field associations <b>618</b>.</p>
<p id="h-0045" num="0000">3.5.3 Reusable Stickers</p>
<p id="p-0278" num="0403">As so far described, once an object <b>601</b> is associated with a sticker <b>620</b>, that association <b>616</b> cannot be altered. A reusable sticker <b>621</b> allows for the object associated with a sticker to be changed, or erased. Such a sticker <b>621</b> is shown in <figref idref="DRAWINGS">FIG. 34</figref>. The &#x201c;Attach&#x201d; button <b>622</b> is used to associate an object <b>601</b> with the sticker <b>621</b> and allows for a new object <b>601</b> to be associated with the sticker <b>621</b>, overwriting any previous association <b>616</b>. The &#x201c;Clear&#x201d; button <b>623</b> allows for any association <b>616</b> to be removed.</p>
<p id="p-0279" num="0404">Both &#x201c;Attach&#x201d; <b>622</b> and &#x201c;Clear&#x201d; <b>623</b> are destructive operations in that they remove any association <b>616</b> that may have been in place before the operation took place. As such, it may be desirable to be able to protect against accidental invocation of such operations, especially in the sticker scenario in which the entire sticker is a clickable area.</p>
<p id="p-0280" num="0405">One mechanism for doing that is shown in <figref idref="DRAWINGS">FIG. 35</figref> in which a sticker <b>621</b> has a &#x201c;Confirm Action&#x201d; button <b>624</b>. In order for a destructive operation to be confirmed, the user must first select the operation and subsequently select the &#x201c;Confirm Action&#x201d; button <b>624</b>. A suitable timeout (say 10 seconds) can be used such that confirmations must take place within the timeout period in order to be valid.</p>
<p id="p-0281" num="0406">An alternative for preventing accidental invocation of destructive operations is to limit the interactivity of the sticker to small areas within the sticker as shown in <figref idref="DRAWINGS">FIG. 36</figref>. The associated object <b>601</b> is only played when the user selects the &#x201c;Play&#x201d; operation <b>625</b>. The overall sticker <b>621</b> is not interactive. As such, accidental invocation of destructive operations should be much less likely.</p>
<p id="h-0046" num="0000">3.5.4 Category Specific Stickers</p>
<p id="p-0282" num="0407">So far we have described stickers which retrieve the object <b>601</b> most recently assigned to the Netpage Clipboard <b>615</b>. The Netpage Clipboard <b>615</b> can store multiple objects <b>601</b> per user <b>625</b> with each object <b>601</b> falling into an object category or set of categories. As such, it is possible to have Category Specific Stickers <b>627</b> that retrieve current objects from the Netpage Clipboard <b>615</b> by category.</p>
<p id="p-0283" num="0408"><figref idref="DRAWINGS">FIG. 37</figref> provides examples. Clicking &#x201c;Attach&#x201d; on the left sticker causes the current clipboard object <b>601</b> with a category of &#x201c;video&#x201d; to be associated with the sticker <b>620</b>. The sticker on the right achieves a similar effect for objects in the &#x201c;photo&#x201d; category.</p>
<p id="h-0047" num="0000">3.5.5 Swipe Based Mechanisms</p>
<p id="p-0284" num="0409">The printed toolbar in <figref idref="DRAWINGS">FIG. 38</figref> allows an impression association <b>617</b> to be created by swiping a command from a printed toolbar <b>626</b> to the location on an impression to which the object <b>601</b> is to be associated. The user temporarily places the toolbar <b>626</b> on top of the destination impression and swipes from the toolbar <b>626</b> to the impression. The swiping action provides the system with digital ink samples from both the toolbar and the destination impression. These samples enable the determination of both which object <b>601</b> is to be associated (for the card shown the possibilities being the current video clip, current photo, current audio clip, or in the case of the &#x201c;Any&#x201d; icon, the current object regardless of type) and to which impression and location on that impression the object <b>601</b> is to be associated.</p>
<p id="h-0048" num="0000">3.5.6 Swipe Based Stickers</p>
<p id="p-0285" num="0410">A limitation of the stickers described earlier is that they do not actually create an association <b>616</b> between the object <b>601</b> and the underlying impression on which the sticker is applied. For example, consider the situation where a sticker has been applied to a tagged impression, and subsequently an object <b>601</b> is associated with the sticker. If the underlying impression is viewed within the Netpage Explorer application, then the sticker and associated object <b>601</b> is not be displayed since the Netpage Server <b>529</b> is not aware that the sticker has been applied to that impression.</p>
<p id="p-0286" num="0411">The above problem can be solved by applying the swipe based approach to stickers. The user steps involved are:
<ul id="ul0090" list-style="none">
    <li id="ul0090-0001" num="0000">
    <ul id="ul0091" list-style="none">
        <li id="ul0091-0001" num="0412">1. Push object <b>601</b> into Netpage Clipboard <b>615</b></li>
        <li id="ul0091-0002" num="0413">2. Physically paste sticker <b>620</b> onto a tagged impression <b>600</b></li>
        <li id="ul0091-0003" num="0414">3. Use Netpage pointer <b>533</b> to swipe from sticker <b>620</b> to impression <b>600</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0287" num="0415">The action of swiping across both the sticker <b>620</b> and the impression <b>600</b> creates a triple association between the impression <b>600</b>, the sticker <b>620</b>, and the object <b>601</b>. Specifically, the Netpage server <b>529</b> is now aware of:
<ul id="ul0092" list-style="none">
    <li id="ul0092-0001" num="0000">
    <ul id="ul0093" list-style="none">
        <li id="ul0093-0001" num="0416">The sticker <b>620</b> to which the object <b>601</b> has been associated, and</li>
        <li id="ul0093-0002" num="0417">The impression <b>600</b> on which the sticker <b>620</b> has been placed, and the location <b>613</b> on the impression <b>600</b> at which the sticker <b>620</b> has been placed, and thereby the location <b>613</b> on the impression <b>600</b> to which the object <b>601</b> is associated.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0288" num="0418">The above associations <b>616</b> allow the object <b>601</b> and sticker <b>620</b> to be displayed inside tools such as Netpage Explorer <b>602</b>.</p>
<p id="p-0289" num="0419">A variant of the swipe based sticker is shown in <figref idref="DRAWINGS">FIG. 39</figref>. It includes a transparent region <b>628</b> which allows the tags of the underlying impression <b>600</b> to be seen through the sticker <b>620</b>. This makes it possible to create a triple association <b>616</b> with a swipe that remains within the confines of the sticker <b>620</b>.</p>
<p id="p-0290" num="0420">In addition, the transparent region <b>628</b> may be transparent in the infrared spectrum in order for the Netpage pointer <b>533</b> to be able to see the Netpage tags on the underlying impression <b>600</b>. This allows for the transparent region <b>628</b> to be non-transparent in the visible spectrum. As such, graphics can be printed over the transparent region <b>628</b>. For example, a swipe based category specific sticker can be constructed which includes indicative graphics printed over the transparent region <b>628</b> as shown in <figref idref="DRAWINGS">FIG. 40</figref>. It is also possible that the instead of using a transparent region <b>628</b>, the sticker <b>620</b> may alternatively include a hole.</p>
<p id="h-0049" num="0000">3.5.7 Impression Associations Object Model</p>
<p id="p-0291" num="0421"><figref idref="DRAWINGS">FIG. 41</figref> shows the basic object model representation of impression associations <b>617</b>. An ImpressionAssociation <b>617</b> includes a location and the object's content. An ImpressionLocation includes an {impression,x,y} tuple <b>629</b>. The content of an associated object is represented as a PlayRequest <b>521</b>. In the common case, the PlayRequest <b>521</b> includes a single value, but it also possible to associate targets and operations. For example, any PlayRequest <b>521</b> can be associated with an impression.</p>
<p id="p-0292" num="0422">A swipe based sticker is associated with an ImpressionAssociation on the underlying impression.</p>
<p id="h-0050" num="0000">3.6 Field Associations</p>
<p id="p-0293" num="0423">An object <b>601</b> can be dynamically associated with a particular field of a form instance <b>630</b>. Such an associated object <b>601</b> is then delivered to the relevant application as part of a submission of the form instance <b>630</b>. This can be used, for example, to dynamically attach images (e.g. photos) to a Netpage form <b>632</b> and to then have those images sent to the application when the user clicks on the &#x201c;submit&#x201d; form command.</p>
<p id="p-0294" num="0424">The relationship between field associations <b>618</b> and impression associations <b>617</b> is shown in <figref idref="DRAWINGS">FIG. 42</figref>. A FieldAssociation <b>618</b> consists of a specification of the field with which the object <b>601</b> is associated and a reference to the underlying impression association <b>617</b> which provides details of the actual object <b>601</b>. The ImpressionAssociation <b>617</b> structure has been described. The field is specified by a FieldInstanceAddress <b>631</b> which specifies a form <b>632</b> instance <b>630</b> and a field number <b>633</b> within that form instance <b>630</b>. A Forminstance <b>630</b> is a specific instance of a Form <b>632</b> which is printed on to a Printout <b>633</b>.</p>
<p id="h-0051" num="0000">3.6.1 A Sample Application</p>
<p id="p-0295" num="0425"><figref idref="DRAWINGS">FIG. 43</figref> shows a simple application that demonstrates the use of field associations <b>618</b>. Use of the application proceeds as follows:
<ul id="ul0094" list-style="none">
    <li id="ul0094-0001" num="0000">
    <ul id="ul0095" list-style="none">
        <li id="ul0095-0001" num="0426">1. The user clicks on the &#x201c;Click here to attach photo&#x201d; button <b>640</b> with a Netpage pen <b>533</b> or pointing device. This causes the application to request the current photo from the Netpage clipboard <b>615</b> associated with the user <b>525</b>. That photo is then associated with the large rectangular field <b>641</b>.</li>
        <li id="ul0095-0002" num="0427">2. The user can click on the large field <b>641</b> in order to retrieve the associated photo and display it on a suitable Netpage Player device associated with that user <b>525</b>.</li>
        <li id="ul0095-0003" num="0428">3. The overall form can be submitted by clicking on the &#x201c;Submit&#x201d; button <b>642</b>. This causes a form submission to be sent to the relevant application. The form submission includes the photo currently associated with the large field <b>641</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0296" num="0429">The following sections use the sample application to describe the remaining details of the field association mechanism.</p>
<p id="h-0052" num="0000">3.6.2 Form Design for the Sample Application</p>
<p id="p-0297" num="0430">In order to design a form <b>632</b> that supports a simple application, two forms are specified. The first form <b>643</b> is a standard application form. The second form <b>644</b> is a special form that include fields that share the same impression coordinates as elements from the first form, but are overlayed on top of the first form's fields.</p>
<p id="p-0298" num="0431">The underlying (first) form <b>643</b> is shown in <figref idref="DRAWINGS">FIG. 44</figref>. This includes a submit button <b>642</b> for the application and also a field of type ObjectReceiver <b>644</b>. It is to this second field <b>644</b> that an object is to be assigned. The actual assignment occurs as a result of user interaction with the overlayed form as described below.</p>
<p id="p-0299" num="0432">The overlayed form <b>644</b> is shown in <figref idref="DRAWINGS">FIG. 45</figref>. The application name for the overlayed form <b>644</b> is the system supplied &#x201c;sys:object-associator&#x201d; application. This is a standard internal application that expects to receive a form submission with a &#x201c;submit&#x201d; button having one of the names as shown in Table 4. The table describes the meanings of each of the possible submit buttons. Note that an object-associator form does not need to provide all four submit buttons, although it must minimally provide both a &#x201c;set&#x201d; and a &#x201c;target&#x201d; button.</p>
<p id="p-0300" num="0433">
<tables id="TABLE-US-00013" num="00013">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 4</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Submit buttons supported by the sys: object-associator application</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="238pt" align="left"/>
<tbody valign="top">
<row>
<entry>Name</entry>
<entry>Description</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>set</entry>
<entry>The set command indicates that an object of the specified type is to be fetched</entry>
</row>
<row>
<entry/>
<entry>from the Netpage clipboard and associated with an ObjectReceiver field on the</entry>
</row>
<row>
<entry/>
<entry>underlying form. The location of the relevant ObjectReceiver field is indicated by</entry>
</row>
<row>
<entry/>
<entry>the &#x201c;target&#x201d; field that must also be part of this form.</entry>
</row>
<row>
<entry/>
<entry>The type of object to be associated is indicated by the field's value. If it is left</entry>
</row>
<row>
<entry/>
<entry>blank, then the current clipboard object (regardless of type) is retrieved and</entry>
</row>
<row>
<entry/>
<entry>associated.</entry>
</row>
<row>
<entry>clear</entry>
<entry>The clear command indicates that the object association currently assigned to the</entry>
</row>
<row>
<entry/>
<entry>&#x201c;target&#x201d; field should be removed.</entry>
</row>
<row>
<entry>show</entry>
<entry>The show command causes the object associated with the target field (if any) to</entry>
</row>
<row>
<entry/>
<entry>be displayed on a suitable Netpage Player.</entry>
</row>
<row>
<entry>target</entry>
<entry>The target field has two roles. Firstly it indicates the location/field on which the</entry>
</row>
<row>
<entry/>
<entry>set, clear and show commands should act. Secondly, if the target field is clicked</entry>
</row>
<row>
<entry/>
<entry>then it behaves as if it is a show command.</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0301" num="0434">The below pseudo code outlines the handling of the set command. The main principle to note is that the center of the target field provides the {x,y} location to which the retrieved object should be associated. This {x,y} location is also used to locate a form field with which the object is to be associated. This is achieved by determining the uppermost field on the page that intersects with {x,y} and that is also receptive to object associations. In the case of the example, the uppermost field on the page that intersects {x,y} is the target field itself, but it being a submit field, is not receptive to object associations. The next uppermost field that intersects {x,y} is the ObjectReceiver field on the underlying form. The end result is that the object is associated with a field on the underlying application form rather than the overlayed sys:object-associator form.</p>
<p id="p-0302" num="0435">
<tables id="TABLE-US-00014" num="00014">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>ObjectAssociatorApp::handleSetCommand(a_submission,</entry>
</row>
<row>
<entry>a_formDescription)</entry>
</row>
<row>
<entry>{</entry>
</row>
<row>
<entry>&#x2003;let l_setField = a_submission.getSubmitButton( )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// fetch the target field for the current form</entry>
</row>
<row>
<entry>&#x2003;let l_targetField = a_formDescription.fetchField(&#x201c;target&#x201d;)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// Calculate the impression location to which the object is to be</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// associated. The center of the &#x201c;target&#x201d; field is used as the</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// location to place the object.</entry>
</row>
<row>
<entry>&#x2003;let l_targetCenter = l_targetField.center( )</entry>
</row>
<row>
<entry>&#x2003;let l_location =</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;ImpressionLocation(a_submission.getImpressionId( ),</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;targetCenter);</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// Look for a receptive field to which we can associate the object.</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// A receptive field is a field with a type that indicates it is</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// receptive to object associations. &#x201c;submit&#x201d; fields are not</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// receptive, but most other field types are. N.B. The receptive</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// field is typically on another form.</entry>
</row>
<row>
<entry>&#x2003;let l_targetField =</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;(the uppermost receptive field on the page that includes</entry>
</row>
<row>
<entry>l_location)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// Retrieve an object of the appropriate type from the</entry>
</row>
<row>
<entry>NetpageClipboard.</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// The type to retrieve is indicated by the &#x201c;value&#x201d; element of the</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// &#x201c;set&#x201d; field</entry>
</row>
<row>
<entry>&#x2003;let l_objectRequestType = l_setField.value( )</entry>
</row>
<row>
<entry>&#x2003;let l_clipboard = getClipboard(l_submission.userId( ))</entry>
</row>
<row>
<entry>&#x2003;let l_object = l_clipboard.fetchObject(l_objectRequestType)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;// create the associations</entry>
</row>
<row>
<entry>&#x2003;let l_impressionAssoc = createImpressionAssociation(l_location,</entry>
</row>
<row>
<entry>&#x2003;l_object)</entry>
</row>
<row>
<entry>&#x2003;createFieldAssociation(l_targetField, l_impressionAssoc)</entry>
</row>
<row>
<entry>}</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
3.6.3 Field Associations and Form Submissions
</p>
<p id="p-0303" num="0436">Netpage forms <b>632</b> generally have one or more form submission buttons <b>642</b>. Clicking on such a button <b>642</b> with a pointer <b>533</b> causes the Netpage server <b>529</b> to perform handwriting recognition of the digital ink (if any) assigned to the form <b>632</b>, and to bundle the result into a form submission which is then posted to the application associated with the form <b>632</b>. The handwriting recognition largely involves converting handwriting fields (such as textual combs, and check boxes) into their digital equivalents (for example digital ink in textual combs is converted to text).</p>
<p id="p-0304" num="0437">Associated objects <b>601</b> can optionally be submitted as part of such form submissions. The requirement to transfer an associated object <b>601</b> (or otherwise) as part of the form submission is specified in the form definition for that form.</p>
<p id="h-0053" num="0000">3.7 Static Associations (Embedded Objects)</p>
<p id="p-0305" num="0438">Objects <b>601</b> can be associated with a document at document creation time. As with dynamic associations, such associations can either be impression associations <b>617</b> or field associations <b>618</b>. Static associations are specified in the Interface Description for the document. Static associations are represented as PlayRequests <b>521</b>.</p>
<p id="h-0054" num="0000">4. Netpage Clipboard</p>
<p id="p-0306" num="0439">The Netpage Clipboard <b>615</b> is a system supplied, per user object repository to which the user can push an object <b>601</b>. The object <b>601</b> thus pushed is considered to be the user's &#x201c;current object&#x201d; which may then be accessed by applications, in particular by the UserRequestRouter, but in general by any application that is acting on behalf of the user.</p>
<p id="h-0055" num="0000">4.1 Representation of Clipboard Objects</p>
<p id="p-0307" num="0440">Clipboard objects are stored as Netpage Player PlayRequest objects <b>521</b>. A PlayRequest <b>521</b> corresponds to a request to perform an action. It consists of three parts:
<ul id="ul0096" list-style="none">
    <li id="ul0096-0001" num="0000">
    <ul id="ul0097" list-style="none">
        <li id="ul0097-0001" num="0441">1. A target, which specifies on which player (device) the request should be executed.</li>
        <li id="ul0097-0002" num="0442">2. The operation, which specifies the action to be taken.</li>
        <li id="ul0097-0003" num="0443">3. A set of values, which are supplied as parameters to the operation.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0308" num="0444">A Value represents an instance of some physical type and consists of a type specification and data. The type specification has a physical type and zero or more associated type categories. The physical type identifies the structure of the data element of the Value. This document does not specify a particular representation for physical types. A possible mechanism would be to use MIME types. For example, if the physical type is image/jpeg then the data element would contain the binary data of an image in jpeg format.</p>
<p id="p-0309" num="0445">A shorthand form of specifying PlayRequests will now be used in this section. As an example, instead of using the tabular form this section will use the following syntax for PlayRequests that only have a single item:
<ul id="ul0098" list-style="none">
    <li id="ul0098-0001" num="0000">
    <ul id="ul0099" list-style="none">
        <li id="ul0099-0001" num="0446">value {phone-number, &#x201c;555 3473&#x201d;}</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0310" num="0447">
<tables id="TABLE-US-00015" num="00015">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry/>
<entry>values</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 3473&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
4.2 Mechanisms for Pushing Values to the Clipboard
</p>
<p id="p-0311" num="0448">In general, a user performs an explicit user action in order to push a value to the clipboard. Such actions may take various forms as described in the following sections. Once a value is in the clipboard any application can access the value. For example the value can be dynamically associated with a form field on a printed impression.</p>
<p id="h-0056" num="0000">4.2.1 Push via Printed Netpage Form</p>
<p id="p-0312" num="0449">Values can be pushed to the clipboard by interacting with a printed Netpage form such as that shown in <figref idref="DRAWINGS">FIG. 46</figref>. The form has been authored such that clicking on any of the phone numbers causes that phone number to be sent to the Netpage clipboard <b>615</b> for that user <b>525</b>. For example, clicking on the phone number for &#x201c;Susan Wilson&#x201d; <b>615</b> causes the following value to be pushed to the clipboard <b>615</b>:
<ul id="ul0100" list-style="none">
    <li id="ul0100-0001" num="0000">
    <ul id="ul0101" list-style="none">
        <li id="ul0101-0001" num="0450">value {phone-number, &#x201c;151 425 0617&#x201d;}
<br/>
4.2.2 Push via Physical Device
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0313" num="0451">Values <b>524</b> can be pushed to the clipboard <b>615</b> by Netpage aware devices that are capable of capturing and/or storing typed objects. Table 5 provides some example devices and scenarios in which they might push values to the Netpage clipboard <b>615</b>.</p>
<p id="p-0314" num="0452">
<tables id="TABLE-US-00016" num="00016">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="301pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 5</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Examples of Netpage aware devices capable of pushing objects to the clipboard</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="238pt" align="left"/>
<tbody valign="top">
<row>
<entry>Device</entry>
<entry>Example scenario</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Digital Camera</entry>
<entry>User takes a photo with the digital camera and then selects &#x201c;Send to Netpage&#x201d;</entry>
</row>
<row>
<entry/>
<entry>from a menu. This results in the photo being added to the Netpage clipboard (say</entry>
</row>
<row>
<entry/>
<entry>with type: image/jpeg).</entry>
</row>
<row>
<entry>mp3 audio players</entry>
<entry>User chooses a favourite song (or song collection) on the audio player and</entry>
</row>
<row>
<entry/>
<entry>selects &#x201c;Send to Netpage&#x201d; from a menu.</entry>
</row>
<row>
<entry>Video camera</entry>
<entry>Similar to the digital camera scenario, but for video instead of still photo.</entry>
</row>
<row>
<entry>Dictation device</entry>
<entry>User records a message and then pushes the audio file to the Netpage clipboard.</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
4.2.3 Implicit Push
</p>
<p id="p-0315" num="0453">To improve usability, it may be possible for certain devices to support implicit (or auto) push which is where certain user interactions with a device cause a value to be automatically pushed to the Netpage clipboard <b>615</b>. As an example, the user may configure their digital camera so that taking a photo causes the photo to be pushed to the Netpage clipboard <b>615</b>.</p>
<p id="h-0057" num="0000">4.3 Netpage Clipboard Interface</p>
<p id="p-0316" num="0454">In order for a device or application to push a value to the Netpage clipboard <b>615</b> or retrieve the current object <b>601</b>, the device or application first retrieves a reference to a NetpageClipboard object for that user from the Netpage server <b>629</b>. The following listing shows the NetpageClipboard interface in its most basic form. The interface allows the current clipboard value to be set, fetched and cleared.</p>
<p id="p-0317" num="0455">
<tables id="TABLE-US-00017" num="00017">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>interface NetpageClipboard</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;{</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;void</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;setObject(in PlayRequest a_object);</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;PlayRequest</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;fetchObject( );</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;void</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;clear( );</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;};</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0318" num="0456">The sections that follow discuss alternatives for various aspects of the Netpage clipboard interface.</p>
<p id="h-0058" num="0000">4.3.1 Multiple Values Per User</p>
<p id="p-0319" num="0457">The Netpage clipboard <b>615</b> is able to support multiple current values each of which belong to a different category. For example, the clipboard <b>615</b> can hold a current audio and current video at the same time. PlayRequest values can specify one or more categories to which that value belongs. Note that an object category is generally independent of the specific physical type of the value being added to the clipboard. For example, setObject( ) might be called with a value that has a category of &#x201c;photo&#x201d;, and a physical type of image/jpeg.</p>
<p id="p-0320" num="0458">This listing shows a NetpageClipboard interface that supports multiple current values.</p>
<p id="p-0321" num="0459">
<tables id="TABLE-US-00018" num="00018">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>interface NetpageClipboard</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;{</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;void</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;setObject(in PlayRequest);</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;PlayRequest</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;fetchObject( );</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;PlayRequest</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;fetchObject(in ObjectCategory);</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;void</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;clear(in ObjectCategory);</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;void</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;clearAll( );</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;};</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0322" num="0460">Such a clipboard would still support the current object concept which would return the most recently added object. To that end, the clipboard interface in the listing has two fetchObject( ) methods. The first takes no parameters and returns the most recently added object. The second takes an ObjectCategory as a parameter and returns the most recently added object which belongs to the specified object category.</p>
<p id="p-0323" num="0461">More generally the clipboard could reuse the general capability matching mechanism required by RequestRouters in the Netpage Player architecture. This would provide the clipboard with a very powerful interface for retrieving PlayRequests.</p>
<p id="h-0059" num="0000">4.3.2 Multiple Representations of Values</p>
<p id="p-0324" num="0462">As with clipboards in standard desktop environments, it may be desirable to allow the Netpage clipboard to support multiple representations of values, each of which would have a different MIME type. For example, a text object could be stored as both a text/plain and a text/rtf document.</p>
<p id="h-0060" num="0000">4.3.3 Using Values from the Netpage Clipboard</p>
<p id="p-0325" num="0463">Once a user places a value in the clipboard, the value can be accessed by applications in response to actions by the user. The basic clipboard interaction model is shown in <figref idref="DRAWINGS">FIG. 47</figref>. Referring to <figref idref="DRAWINGS">FIGS. 47 and 48</figref>, the clipboard starts empty <b>652</b>. A value can then be pushed <b>653</b> into the clipboard <b>615</b>. At that point an operation can be selected <b>654</b> by the user at which point the selected operation is executed against the current value in the clipboard. If an operation is selected while the clipboard is empty, then an error <b>655</b> is returned to the user.</p>
<p id="p-0326" num="0464">The model presented in <figref idref="DRAWINGS">FIG. 47</figref> is called the value first model as it requires the user to first select the parameter to an operation, and to then select the operation itself.</p>
<p id="p-0327" num="0465">One way in which an operation can be invoked by a user is for the user to interact with a printed Netpage form <b>660</b> which contains a set of PlayRequests which specify operations. <figref idref="DRAWINGS">FIG. 48</figref> shows such a printed command sheet and Table 6 describes the meaning of each operation. When a field is selected by the user (by clicking on it with a Netpage pointer), the corresponding operation is performed on the value currently stored in the clipboard</p>
<p id="p-0328" num="0466">
<tables id="TABLE-US-00019" num="00019">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="280pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 6</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Description of commands</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="231pt" align="left"/>
<tbody valign="top">
<row>
<entry>Command</entry>
<entry>Descriptions</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Play</entry>
<entry>Executes the default action for the current clipboard value. For example, for a</entry>
</row>
<row>
<entry/>
<entry>phone number object, the default action might be to dial the number, while for</entry>
</row>
<row>
<entry/>
<entry>an image it might be to display the image on a device capable of image display.</entry>
</row>
<row>
<entry>Display</entry>
<entry>Display the current clipboard value. This is different to play, since for a phone</entry>
</row>
<row>
<entry/>
<entry>number, for example, the phone number is displayed rather than dialled.</entry>
</row>
<row>
<entry>Attach to Page</entry>
<entry>Associate the current clipboard value with a location on a printed page.</entry>
</row>
<row>
<entry>Print</entry>
<entry>Print the current value.</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
4.4 Placing Operations and Targets in the Clipboard
</p>
<p id="p-0329" num="0467">As clipboard entries are actually stored as PlayRequests <b>521</b> it is also possible to push operations and targets to the clipboard <b>615</b>.</p>
<p id="h-0061" num="0000">4.4.1 Adding Operations to the Clipboard</p>
<p id="p-0330" num="0468"><figref idref="DRAWINGS">FIG. 49</figref> shows a clipboard model which allows operations <b>523</b> to be stored in the clipboard <b>615</b> rather than values. In this model, the user pushes an operation <b>523</b> to the clipboard <b>615</b> at step <b>661</b>, and then selects the value <b>524</b> to which the command <b>523</b> should be applied at step <b>662</b>. So, for example, a &#x201c;play&#x201d; operation could be pushed to the clipboard <b>615</b>, and then a phone number could be subsequently selected from a contacts list as already shown in <figref idref="DRAWINGS">FIG. 46</figref>. This model is called the operation first model as it requires the user to first select an operation <b>523</b>, and to then select the parameter <b>524</b> for the operation <b>523</b>.</p>
<p id="h-0062" num="0000">4.4.2 Allowing Both Value First and Operation First Models</p>
<p id="p-0331" num="0469">It is possible to simultaneously support both the value first and operation first models as shown in <figref idref="DRAWINGS">FIG. 50</figref>. In this model an empty clipboard <b>615</b> allows an operation <b>523</b> or a value <b>524</b> to be pushed at steps <b>663</b> or <b>664</b>. This gives the user the freedom to perform operations <b>523</b> in whichever order seems natural. Also, if a user is using operation first, then once the user has placed an operation <b>523</b> in the clipboard <b>615</b>, they can perform that operation <b>523</b> on as many values <b>623</b> as required simply by pushing values to the clipboard <b>615</b> at step <b>665</b> (and vice-versa for value first at step <b>666</b>). In order for a user to switch between models, however, the clipboard <b>615</b> must be explicitly cleared at steps <b>667</b> and <b>668</b>.</p>
<p id="p-0332" num="0470">The following examples show the two models in action. In each case, the user's steps are shown numbered and the contents of the clipboard <b>615</b> are shown after each step. In the first case, the user uses the value first model by first pushing a phone number to the clipboard <b>615</b>, and then selecting the operation <b>523</b> to be applied to that object:</p>
<p id="p-0333" num="0471">
<tables id="TABLE-US-00020" num="00020">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Push value</entry>
</row>
<row>
<entry/>
<entry>value { phone-number, &#x201c;555 1287&#x201d; }</entry>
</row>
<row>
<entry/>
<entry>Push operation</entry>
</row>
<row>
<entry/>
<entry>value { phone-number, &#x201c;555 1287&#x201d; }</entry>
</row>
<row>
<entry/>
<entry>operation { play }</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0334" num="0472">At this point, an observer of the clipboard <b>615</b> (likely the UserRequestHandler) determines that the PlayRequest <b>521</b> as shown below can be produced by combining the operation <b>523</b> and value <b>524</b> PlayRequests <b>521</b>. The resultant PlayRequest <b>521</b> can then be routed by the UserRequestHandler. Typically the UserRequestHandler &#x201c;plays&#x201d; a phone-number by sending the request to a device capable of dialling the phone number.</p>
<p id="p-0335" num="0473">PlayRequest created by merging contents of clipboard:</p>
<p id="p-0336" num="0474">
<tables id="TABLE-US-00021" num="00021">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>target</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>operation</entry>
<entry>play</entry>
</row>
<row>
<entry/>
<entry>values</entry>
<entry>phone-number</entry>
<entry>&#x201c;555 1287&#x201d;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0337" num="0475">The second case uses the operation first model:</p>
<p id="p-0338" num="0476">
<tables id="TABLE-US-00022" num="00022">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Push operation</entry>
</row>
<row>
<entry/>
<entry>operation { play }</entry>
</row>
<row>
<entry/>
<entry>Push value</entry>
</row>
<row>
<entry/>
<entry>operation { play }</entry>
</row>
<row>
<entry/>
<entry>value { phone-number, &#x201c;555 1287&#x201d; }</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0339" num="0477">At this point, the clipboard <b>615</b> determines that the PlayRequest <b>521</b> can be produced by combining the operation <b>523</b> and value <b>524</b> PlayRequests <b>521</b>.</p>
<p id="h-0063" num="0000">4.4.3 Ambiguous Usage</p>
<p id="p-0340" num="0478">One problem associated with this mechanism of pushing values <b>524</b> or operations <b>523</b> to the clipboard <b>615</b> is a value <b>529</b> or operation <b>523</b> can remain in the clipboard <b>615</b> indefinitely. As such, it is easy for a user <b>525</b> to forget that an object <b>601</b> is in the clipboard <b>615</b> and for unexpected results to emerge. This is particularly the case if we simultaneously allow both the value first and operation first models. As an example, suppose the user performs the following actions:
<ul id="ul0102" list-style="none">
    <li id="ul0102-0001" num="0000">
    <ul id="ul0103" list-style="none">
        <li id="ul0103-0001" num="0479">1. Push &#x201c;play&#x201d; operation to the clipboard</li>
        <li id="ul0103-0002" num="0480">2. Push a phone number (the number is dialled)</li>
        <li id="ul0103-0003" num="0481">3. An hour later, click on another phone number.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0341" num="0482">Using the state machine indicated by <figref idref="DRAWINGS">FIG. 50</figref>, step (3) would cause the number to be dialled. This may not be what the user expected as they have likely forgotten the fact that the &#x201c;play&#x201d; operation is currently residing in the clipboard.</p>
<p id="p-0342" num="0483">There are a number of approaches to addressing these useability concerns:
<ul id="ul0104" list-style="none">
    <li id="ul0104-0001" num="0000">
    <ul id="ul0105" list-style="none">
        <li id="ul0105-0001" num="0484">Single Use Clipboard Entries</li>
        <li id="ul0105-0002" num="0485">Clipboard Timeouts
<br/>
4.4.4. Single Use Clipboard Entries
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0343" num="0486"><figref idref="DRAWINGS">FIG. 51</figref> provides an alternate model to that previously described. In this model, using an item in the clipboard <b>615</b> at either of steps <b>525</b> or <b>626</b> results in that item being removed from the clipboard <b>615</b> at state <b>670</b>. That is, operations <b>523</b> and values <b>524</b> only remain in the clipboard <b>615</b> for a single use after which the clipboard <b>615</b> is returned to the Clipboard Empty state <b>627</b>. This model largely avoids the useability concerns described above, although not completely, as will be described in further detail.</p>
<p id="h-0064" num="0000">4.4.5 Clipboard Timeouts</p>
<p id="p-0344" num="0487">While a single-use clipboard model improves the useability of the Netpage clipboard <b>615</b>, there are still problematic scenarios which result from allowing both value first and operation first models to coexist. Consider the following steps:
<ul id="ul0106" list-style="none">
    <li id="ul0106-0001" num="0000">
    <ul id="ul0107" list-style="none">
        <li id="ul0107-0001" num="0488">Push &#x201c;play&#x201d; operation to the clipboard <b>615</b></li>
        <li id="ul0107-0002" num="0489">An hour later, push a phone number</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0345" num="0490">In the above, it is not clear whether the user <b>525</b> has indicated that they would like to apply the &#x201c;play&#x201d; command to the phone number, or whether they had forgotten that they had pushed the &#x201c;play&#x201d; operation an hour ago and were actually attempting to simply push a phone number to the clipboard <b>615</b>.</p>
<p id="p-0346" num="0491">In order to address the ambiguity, the concept of clipboard timeouts can be introduced, as shown in <figref idref="DRAWINGS">FIG. 52</figref>. In this model, objects only remain in the clipboard for a limited duration, 60 seconds in the example for steps <b>675</b> and <b>676</b>, but the exact value could be user configurable.</p>
<p id="p-0347" num="0492"><figref idref="DRAWINGS">FIG. 52</figref> shows clipboard timeouts in the context of a single-use clipboard. It is also possible to introduce clipboard timeouts within a multi-use clipboard, as shown in <figref idref="DRAWINGS">FIG. 53</figref>. Each application of an operation to a value at steps <b>680</b> and <b>681</b> resets the timeout period which allows for multiple values to be applied to an operation without having to push the operation each time. Similarly, it allows multiple operations to be applied to a value without having to push the value each time.</p>
<p id="h-0065" num="0000">4.4.6 Multi Value Operations</p>
<p id="p-0348" num="0493">The clipboard <b>615</b> concept can be extended to support operations that require more than one parameter <b>524</b>. The basic approach is to allow multiple values <b>524</b> to be pushed to the clipboard <b>615</b>. The clipboard <b>615</b> can then combine the values <b>524</b> with a pushed operation <b>523</b> to create a PlayRequest <b>521</b> with multiple parameters.</p>
<p id="h-0066" num="0000">4.4.7 Adding Targets to the Clipboard</p>
<p id="p-0349" num="0494">Consider the command sheet already shown in <figref idref="DRAWINGS">FIG. 48</figref>. Clicking on each operation with a Netpage pointer <b>533</b> causes the corresponding operation <b>523</b> to be pushed to the clipboard <b>615</b>. The operation <b>523</b> does not necessarily take effect immediately. The operation takes effect when there is sufficient information available in order to determine the full details of the PlayRequest <b>621</b> being requested by the user <b>525</b>. There are cases in which it proves valuable to allow the user <b>525</b> to be able to specify the target <b>522</b> of an operation <b>623</b>. For example, suppose a user wishes to print a photo from their digital camera, but does not wish to print it to their default printer.</p>
<p id="p-0350" num="0495">Selection of the printer can be achieved by selecting the printer from a list of printers printed on a Netpage card <b>700</b> as shown in <figref idref="DRAWINGS">FIG. 54</figref>. Clicking on a printer <b>707</b> on the card simply causes the details of that printer to be pushed to the Netpage clipboard <b>615</b>.</p>
<p id="p-0351" num="0496"><figref idref="DRAWINGS">FIG. 55</figref> shows the details of each of the fields on the card. Each field corresponds to a PlayRequest (<b>521</b><i>a</i>, <b>521</b><i>b</i>, <b>521</b><i>c</i>, <b>521</b><i>d</i>, <b>521</b><i>e</i>, <b>521</b><i>f</i>, <b>521</b><i>g</i>) that specifies a target <b>522</b> and nothing else.</p>
<p id="p-0352" num="0497">The following steps provide an example in which the user pushes a target to the clipboard.</p>
<p id="p-0353" num="0498">
<tables id="TABLE-US-00023" num="00023">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;1. Push photo of family dog to clipboard</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of dog&#x3e; }</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;2. Select printer by clicking on card</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of dog&#x3e; }</entry>
</row>
<row>
<entry/>
<entry>target { home-color-printer }</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;3. Push &#x201c;print&#x201d; command to clipboard (e.g. using</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;printed command sheet shown in FIG. 3</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of dog&#x3e; }</entry>
</row>
<row>
<entry/>
<entry>target { home-color-printer }</entry>
</row>
<row>
<entry/>
<entry>operation { print }</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0354" num="0499">At this point, a PlayRequest <b>521</b> can be constructed that combines all the elements from the clipboard <b>515</b> as shown in <figref idref="DRAWINGS">FIG. 52</figref>.</p>
<p id="p-0355" num="0500">
<tables id="TABLE-US-00024" num="00024">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>PlayRequest created by merging contents of clipboard</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="left"/>
<colspec colname="3" colwidth="84pt" align="left"/>
<tbody valign="top">
<row>
<entry>target</entry>
<entry>home-color-printer</entry>
<entry/>
</row>
<row>
<entry>operation</entry>
<entry>print</entry>
</row>
<row>
<entry>values</entry>
<entry>image/png category =&#x201d;photo&#x201d;</entry>
<entry>&#x3c;contents of photo of dog&#x3e;</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0356" num="0501">Once the full PlayRequest <b>521</b> is determined, it is performed and, depending on the clipboard model being used, the clipboard <b>615</b> would either be cleared of all contents (the single-use model), or left as is in readiness for future related requests <b>521</b> (the multi-use model). In the latter case, the subsequent act of pushing another photo (say of the family cat) to the clipboard <b>615</b> would leave the clipboard <b>615</b> in the following state:</p>
<p id="p-0357" num="0502">
<tables id="TABLE-US-00025" num="00025">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>target { home-color-printer }</entry>
</row>
<row>
<entry/>
<entry>operation { print }</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of cat&#x3e; }</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0358" num="0503">At this point, the clipboard contents indicate that the user wishes to print the newly selected photo on the color inkjet printer at home. This approach allows the user to request the printout of a number of photos on a particular printer, without having to specify the target <b>522</b> or the operation <b>523</b> each time, by simply clicking on each required photo.</p>
<p id="p-0359" num="0504">Even in the multi-use case, if the user is inactive for some configurable period of time, then a clipboard timeout causes the clipboard <b>615</b> to be cleared.</p>
<p id="h-0067" num="0000">4.4.8 Pushing More Fully Specified PlayRequests</p>
<p id="p-0360" num="0505">As the clipboard <b>615</b> supports the pushing of PlayRequests <b>521</b>, the application author is not limited to pushing values <b>524</b>, operations <b>523</b>, and targets <b>522</b>. It is also possible to push PlayRequests <b>521</b> that are more fully specified. For example, consider the printed command sheet <b>710</b> shown in <figref idref="DRAWINGS">FIG. 56</figref>. It contains various commands <b>711</b> that can be invoked by clicking on the sheet with a Netpage pointer <b>533</b>.</p>
<p id="p-0361" num="0506"><figref idref="DRAWINGS">FIG. 57</figref> shows the configuration of one of the commands. Namely, the &#x201c;print using . . . office printer&#x201d; command <b>712</b>. As can be seen, it corresponds to a PlayRequest <b>521</b> that specifies both a target <b>522</b> and a command <b>712</b>.</p>
<p id="p-0362" num="0507">
<tables id="TABLE-US-00026" num="00026">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;1. Push photo of family dog to clipboard</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of dog&#x3e; }</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;2. Click on &#x201c;print using ... office printer&#x201d; field</entry>
</row>
<row>
<entry/>
<entry>value { image/png category =&#x201d;photo&#x201d;, &#x3c;contents of photo of dog&#x3e; }</entry>
</row>
<row>
<entry/>
<entry>target { office-personal-printer }</entry>
</row>
<row>
<entry/>
<entry>operation { print }</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0363" num="0508">At this point, a PlayRequest <b>521</b> can be constructed that combines all the elements from the clipboard <b>615</b> as shown in <figref idref="DRAWINGS">FIG. 52</figref>. As such, the &#x201c;print using . . . office printer&#x201d; command <b>711</b> has reduced the number of clicks required by the user to perform the action from three clicks to two.</p>
<p id="p-0364" num="0509">
<tables id="TABLE-US-00027" num="00027">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>PlayRequest created by merging contents of clipboard</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="left"/>
<colspec colname="3" colwidth="84pt" align="left"/>
<tbody valign="top">
<row>
<entry>target</entry>
<entry>office-personal-printer</entry>
<entry/>
</row>
<row>
<entry>operation</entry>
<entry>print</entry>
</row>
<row>
<entry>values</entry>
<entry>image/png category =&#x201d;photo&#x201d;</entry>
<entry>&#x3c;contents of photo of dog&#x3e;</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
4.4.9 Communicating Status to the User
</p>
<p id="p-0365" num="0510">At times the mechanisms described may require communication of status information (often errors) to the user. One method is to make use of the Netpage Player infrastructure. Special operations (e.g. show-status-ok-message and show-status-error-message) can be designated for transmitting status information to the user. The player architecture would determine, for each message, the appropriate device (or devices) on which to display the message and the way in which to display it. For example, it may be that in certain situations the pointer <b>533</b> is the only available player in which case an error status might be &#x201c;played&#x201d; by illuminating a red LED on the pointer <b>533</b> or playing a short sound.</p>
<p id="h-0068" num="0000">5. Downloadable Content Billing</p>
<p id="h-0069" num="0000">5.1 Overview</p>
<p id="p-0366" num="0511">There is already an existing market place for purchasing and downloading products to mobile devices. Products such as: ringtones (monophone, polyphonic and real tone); wallpapers; games and other applications; music; music videos; films and TV. The printing capabilities of M-Print can add further to this list of products.</p>
<p id="p-0367" num="0512">The traditional methods for purchasing and downloading such products are based around web browsing and SMS to initiate the download and EMS or MMS to deliver the product to the phone <b>100</b>, see <figref idref="DRAWINGS">FIG. 58</figref>. The user enters and sends a product code via SMS at steps <b>720</b> and <b>721</b> to a vendor <b>723</b> who then delivers the product to the originating handset <b>100</b>, or to the mobile number supplied with the product code at step <b>724</b>.</p>
<p id="p-0368" num="0513">Netpage and M-Print technologies have the ability to simplify the user experience in accessing and purchasing these products, while also being able to utilise the existing infrastructure for the billing and delivery of the products.</p>
<p id="p-0369" num="0514"><figref idref="DRAWINGS">FIG. 59</figref> shows the typical sequence of events for a Netpage play sequence, cast in terms of downloading a preview of a ringtone. In the general Netpage play sequence a Netpage click at step <b>730</b> triggers a form submission which in turn results in a general &#x201c;play&#x201d; event being routed at steps <b>732</b> and <b>734</b> to a Netpage player via the Netpage Player Architecture. For downloadable content the form submission is shown as a simple hyperlink <b>731</b> and the &#x201c;play&#x201d; event is shown as a download of content, in this case a ringtone.</p>
<p id="p-0370" num="0515">Using a Netpage pen or pointer <b>533</b> the user <b>525</b> can click on a printed advertisement <b>715</b> in a magazine, newspaper, direct mail, on a product's packaging or possibly on a product itself. This can automatically deliver some content to the user's preferred Netpage Player <b>520</b> for that content. Most likely the Netpage Player <b>520</b> is the user's mobile phone <b>100</b>, as is shown in <figref idref="DRAWINGS">FIG. 59</figref>. Alternatively it can commence a dialogue with the user via the device's UI to determine what the user wants to do with the product they selected via their click. For content like ringtones or phone themes, this provides a more convenient interface than the existing SMS interfaces in use today.</p>
<p id="p-0371" num="0516">M-Print devices can provide a Netpage scan operation, and this can also be used to initiate a product download or purchase as above. The card that is scanned could have been printed on a M-Print printer <b>4</b> or it could be provided along with another product, e.g. a card in a breakfast cereal box.</p>
<p id="p-0372" num="0517">Combining the abilities of M-Print and Netpage can lead to a powerful suite of new product promotion and sales tools. For example, a user can use a Netpage pointer <b>533</b> in a mobile phone <b>100</b> to click on the latest ringtone advertisement in their favourite magazine. This results in purchasing the ringtone, charging it to their mobile phone account, download and install it on their phone <b>100</b>. It can also print on their phone a promotional card that allows a one time download of the same ringtone for them to give a friend. When their friend scans the card they receive the same ringtone downloaded and installed on their phone. Depending on the promotion running at the time the friend may receive the ringtone for free or at a discounted rate.</p>
<p id="h-0070" num="0000">5.2 Downloading Content</p>
<p id="p-0373" num="0518"><figref idref="DRAWINGS">FIG. 59</figref> shows the typical Netpage player sequence of events that are involved in downloading a product, in this case a ringtone, from a Netpage based application. In the diagram the ringtone download event being routed to the phone in steps <b>732</b> and <b>734</b> consist of a ringtone, with the play operation of preview <b>716</b>. It may have the target handset specified or it may rely on the Netpage player request routing mechanisms to determine the appropriate target <b>522</b> for the play request <b>521</b>.</p>
<p id="p-0374" num="0519">It has already been noted that the mobile computing environment already has some well established mechanisms for satisfying on-line product purchases. Below are three possible ways Netpage player requests can be integrated into the existing mechanisms to provide the user with a simpler user experience. In each of the cases the request to purchase or preview the product is instigated via a Netpage stroke, click or scan The differences arise in how the Netpage application <b>733</b> procures the product and delivers it to the user.</p>
<p id="h-0071" num="0000">5.3 Netpage as Middle Man</p>
<p id="p-0375" num="0520"><figref idref="DRAWINGS">FIG. 60</figref> shows a scenario where the Netpage ringtone application is used as an alternative interface and delivery mechanism to an existing ringtone vendor <b>723</b>. The Netpage application <b>733</b> does not own the rights to the products it is providing. Instead it is acting as a middleman, forwarding the requests at step <b>736</b> onto the product vendor <b>723</b> on behalf of the Netpage user and routing the requested product at step <b>739</b> back to the Netpage user via the Netpage player mechanism.</p>
<p id="p-0376" num="0521">This approach allows the user to benefit from the Netpage Player Architecture, which allows the user to customize the way they want the product to be routed after they have received it from the vendor. It also allows for the Netpage Player to provide extended handling of products on the mobile device. For example, the player may prompt the user if they wish to back up their existing ringtone before installing a new ringtone or it may guide the user through installing the ringtone as a custom ringtone for a particular phone number or set of phone numbers.</p>
<p id="h-0072" num="0000">5.4 Netpage as a Sales Agent</p>
<p id="p-0377" num="0522"><figref idref="DRAWINGS">FIG. 61</figref> shows the Netpage application <b>733</b> acting as a sales agent for the product vendor <b>723</b>. The play request <b>521</b> contains the user information and the product ID, and is routed to a special player <b>743</b> at step <b>741</b> that passes the request onto the vendor <b>725</b> at step <b>742</b>. The vendor <b>723</b> then delivers the product in its normal way, in this case via EMS/MMS at step <b>744</b>.</p>
<p id="h-0073" num="0000">5.6 Hybrid Approach</p>
<p id="p-0378" num="0523"><figref idref="DRAWINGS">FIG. 62</figref> shows a hybrid scenario where the both the Netpage Player Architecture and the existing mobile technologies are used to deliver the purchased product. The request <b>521</b> to purchase the product may be satisfied by the ringtone application <b>733</b> either internally as a pure Netpage application or acting as a middle man. The play request is dispatched containing both the purchased product and a voucher to be printed.</p>
<p id="p-0379" num="0524">The play request <b>521</b> is routed as a Netpage player request and when it reaches a player <b>745</b> deployed within the mobile network, acting a mobile device proxy, it is split into a product delivery and a print job. The product is sent out via an EMS/MMS message at step <b>746</b> and delivered to the mobile device <b>100</b> in the same way as a traditionally purchased product at step <b>747</b>. The print job in the form of an M-Doc reference <b>507</b> is delivered to the phone <b>100</b> via one of the mechanisms initiating a print job on the mobile device <b>100</b>.</p>
<p id="h-0074" num="0000">5.7 Billing for Downloaded Content</p>
<p id="p-0380" num="0525">The ability to bill or charge for services and products is at the heart of all businesses. To be able to bill you need to be able to:
<ul id="ul0108" list-style="none">
    <li id="ul0108-0001" num="0000">
    <ul id="ul0109" list-style="none">
        <li id="ul0109-0001" num="0526">1. identify a party to bill;</li>
        <li id="ul0109-0002" num="0527">2. have a mechanism to deliver and ensure payment of a bill; and,</li>
        <li id="ul0109-0003" num="0528">3. be able to justify the bill based on records of services or products provided.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0381" num="0529">When accessing a service or purchasing a product over a mobile network the user is typically charged for both the data or call traffic involved in making the transaction and also for the product or service purchased. For example, if a ringtone was purchased via Netpage, there is a charge for the ringtone and also a charge the data traffic used to download the content to the mobile device. It is possible for a 3rd party vendor to enter into a commercial relationship with the carrier whereby the carrier waives or reduces the data transfer costs, in return for a payment from the vendor. Mobile carriers play a central role in billing. They own the private networks used by mobile devices to connect to both the public telephone and data networks and it is at their discretion that a mobile device has access to any services. They already have a billing relationship with each of their customers and hence are able to identify them and bill them. Over time the billing options offered by carriers have evolved from the simple post-pay phone bill to include pre-paid, post-paid and plan-based billing, where customers are committed to paying a certain amount per period for which they can access a range of services. Carriers also have the ability to adjust or waive billing based on a user's activity over a billing period, for example, if you send more than certain number of SMSs in a day then all SMSs is to be charged at a different rate.</p>
<p id="p-0382" num="0530">For pre-paid accounts the account balance is checked before the transaction is commenced to ensure it has sufficient credit to pay for the service. Not all services can predict the total cost before they are delivered and in those cases it is up to the individual carriers to decide whether those services are to be made available to pre-paid customers or not.</p>
<p id="p-0383" num="0531">Mobile carriers recognise the value of their ability to identify and bill customers and make it available to third parties on a commercial basis. They do not make it freely available. The ability to integrate into a carrier's billing system is typically offered in a number of different ways, of which some are:
<ul id="ul0110" list-style="none">
    <li id="ul0110-0001" num="0000">
    <ul id="ul0111" list-style="none">
        <li id="ul0111-0001" num="0532">1. SMS/MMS-based services</li>
        <li id="ul0111-0002" num="0533">2. Hosting of 3rd party applications and billing the traffic for those applications differently</li>
        <li id="ul0111-0003" num="0534">3. Billing of data traffic to nominated servers at different rates</li>
        <li id="ul0111-0004" num="0535">4. The ability to bill on behalf of a third party, based on billing records provided by the third party.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0384" num="0536">To bill for products or services attained via Netpage interactions it is necessary to identify where in the sequence of events it makes sense to generate billing records and which party in the transaction is responsible for maintaining and acting on those billing records. To make these services available to users with pre-paid mobile accounts it may be necessary to be able to predict ahead of time the total cost of the transaction.</p>
<p id="p-0385" num="0537">If we consider the SMS-based content download scenario, <figref idref="DRAWINGS">FIG. 58</figref>, there are three billing opportunities:
<ul id="ul0112" list-style="none">
    <li id="ul0112-0001" num="0000">
    <ul id="ul0113" list-style="none">
        <li id="ul0113-0001" num="0538">1. The SMS to initiate the transaction may be a billable SMS</li>
        <li id="ul0113-0002" num="0539">2. The purchase of the content from the vendor</li>
        <li id="ul0113-0003" num="0540">3. The delivery of the content via a SMS or MMS.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0386" num="0541">The first SMS is a standard SMS that the user may be billed for, it may be billed differently given that it is destined for a vendor who has a business relationship with the carrier. The second SMS/MMS is not billed to the sender, as would normally happen, but it is billed to the receiver, via an agreement between the vendor and mobile carrier. In both of these cases the mobile carrier generates and manages the billing records. The purchase cost for the content is also billed to the receiver and the vendor is responsible for generating the billing record. In most cases this billing record is forwarded onto the mobile carrier, typically once a day via a batch transfer. The carrier accumulates these records and includes them on the user's phone bill as a service for the vendor. The carrier then makes a periodic payment of funds collected on the vendor's behalf to the vendor. This alleviates the need for the vendor to establish a billing relationship with each of its customers and also allows the mobile carrier to derive more revenue from its existing billing relationship with the customer.</p>
<p id="p-0387" num="0542">For the vendor to be able to generate billing records that a mobile carrier can incorporate into a customer's bill the mobile carrier needs to provide the vendor with a &#x201c;customer id&#x201d; or &#x201c;billing id&#x201d; per transaction that the carrier can use to link a billing record with a customer. The provision of customer id and the ability to generate billing records needs to be done in a secure way to reduce the possibility of fraud. To ensure the required security is maintained each vendor enters into a contractual relationship with each mobile carrier before the &#x201c;customer id&#x201d; data is shared with them.</p>
<p id="p-0388" num="0543">In situations where a vendor cannot or does not want to work with a mobile carrier they need to implement their own means of identifying and billing their customers. Identifying a user of a mobile device without the assistance of the mobile carrier in a uniform way across all mobile devices is non-trivial.</p>
<p id="p-0389" num="0544">Introducing Netpage and M-Print technologies provide a number of new billing opportunities for all parties involved. If we consider the case where Netpage acts a middle man, there are two billing opportunities:
<ul id="ul0114" list-style="none">
    <li id="ul0114-0001" num="0000">
    <ul id="ul0115" list-style="none">
        <li id="ul0115-0001" num="0545">1. When Netpage application retrieves the content from the content vendor;</li>
        <li id="ul0115-0002" num="0546">2. For the network traffic used to deliver the click and the ringtone.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0390" num="0547">The Netpage application fetching the content from the vendor generates a billing record for the customer. As for the SMS case above, it is possible to arrange with a mobile vendor to accept these billing records and to bill on the application's behalf. To do this the data traffic associated with the hyperlink activation is to be tagged with a &#x201c;customer id&#x201d; to be associated with the billing record.</p>
<p id="p-0391" num="0548">The mobile carrier tracks the data traffic used to send the click event and deliver the play request. By default that traffic would be billed in the same way as all other data traffic to and from the device. In a situation were the Netpage application is billing via the carrier it may be possible to strike a deal with the mobile carrier where by they waive the data traffic costs in return for a payment per transaction.</p>
<p id="p-0392" num="0549">In the case of Netpage acting as a Sales Agent, the Netpage system is not involved in delivering the product but only in making the sale. In this case there are four billing opportunities:
<ul id="ul0116" list-style="none">
    <li id="ul0116-0001" num="0000">
    <ul id="ul0117" list-style="none">
        <li id="ul0117-0001" num="0550">1. The data traffic for the Netpage click;</li>
        <li id="ul0117-0002" num="0551">2. The forwarding of the purchase request to the vendor;</li>
        <li id="ul0117-0003" num="0552">3. The purchase of the content;</li>
        <li id="ul0117-0004" num="0553">4. The delivery of the content</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0393" num="0554">The mobile carrier tracks and generate billing records for the data traffic and the delivery of the content. As in the SMS case the delivery message is charged to the receiver rather than the sender, via an agreement with the carrier.</p>
<p id="p-0394" num="0555">In this case the billing record for the content purchase generated by the ringtone vendor and would be handled in same way as for the SMS case above. It would be possible to have an agreement with the carrier whereby the cost of the data traffic and the delivery message are waived in return for a payment from the vendor.</p>
<p id="p-0395" num="0556">In most cases the Netpage application would be managed by the vendor as an alternative interface to their existing business and as such it does not need to bill for its forwarding services. If it is run by a different business then it generates a billing record for the forwarding service. This may be delivered either to the user or to the vendor who has agreed to pay for forwarded requests.</p>
<p id="p-0396" num="0557">The billing options for the hybrid approach are essentially the same as for when Netpage is a middle man but the number of deliveries, and hence billable events, to the mobile device is increased. In this case the bill for delivering the M-Doc may be changed to the vendor rather than the customer since it is an unsolicited promotion. Each of these billable events could be filtered by the mobile carrier based on later billing records that enter the system. For example, the cost of delivering the M-Doc may be waived or credited back, if the offer on the printout is taken up by another user.</p>
<p id="h-0075" num="0000">5.8 Digital Rights Management</p>
<p id="p-0397" num="0558">Closely related to billing is ensuring that the product or service is only used for the purpose(s) it was purchased for, e.g. a ringtone purchased for one phone, can not be installed on more than one phone, or a music file that is downloaded as a sample can only be played X times before being purchased.</p>
<p id="p-0398" num="0559">Digital Rights Management (DRM) schemes are being adopted by mobile device manufactures and mobile carriers. Where content is being delivered via the existing mobile mechanisms DRM is automatically triggered. The Netpage Player on a mobile device is implemented to hook into the DRM mechanisms on the mobile device. It prevents a user by-passing DRM restrictions on downloaded content.</p>
<p id="h-0076" num="0000">5.9 Identifying the User</p>
<p id="p-0399" num="0560">Mobile carriers identify the user of a mobile device when the device negotiates access to the network, either at boot time or when it comes within range of a base station. For GSM and CDMA networks a user's identity is determined by matching the International Mobile Subscriber Identity (IMSI) with a user's records held by the carrier. The IMSI is not sent during negotiation but rather an identity derived from it called a Temporary Mobile Subscriber Identifier (TMSI) is sent. Access to the IMSI can be protected by a PIN and most phones can be set up to prompt the user for a PIN when it is turned on. This is used to gain access to protected data, such as the IMSI. During the connection time negotiations the International Mobile Equipment Identity (IMEI) is also transmitted. This is not used to determine who the user is, but it is used to filter out mobile devices that are blocked from the network, e.g. stolen mobiles can be blocked based on their IMEI.</p>
<p id="p-0400" num="0561">When a mobile network allows a user on a GSM network, they assign the user a SIM card and then activate the SIM card. For a non-pre-paid SIM card the user needs to present sufficient identification information that the carrier is satisfied they know who the person is, that they are able to pay their bill, and where to send the bill. For a pre-paid account the carrier does not need such information, but some countries do require carriers to collect user identity information even for pre-paid accounts. Once the user has an activated SIM card it can be used from any handset and the correct account is billed for usage. Users are encouraged to protect their SIM cards with a PIN, so that it cannot be used until a PIN is supplied. However this is not enforced by the carriers, as it is a user choice.</p>
<p id="p-0401" num="0562">The Netpage system, includes the concept of a Netpage user, each of whom has a Netpage account. Some Netpage applications require knowledge of the user. To be able to access those applications via a Netpage pointer or scanner built into a mobile device, a link between the mobile device and a Netpage user is established. To do this there is a configuration and activation step, similar to a SIM card activation where the Netpage sub-systems on the mobile device are configured and a mapping is setup between the user identity for the mobile device and a Netpage user. If the Netpage account is being established for the first time then, as with a mobile carrier, the user identifies themselves so that the Netpage network operator is able to bill the user for any Netpage related costs incurred.</p>
<p id="p-0402" num="0563">There are times where a mobile user's identity cannot be determined via a mobile carrier: possibly a company does not want to or cannot get the information from a carrier; the mobile device may be connecting to the network without a carrier being involved; or the carrier may not have the information required, e.g. anonymous pre-paid accounts. In these situations the functionality available to the user can be reduced to functionality that does not require knowledge of the user's identity or additional Netpage specific information can be used to establish the user's identity to the satisfaction of the Netpage system.</p>
<p id="p-0403" num="0564">Netpage-specific user identity information is stored on the device during the Netpage registration/activation process. To give the same level of user identity portability as a SIM card the information can be stored on the SIM card, if it is present. If that is not possible, due to a mobile carrier denying access to it or it not being present, it can be stored in a secure store within the device and if that is not possible, on the normal file system of the device. If the identity information is stored on the SIM card, it can automatically move with the user's carrier identity when they swap SIM cards.</p>
<p id="h-0077" num="0000">6. Use Cases</p>
<p id="h-0078" num="0000">6.1 M-Print Blanks</p>
<p id="p-0404" num="0565">The M-Print printer <b>4</b> is able to print on special M-Print blanks that are specially designed to provide optimal print quality in a M-Print printer <b>4</b>. The blanks are purchased by a user in packs and loaded one-by-one into the printer when a print is being made.</p>
<p id="p-0405" num="0566">To ensure valid blanks are loaded into the printer <b>4</b>, a mechanism for validating the supplied blanks and rejecting imitations can be supplied. This can be done by reading an ID from the blank during printing and validating that ID either locally or via a network service.</p>
<p id="p-0406" num="0567">The blanks are pre-tagged. For Netpage to be able to correctly register a printout an ImpressionID is determined from the pre-tagged blank when the printout is printed. This implies the M-Print printer is able to read the ImpressionID from the blank.</p>
<p id="p-0407" num="0568">Both cases can use the ID encoded on the blank. The proposed scheme for validating the ID involves reading a second number from the blank called the signature. The signature and ID can then be validated as a pair. The proposed mechanism for this is to consult a network based service that securely stores the ID and signature pairs that have been manufactured.</p>
<p id="p-0408" num="0569">Both the ID and the signature are readable by the printer <b>4</b> and in the Netpage case by a Netpage pointer <b>533</b>. The M-Print printer <b>4</b> does not contain a Netpage pointer <b>533</b>, but it includes a bar code reader. This means the ID and the signature are provided on the back of the blank as a linear bar code, most likely in IR ink, for the printer <b>4</b> and on the front of the blank encoded in the Netpage tag encoding for the Netpage pointer <b>533</b>.</p>
<p id="p-0409" num="0570">In some circumstances, validation of the ID may not be possible in real time before the printout completes. Thus, users are informed if non-genuine blanks are being loaded into the printer and warn the user that loaded non-genuine blanks may decrease the lifetime of the printer's printhead.</p>
<p id="p-0410" num="0571">While complete validation of the ID may not be possible before printing, coding on the blank can be detected that indicates the orientation of the blank and also the start of the timing codes that allow the printer <b>4</b> to detect the speed at which the blank is moving through the printer <b>4</b>. If these can not be detected the blank may be rejected before printing commences.</p>
<p id="h-0079" num="0000">6.1.1 Loading a Card</p>
<p id="p-0411" num="0572">Referring to <figref idref="DRAWINGS">FIG. 63</figref>, a print job has been submitted to the printer <b>4</b>, before it can commence it must be supplied with a valid blank the right way up.
<ul id="ul0118" list-style="none">
    <li id="ul0118-0001" num="0000">
    <ul id="ul0119" list-style="none">
        <li id="ul0119-0001" num="0573">1. The user is prompted to insert a blank (step <b>750</b>)</li>
        <li id="ul0119-0002" num="0574">2. The user inserts a blank (step <b>751</b>)</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0412" num="0575">If the user inserts the paper upside down at option <b>752</b>, the user is prompted to re-insert the blank the other way. If the loaded paper is uncoded or incorrectly coded, the user is prompted to insert a genuine M-Print blank.</p>
<p id="h-0080" num="0000">6.1.2 Validate an ID</p>
<p id="p-0413" num="0576">Referring to <figref idref="DRAWINGS">FIG. 64</figref>, during or immediately after printing the printer <b>4</b> sends back the ID and possibly the signature of the blank at step <b>750</b>. In the background the M-Print services on the mobile device validates the ID at step <b>757</b>, either locally at step <b>759</b> or via a network service at step <b>758</b>, and if the validation fails it informs the user at step <b>763</b>. There is a timing issue here in that the user may no longer be looking at the mobile device <b>100</b> when the result of validation is known, to alert the user that the blank they have printed on is not valid and that using that media shortens the life of the printhead the M-Print service on the device can deliver the message as a local SMS causing the device to alert the user of a new message.</p>
<p id="p-0414" num="0577">Once the ID and signature have been validated it is passed at step <b>762</b> onto a Netpage microserver <b>761</b> for processing as the ImpressionID of the printout. The user is alerted that the last print was done on an invalid blank and continuing to use such blanks shortens the life of the printer <b>4</b>.</p>
<p id="h-0081" num="0000">6.2 Printing</p>
<p id="p-0415" num="0578">Common to all the use cases present below is printing. From a users perspective, printing normally has two stages, a third may be added if an error occurs or the blank is invalid:
<ul id="ul0120" list-style="none">
    <li id="ul0120-0001" num="0000">
    <ul id="ul0121" list-style="none">
        <li id="ul0121-0001" num="0579">1. Loading the blank</li>
        <li id="ul0121-0002" num="0580">2. Printing</li>
        <li id="ul0121-0003" num="0581">3. Error reporting</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0416" num="0582">The user view of loading the blank and reporting an invalid blank are covered above. The user's view of printing is both: a progress dialog that allows the user to view the progress of the print and cancel the print; and being able to see the blank move through the printer and emerge from the device.</p>
<p id="p-0417" num="0583">Cancelling the print stops the printer using any more ink, but the ID and signature from the blank may still be read for validation.</p>
<p id="h-0082" num="0000">6.2.1 Print</p>
<p id="p-0418" num="0000">
<ul id="ul0122" list-style="none">
    <li id="ul0122-0001" num="0000">
    <ul id="ul0123" list-style="none">
        <li id="ul0123-0001" num="0584">1. The user is prompted to load a card.</li>
        <li id="ul0123-0002" num="0585">2. A print progress dialogue is displayed, with a cancel button</li>
        <li id="ul0123-0003" num="0586">3. The blank is drawn fully through the printer and the print progress dialogue is removed</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0419" num="0587">If the user wants to cancel the print job the user presses cancel on the print progress bar which results in the print job stopping and the blank being ejected. If an error occurs such as a paper jam, an error message may be provided to alert the user. The user may then dismiss the dialog of the error message and progress dialogs are removed. If a blank fails validation, the user is alerted of the failure.</p>
<p id="p-0420" num="0588"><figref idref="DRAWINGS">FIG. 65</figref> shows a Printer DC <b>770</b> as the object that exposes the graphics model used by applications <b>514</b> to build up the printed image. It shows the printing following after the application <b>514</b> has completed drawing the page. On some systems these operations may overlap or the application <b>514</b> may be requested to draw the page multiple times with different clipping regions, e.g. rendering in bands, either way the logical flow should still be the same. If capturing all printed documents as Netpage documents is supported then fully composed page is lodged with the Microserver <b>761</b>, the Microserver <b>761</b> treats this a document lodgement, and records a printout for that document, when the ID and signature are successfully validated and passed onto the microserver <b>761</b>.</p>
<p id="p-0421" num="0589"><figref idref="DRAWINGS">FIG. 65</figref> shows the ID and signature being passed out from the printer <b>4</b> soon after printing has commenced, the timing of the transmission of the ID and signature is not significant for the user since they only know about it if the validation fails which occurs after the print has completed. For Netpage enabled printouts, this timing is more critical, since a situation can occur where a printout is immediately handed to another user who clicks on it with a Netpage pointer or pen <b>733</b> and expects a result. Where the printing device does not have network connectivity this may not work at all. If the printing device does have network connectivity it still might not work, or at least have a perceivable latency, while the network validation and the ID and registration of the printout is completed.</p>
<p id="h-0083" num="0000">6.3 Uploading and Downloading Data</p>
<p id="p-0422" num="0590">Moving data on and off mobile devices via the wireless network reliably presents a number of challenges:
<ul id="ul0124" list-style="none">
    <li id="ul0124-0001" num="0000">
    <ul id="ul0125" list-style="none">
        <li id="ul0125-0001" num="0591">1. Wireless networks are inherently unreliable and the link can be lost at any point. This can occur due to signal loss or the mobile device having to disable the radio link to conserver power or to allow another power hungry activity to start up, e.g. printing.</li>
        <li id="ul0125-0002" num="0592">2. The bandwidth available on the existing 2.5 G networks is limited and it could take up to several minutes to transmit a high resolution photo on or off the device</li>
        <li id="ul0125-0003" num="0593">3. The cost of transferring data over a mobile network can vary and it may be significantly cheaper to delay the transfer to a non-peak time, e.g. late at night.</li>
        <li id="ul0125-0004" num="0594">4. Mobile carriers might prefer non-urgent data transfers to happen during lulls in the network traffic.</li>
        <li id="ul0125-0005" num="0595">5. It may be cost effective to support different means of transferring data. A HTTP Put over GPRS is the most obvious way, but it may be possible to take advantage of carrier price subsidies and send the same data via an MMS or SMS message.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0423" num="0596">Referring to <figref idref="DRAWINGS">FIGS. 66 and 67</figref>, to provide flexibility in how data uploading and downloading is achieved and to insulate the rest of the architecture from it, each mobile device <b>100</b> has a service responsible for delivering and receiving data from the network. It queues data transfer requests <b>780</b> and guarantees delivery of the data in the an efficient manner. It supports partial transfers and resumption of transfers after a break in the data link to minimise the data sent over a wireless network. An equivalent service can be located in the network to both receive data from the mobile device and forward it on to its destinations and also to queue data being sent to the mobile device.</p>
<p id="p-0424" num="0597">The network based component of this service provides a carrier integration point. A carrier may choose to host this service and bill the traffic for it differently to encourage usage of the M-Print and Netpage services. It also provides a single point of modification to take advantage of new features in the carrier networks, e.g. a new data push model not based on SMS.</p>
<p id="p-0425" num="0598">The device based component of this service provides a simple interface to the device based M-Print and Netpage services, while providing the ability to exploit all the features of a mobile device <b>100</b> to access network based services. This may include taking advantage of WLAN connectivity where possible.</p>
<p id="p-0426" num="0599">The download sequence shown in <figref idref="DRAWINGS">FIG. 67</figref> illustrates how &#x201c;data push&#x201d; to a mobile device can be achieved which cannot be directly reached from the general internet. It shows a SMS message being sent to the device to inform the download service that there are downloads waiting to be fetched. The message may include some information about the urgency of the downloads, to allow the device side download service to decide when it should fetch the download(s).</p>
<p id="h-0084" num="0000">6.4 Netpage Pointer/Scanner</p>
<p id="p-0427" num="0600">In the printing scenario a blank's ID is read during printing. This ID is used to both facilitate validation of the blank as a valid M-Print blank and also as an Impression ID for Netpage. The Impression ID is used by the Netpage server <b>529</b> to associate the M-Print printout with the document that was printed onto the blank.</p>
<p id="p-0428" num="0601">An M-Print blank has the ID encoded on the back of the blank in a way that is readable by the paper feed mechanism. If the blank has been pre-tagged with Netpage tags then the ID is also embedded in the Netpage tags. To initiate a Netpage interaction the first step is for the user to perform an action that retrieves the ID and supplies it to a Netpage server. The ID can be retrieved by:
<ul id="ul0126" list-style="none">
    <li id="ul0126-0001" num="0000">
    <ul id="ul0127" list-style="none">
        <li id="ul0127-0001" num="0602">1. A stroke or click with a Netpage Pen;</li>
        <li id="ul0127-0002" num="0603">2. A click with a Netpage Pointer;</li>
        <li id="ul0127-0003" num="0604">3. Scanning the ID on the back of the card.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0429" num="0605">The first two of these actions use Netpage specific devices to read the Netpage tags. The pen <b>533</b> provides a stream of digital ink along with the ID and the pointer provides a position on the printout along with the ID. The last uses a scanning mechanism to read the ID from the back of the printout. It can be the same scanner as is used in the M-Print printer paper feed mechanism or it can be a dedicated scanner that the printout is feed into or passed over, similar to a bar code reader. This mechanism only provides the ID, it does not provide any positional information, but Netpage applications can be authored to support a &#x201c;scan&#x201d; of the printout as well as a click or a stroke on the printout.</p>
<p id="h-0085" num="0000">6.4.1 Activate a Netpage Application via a Scan</p>
<p id="p-0430" num="0606">The user passes an existing M-Print printout back through their M-Print printer to activate the associated Netpage application.</p>
<p id="p-0431" num="0607">The printout is drawn through the printer and a Netpage application is launched. If there is no Netpage application for the printout, the user is told the printout has no associated application. If the printout fails validation, the user is alerted of the failure.</p>
<p id="p-0432" num="0608">The effect the user sees as a result of a Netpage application being launched varies depending on the application, some examples are:
<ul id="ul0128" list-style="none">
    <li id="ul0128-0001" num="0000">
    <ul id="ul0129" list-style="none">
        <li id="ul0129-0001" num="0609">For a photo the use may see the photo displayed on the screen with the option to reprint it or send to someone.</li>
        <li id="ul0129-0002" num="0610">For a business card the user may receive a vCard on their mobile device which can be processed in the normal way.</li>
        <li id="ul0129-0003" num="0611">For a coupon a completed SMS/MMS/email may be displayed asking the user if they wish to send it off to enter the competition.</li>
        <li id="ul0129-0004" num="0612">Any printout may be displayed on the mobile device showing the print image and allowing the user to navigate the hyperlinks and fields in the printout and activate them. If the device has a touch screen, the user can use a pointer to select fields and generate digital ink.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0433" num="0613"><figref idref="DRAWINGS">FIG. 68</figref> is a sequence fragment that shows the processing of a scanned ID from the paper feed mechanism in the printer. If a scanned ID and signature is returned to the Print Service while it is printing, see <figref idref="DRAWINGS">FIG. 65</figref>, it is validated and then passed onto the Netpage Microserver <b>761</b> triggering the submission of the Netpage document. The validation is performed by the Print Service <b>754</b> in this case to ensure the user can be warned about using invalid media as early as possible. If the Printer Service receives a scanned ID and signature while it is not printing at step <b>790</b> then it passes it directly to the Netpage Microserver <b>761</b> as a pseudo-click or scan. The Microserver <b>761</b> processes it in a similar way to the way it processes a Netpage pointer click.</p>
<p id="h-0086" num="0000">7. Applications</p>
<p id="h-0087" num="0000">7.1 Photo Printing</p>
<p id="p-0434" num="0614">Photo printing is a major application for M-Print. In its simplest form, photo printing can be done completely locally, without any dependence on network services or interactions. Printing a photo can interact with a photo archive. If a photo is printed then it is likely the user may wish to access or print the photo again. When a photo is printed it can be pushed out to the photo archive making it available for on-line retrieval or access. Netpage functionality offers a convenient and natural way of interacting with a printed photo. A Netpage enabled photo can act as a permission token, giving the holder of the printout permission to retrieve and reprint the photo from the archive. Photo archiving from mobile devices is an independent application from photo printing. Users typically take more photos that they wish to keep in an archive than they wish to print.</p>
<p id="h-0088" num="0000">7.1.1 Local Photo Printing</p>
<p id="p-0435" num="0615">Referring to <figref idref="DRAWINGS">FIG. 69</figref>, a camera phone user takes a photo at step <b>795</b> and elects to print it.
<ul id="ul0130" list-style="none">
    <li id="ul0130-0001" num="0000">
    <ul id="ul0131" list-style="none">
        <li id="ul0131-0001" num="0616">1. The user uses the default photo application <b>796</b> on their device and takes a photo at step <b>795</b></li>
        <li id="ul0131-0002" num="0617">2. The user selects print from the applications menu</li>
        <li id="ul0131-0003" num="0618">3. The user is prompted to load a blank</li>
        <li id="ul0131-0004" num="0619">4. The print is produced</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0436" num="0620">Other options include:
<ul id="ul0132" list-style="none">
    <li id="ul0132-0001" num="0000">
    <ul id="ul0133" list-style="none">
        <li id="ul0133-0001" num="0621">The user prints with a border at step <b>797</b> by selecting print options from the menu before printing and selects to print with a border, and the user can then select print from the applications menu.</li>
        <li id="ul0133-0002" num="0622">The user requests the date is printed with the photo at step <b>798</b> by selecting print options from the menu and selecting the print date and time option, and the user can then select print from the applications menu.</li>
        <li id="ul0133-0003" num="0623">The user adds a caption at step <b>799</b> where the user selects photo options from the menu and selects add caption,</li>
        <li id="ul0133-0004" num="0624">wherein the user is prompted to enter a caption and the user selects print from the applications menu.
<br/>
7.1.2 Printing a Photo Archives the Photo
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0437" num="0625">Referring to <figref idref="DRAWINGS">FIG. 70</figref>, printing a photo generally implies that the photo has more worth to the user than the photos the user has taken and not printed, it is more likely to be shared and hence more likely to be referred to in an archive. This scenario describes pushing a photo that is printed to the photo archive on the mobile device <b>100</b> to give it priority in being transferred off the device <b>100</b> and into the archive <b>800</b>.</p>
<p id="p-0438" num="0626">When the photo is pushed to the archive the user is given the opportunity to specify what access permission's should be applied to the photo at step <b>801</b> in the archive <b>800</b>. In this scenario it is kept to public or private <b>802</b> for simplicity, but it could easily be a more complex selection from various ACLs (Access Control Lists) maintained by the user.
<ul id="ul0134" list-style="none">
    <li id="ul0134-0001" num="0000">
    <ul id="ul0135" list-style="none">
        <li id="ul0135-0001" num="0627">1. The user uses the default photo application <b>796</b> on their device <b>100</b> and takes a photo.</li>
        <li id="ul0135-0002" num="0628">2. The user may set some print options <b>801</b></li>
        <li id="ul0135-0003" num="0629">3. The user selects print from the applications menu <b>803</b></li>
        <li id="ul0135-0004" num="0630">4. The user is prompted whether the photo should be public or private in the archive <b>802</b></li>
        <li id="ul0135-0005" num="0631">5. The user is prompted to load a blank</li>
        <li id="ul0135-0006" num="0632">6. The print is produced.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0439" num="0633">Optionally, default settings may be applied for archiving the images where the user may not be prompted if the default settings indicate whether all photos should be public or private.</p>
<p id="p-0440" num="0634">This sequence diagram shows the most likely case, where uploading the photo to the archive occurs after printing has finished. This is the most likely case, since power demands of printing require the network connectivity section of the phone to be powered down, or at least avoided. Some devices may be able to support both, in which case the upload could occur during the print. The photo archive is accessible from both a browser on a mobile device <b>100</b> or a desktop browser. The user is able to print a photo from the archive to either a desktop printer or the printer in their mobile device.</p>
<p id="h-0089" num="0000">7.1.3 Printing Archives a Netpage Enabled Photo</p>
<p id="p-0441" num="0635">In this use case the user interactions are the same as for &#x201c;Printing a Photo Archives the Photo&#x201d;, but in the background, the document, the printout, and the impression ID are registered with the Netpage infrastructure. The printout can be interacted with via a Netpage pointer <b>533</b> immediately on the device it was printed on, but it is not be active for other pointers or pens until it has been successfully uploaded to the network based Netpage services.</p>
<p id="p-0442" num="0636">Referring to <figref idref="DRAWINGS">FIG. 71</figref>, for Netpage enabled photos that already are being archived in a general purpose photo archive it is not desirable for the Netpage server <b>529</b> to also store the photo, so the Netpage server <b>529</b> stores a reference to the photo in the archive <b>800</b>, allowing it to be retrieved when necessary. The Netpage server <b>529</b> still tracks user interactions with the photo: reprints, digital ink, etc but it generally does not store the actual image itself. When the photo is pushed to the archive the pusher receives a reference to the photo that can be used to retrieve the photo when it is required.</p>
<p id="p-0443" num="0637">The need to move the photo and the Netpage document associations out into the network to enable general Netpage interactive on the printed photo, gives the pushing of the photo to the photo archive more importance. In this case the push to the archive includes a flag indicating the photo should be moved to the off device archive as soon as possible. The registering of a printout with the Netpage services can not complete until the blank has been validated since the ID is used as the Netpage impression ID.</p>
<p id="p-0444" num="0638">In this case the photo reference rather than the photo is lodged with the Netpage microserver. The printout can be interacted with via a Netpage pointer on the same device after the ID and signature have been validated, but other pointers and pens can only interact with the document after it has been successfully uploaded to the Netpage network server.</p>
<p id="h-0090" num="0000">8. Player Use Cases</p>
<p id="h-0091" num="0000">8.1 Business Card Application</p>
<p id="p-0445" num="0639">This section covers the Netpage Player PlayRequests <b>521</b> used in the interactive Netpage Business Card and describes the behaviour of the Player Agents <b>537</b> handling such objects and commands. <figref idref="DRAWINGS">FIG. 72</figref> shows the sample business card <b>810</b>. The fields (text <b>811</b> and images <b>812</b>) are generally associated with PlayRequests <b>521</b> that (partially) specify what action is required when a user clicks on one of the fields with a Netpage pointer <b>533</b>.</p>
<p id="h-0092" num="0000">8.1.1 Phone Number</p>
<p id="p-0446" num="0640">Referring to <figref idref="DRAWINGS">FIG. 73</figref>, the phone number fields <b>817</b>, <b>818</b> on the business card <b>810</b> are associated with PlayRequests <b>816</b>, <b>819</b> that simply specify a phone number, without specifying the operation to be performed or the target of the operation. The author of the business card <b>810</b> is thus providing maximum freedom to the receiver of the business card <b>810</b> to make use of the phone number fields as they see fit. For example, one user may have their system configured to react to such PlayRequests <b>816</b>, <b>819</b> by having their mobile phone dial the specified number, while another user may prefer to have such PlayRequests <b>816</b>, <b>819</b> simply pushed to the Netpage Clipboard <b>615</b> for later use.</p>
<p id="p-0447" num="0641">The mobile phone icon <b>813</b> is configured with a more fully specified PlayRequest <b>809</b> than the phone number fields <b>817</b>, <b>818</b>. The PlayRequest <b>809</b> specifies an operation (&#x201c;dial&#x201d;) that should be performed when that field is selected. The operation overrides the default handling of phone-number values that might otherwise be performed in the absence of an explicit operation. Note that the target of the request is still left unspecified. This gives the routing system the freedom to determine the most appropriate device with which to make the call. This is especially appropriate for a business card <b>810</b> which might be handed out to hundreds of users who each typically have their own phone. Placing a specific target in the PlayRequest would have been possible, although inappropriate in this case. The landline telephone icon <b>813</b> is configured similarly to the mobile phone icon, but with a different value for the phone number.</p>
<p id="h-0093" num="0000">8.1.2 Fax Number</p>
<p id="p-0448" num="0642">Referring to <figref idref="DRAWINGS">FIG. 74</figref>, the Fax phone number field <b>820</b> is configured exactly as for the phone number fields except that the phone number value is now also marked as belonging to the &#x201c;fax&#x201d; category <b>823</b>. This additional information can potentially be used during request routing in order to select targets which specifically cater for &#x201c;fax&#x201d; phone numbers rather than targets which simply specify that they cater for phone numbers in general. The &#x201c;fax&#x201d; button field <b>821</b> specifies an operation (&#x201c;fax&#x201d;) in the PlayRequest <b>822</b>. The exact semantics of that operation are target dependant. For example, on a mobile phone, the Fax Agent might launch the Fax editor with the destination fax number pre-configured.</p>
<p id="h-0094" num="0000">8.1.3 Web Address</p>
<p id="p-0449" num="0643">Referring to <figref idref="DRAWINGS">FIG. 75</figref>, the web URL field <b>824</b> and &#x201c;WWW&#x201d; icon <b>825</b> are configured similarly to the phone number field and phone icons. The icon <b>825</b> is specifically configured to cause a web browser to be invoked <b>826</b> on the specified URL, whereas the PlayRequest <b>827</b> for the URL field is less fully specified and is therefore more flexible in terms of its possible interpretations.</p>
<p id="h-0095" num="0000">8.1.4 SMS and MMS Fields</p>
<p id="p-0450" num="0644">Referring to <figref idref="DRAWINGS">FIG. 76</figref>, the &#x201c;SMS&#x201d; field <b>829</b> is configured to invoke an &#x201c;SMS&#x201d; operation <b>831</b>. This request could be routed to an SMS Agent running on the user's mobile phone which would launch the SMS editor with the destination phone number filled in. The &#x201c;MMS&#x201d; field <b>828</b> is configured similarly to the &#x201c;SMS&#x201d; field.</p>
<p id="h-0096" num="0000">8.1.5 Email Address</p>
<p id="p-0451" num="0645">Referring to <figref idref="DRAWINGS">FIG. 77</figref>, the web email address field <b>833</b> and &#x201c;Email&#x201d; icon <b>832</b> are configured similarly to the phone number field and phone icons. The icon <b>832</b> is specifically configured to perform a &#x201c;create-email&#x201d; operation <b>834</b>, which can typically be handled routing the request to an agent which is capable of launching email tool with the destination email address pre-configured. The email address field <b>833</b> is less fully specified and is therefore more flexible in terms of its possible interpretations.</p>
<p id="h-0097" num="0000">8.1.6 Street Address</p>
<p id="p-0452" num="0646">Referring to <figref idref="DRAWINGS">FIG. 78</figref>, the Street Address field <b>836</b> is configured to map to a PlayRequest <b>837</b> that contains a location value <b>841</b> specified using a type of location. The specific details of this type are not specified in this document. The important thing to note is that it stores information that specifies the location in various ways. As such, the value can be handled differently by a large number of agents. Examples might be:
<ul id="ul0136" list-style="none">
    <li id="ul0136-0001" num="0000">
    <ul id="ul0137" list-style="none">
        <li id="ul0137-0001" num="0647">A Web MAP Search Agent which presents the location in a web browser by accessing a web-based map search facility</li>
        <li id="ul0137-0002" num="0648">A Print Agent on an m-print phone which prints the location details (and possibly directions) on an m-print card.</li>
        <li id="ul0137-0003" num="0649">A GPS Navigator Agent which displays the location in a handheld GPS device.
<br/>
8.1.7 Photo
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0453" num="0650">Referring to <figref idref="DRAWINGS">FIG. 79</figref>, the Name field <b>838</b> and &#x201c;Photo&#x201d; icon <b>839</b> are configured to map to a PlayRequest <b>840</b> that specifies a jpeg photograph. Typically, this request can be routed to an agent capable of displaying the image.</p>
<p id="h-0098" num="0000">8.2 Scanning Support</p>
<p id="p-0454" num="0651">Referring to <figref idref="DRAWINGS">FIG. 80</figref>, interactive Netpage documents can be authored to specify an action upon reception of a scan event. A scan event simply contains the ID of the printed document without any {x,y} coordinate information. In the m-print context, a scan is achieved by feeding a printed card back through the paper feed mechanism. This enables the m-print device to determine the ID of the card and to transmit a scan-hit to the Netpage Server <b>529</b>. Upon reception of a scan-hit, the server <b>529</b> invokes any scan action that has been registered for the identified printout.</p>
<p id="p-0455" num="0652">The printed business card <b>820</b> can be authored to invoke a PlayRequest <b>851</b> in response to a scan event. Typically, such a PlayRequest <b>851</b> provides information pertaining to the entire content of the printout. In the case of the business card, the document can be authored to invoke a PlayRequest <b>851</b> that contains a text/directory object <b>852</b> that specifies most of the details from the card. Such a PlayRequest <b>851</b> would typically be routed to a Contacts Application (such as vCard Agent) which would then modify its database to include the details from the business card.</p>
<p id="h-0099" num="0000">8.2.1 M-Print Photo Cards Including Scan Support</p>
<p id="p-0456" num="0653"><figref idref="DRAWINGS">FIG. 81</figref> shows a printed photo card <b>855</b>. The card <b>855</b> can be made to be interactive as shown in <figref idref="DRAWINGS">FIG. 82</figref>. The card <b>855</b> contains two fields. The first field is a standard Netpage field <b>856</b>, while the second is the scan event field <b>857</b>. Both fields <b>856</b>, <b>857</b> are configured to map to a PlayRequest <b>858</b> that contains the contents of the photo in electronic form (in this case as a jpeg image). Typically, this request <b>858</b> is routed to an agent capable of displaying the image, although the fact that the request is only partially specified (the target and operation field are empty) gives the request router (and therefore the user) more freedom to interpret the request as appropriate. For example, previous actions by the user may mean that clicking on the photo is interpreted as a request to associate the photo with a particular location on printed Netpage document.</p>
<p id="h-0100" num="0000">8.3 Printout Interactivity on the Mobile Device GUI</p>
<p id="p-0457" num="0654">When a scan of an M-Print printout is performed on a mobile device <b>100</b> the action taken can vary. One possible action is to display the printout on the mobile device's GUI with the hyperlinks and form fields active so that a user can navigate between them and fill them in or activate them, in the same way a Netpage user can on a printout using a Netpage pen or pointer.</p>
<p id="p-0458" num="0655">If the mobile device has a touch screen and a stylus then it is possible to support all the interactions that a user with a Netpage pen could have with the printout. If the mobile device doesn't support a touch screen and stylus then it is possible to tab through the hyperlinks and submit fields on the form and activate them in the same way that a user with Netpage pointer and a printout could.</p>
<p id="p-0459" num="0656"><figref idref="DRAWINGS">FIG. 83</figref> shows a mobile phone <b>100</b> where an M-Print printout of a business card <b>820</b> has been scanned and the printout is now displayed on the phone's screen <b>860</b> with the first hyperlink <b>861</b> highlighted ready to be selected. The user can move through the active areas using standard navigation keys <b>862</b> on the mobile device <b>100</b>, in the same way they can navigate the hyperlinks on a web page. Selecting a hyperlink in this way via the GUI is the same as clicking a Netpage Pointer <b>533</b> on the printout of the business card <b>820</b>.</p>
<p id="p-0460" num="0657">Below is a use case illustrating the sequence of events for a user to activate a hyperlink by scanning the printout.</p>
<p id="h-0101" num="0000">8.3.1 Scan a Business Card and Send an MMS to the Person</p>
<p id="p-0461" num="0000">
<ul id="ul0138" list-style="none">
    <li id="ul0138-0001" num="0000">
    <ul id="ul0139" list-style="none">
        <li id="ul0139-0001" num="0658">1. The user inserts a printout into the paper feed slot on the mobile device (<b>870</b>)</li>
        <li id="ul0139-0002" num="0659">2. The printout is drawn through the mobile device</li>
        <li id="ul0139-0003" num="0660">3. The image on the printout is displayed on the mobile device (<b>880</b>), the first hyperlink has a focus region drawn around it</li>
        <li id="ul0139-0004" num="0661">4. The user moves focus to the MMS hyperlink and selects it</li>
        <li id="ul0139-0005" num="0662">5. The MMS editor on the device is displayed with the address filled out from the details on the business card (<b>890</b>).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0462" num="0663">The upper portion of the sequence diagram in <figref idref="DRAWINGS">FIG. 84</figref> is a repeat of the sequence for the case where a scan is occurring. When the Netpage Microserver receives the &#x201c;scan click&#x201d; it retrieves the document and displays it on the screen using the Document Displayer. The Document Displayer allows the user to step through the hyperlinks and fields and select them. When one is selected the Netpage Microserver is sent a click event, just as if it had come from a Netpage pointer. The Netpage processing results in a play request being sent to the Netpage Player on the device, which responds by opening up the MMS editor with the message already addressed to the recipient identified by the business card that was scanned in.</p>
<p id="h-0102" num="0000">9.0 Mobile Telecommunications Device Overview</p>
<p id="p-0463" num="0664">Whilst the main embodiment includes both Netpage and printing functionality, only one or the other of these features is provided in other embodiments.</p>
<p id="p-0464" num="0665">One such embodiment is shown in <figref idref="DRAWINGS">FIG. 85</figref>, in which a mobile telecommunications device in the form of a mobile phone <b>1</b> (also known as a &#x201c;cellphone&#x201d;) includes a mobile phone module <b>2</b> and a printer module <b>4</b>. The mobile <b>30</b> phone module is configured to send and receive voice and data via a telecommunications network (not shown) in a conventional manner known to those skilled in the art. The printer module <b>4</b> is configured to print a page <b>6</b>. Depending upon the particular implementation, the printer module <b>4</b> can be configured to print the page <b>6</b> in color or monochrome.</p>
<p id="p-0465" num="0666">The mobile telecommunications device can use any of a variety of known operating systems, such as Symbian (with UIQ and Series 60 GUIs), Windows Mobile, PalmOS, and Linux.</p>
<p id="p-0466" num="0667">In the preferred embodiment (described in more detail below), the print media is pre-printed with tags, and the printer module <b>4</b> prints visible information onto the page <b>6</b> in registration with the tags. In other embodiments, Netpage tags are printed by the printer module onto the page <b>6</b> along with the other information. The tags can be printed using either the same visible ink as used to print visible information, or using an infrared or other substantially invisible ink.</p>
<p id="p-0467" num="0668">The information printed by the printer module <b>4</b> can include user data stored in the mobile phone <b>1</b> (including <b>10</b> phonebook and appointment data) or text and images received via the telecommunications network or from another device via a communication mechanism such as Bluetooth&#x2122; or infrared transmission. If the mobile phone <b>1</b> includes a camera, the printer module <b>4</b> can be configured to print the captured images. In the preferred form, the mobile phone module <b>2</b> provides at least basic editing capabilities to enable cropping, filtering or addition of text or other image data to the captured image before printing. The configuration and operation of the printer module <b>4</b> is described in more detail below in the context of various types of mobile telecommunication device that incorporate a printhead.</p>
<p id="p-0468" num="0669"><figref idref="DRAWINGS">FIG. 86</figref> shows another embodiment of a mobile telecommunications device, in which the printer module <b>4</b> is omitted, and a Netpage tag sensor module <b>8</b> is included. The Netpage module <b>8</b> enables interaction between the mobile phone <b>1</b> and a page <b>10</b> including Netpage tags. The configuration and operation of the Netpage pointer in a mobile phone <b>1</b> is described in more detail below. Although not shown, the mobile phone <b>1</b> with Netpage module <b>8</b> can include a camera.</p>
<p id="p-0469" num="0670"><figref idref="DRAWINGS">FIG. 87</figref> shows a mobile phone <b>1</b> that includes both a printer module <b>4</b> and a Netpage tag sensor module <b>8</b>. As with the embodiment of <figref idref="DRAWINGS">FIG. 86</figref>, the printer module <b>4</b> can be configured to print tagged or untagged pages. As shown in <figref idref="DRAWINGS">FIG. 87</figref>, where tagged pages <b>10</b> are produced (and irrespective of whether the tags were pre-printed or printed by the printer module <b>4</b>), the Netpage tag sensor module <b>8</b> can be used to interact with the resultant printed media.</p>
<p id="p-0470" num="0671">A more detailed architectural view of the mobile phone <b>1</b> of <figref idref="DRAWINGS">FIG. 87</figref> is shown in <figref idref="DRAWINGS">FIG. 88</figref>, in which features corresponding to those shown in <figref idref="DRAWINGS">FIG. 87</figref> are indicated with the same reference numerals. It will be appreciated that <figref idref="DRAWINGS">FIG. 88</figref> deals only with communication between various electronic components in the mobile telecommunications device and omits mechanical features. These are described in more detail below.</p>
<p id="p-0471" num="0672">The Netpage tag sensor module <b>8</b> includes a monolithically integrated Netpage image sensor and processor <b>12</b> that captures image data and receives a signal from a contact switch <b>14</b>. The contact switch <b>14</b> is connected to a nib (not shown) to determine when the nib is pressed into contact with a surface. The sensor and processor <b>12</b> also outputs a signal to control illumination of an infrared LED <b>16</b> in response to the stylus being pressed against the surface. The image sensor and processor <b>12</b> outputs processed tag information to a Netpage pointer driver <b>18</b> that interfaces with the phone operating system <b>20</b> running on the mobile telecommunications device's processor (not shown).</p>
<p id="p-0472" num="0673">Output to be printed is sent by the phone operating system <b>20</b> to a printer driver <b>22</b>, which passes it on to a MoPEC chip <b>24</b>. The MoPEC chip processes the output to generate dot data for supply to the printhead <b>26</b>, as described in more detail below. The MoPEC chip <b>24</b> also receives a signal from a media sensor <b>28</b> indicating when the media is in position to be printed, and outputs a control signal to a media transport <b>30</b>.</p>
<p id="p-0473" num="0674">The printhead <b>26</b> is disposed within a replaceable cartridge <b>32</b>, which also includes ink <b>34</b> for supply to the printhead.</p>
<p id="h-0103" num="0000">9.1 Mobile Telecommunications Device Module</p>
<p id="p-0474" num="0675"><figref idref="DRAWINGS">FIG. 89</figref> shows the mobile phone module <b>2</b> in more detail. The majority of the components other than those directly related to printing and Netpage tag sensing are standard and well known to those in the art. Depending upon the specific implementation of the mobile phone <b>1</b>, any number of the illustrated components can be included as part of one or more integrated circuits.</p>
<p id="p-0475" num="0676">Operation of, and communication between, the mobile phone module <b>2</b> components is controlled by a mobile phone controller <b>36</b>. The components include:
<ul id="ul0140" list-style="none">
    <li id="ul0140-0001" num="0000">
    <ul id="ul0141" list-style="none">
        <li id="ul0141-0001" num="0677">mobile radio transceiver <b>38</b> for wireless communication with a mobile telecommunications network;</li>
        <li id="ul0141-0002" num="0678">program memory <b>40</b> for storing program code for execution on the mobile phone controller <b>36</b>;</li>
        <li id="ul0141-0003" num="0679">working memory <b>42</b> for storing data used and generated by the program code during execution. Although shown as separate from the mobile phone controller <b>36</b>, either or both memories <b>40</b> and <b>42</b> may be incorporated in the package or silicon of the controller;</li>
        <li id="ul0141-0004" num="0680">keypad <b>44</b> and buttons <b>46</b> for accepting numerical and other user input;</li>
        <li id="ul0141-0005" num="0681">touch sensor <b>48</b> which overlays display <b>50</b> for accepting user input via a stylus or fingertip pressure;</li>
        <li id="ul0141-0006" num="0682">removable memory card <b>52</b> containing non-volatile memory <b>54</b> for storing arbitrary user data, such as digital photographs or files;</li>
        <li id="ul0141-0007" num="0683">local area radio transceiver <b>56</b>, such as a Bluetoothrm transceiver;</li>
        <li id="ul0141-0008" num="0684">GPS receiver <b>58</b> for enabling determination of the location of the mobile telecommunications device (alternatively the phone may rely on mobile network mechanisms for determining its location);</li>
        <li id="ul0141-0009" num="0685">microphone <b>60</b> for capturing a user's speech;</li>
        <li id="ul0141-0010" num="0686">speaker <b>62</b> for outputting sounds, including voice during a phone call;</li>
        <li id="ul0141-0011" num="0687">camera image sensor <b>64</b> including a CCD for capturing images;</li>
        <li id="ul0141-0012" num="0688">camera flash <b>66</b>;</li>
        <li id="ul0141-0013" num="0689">power manager <b>68</b> for monitoring and controlling power consumption of the mobile telecommunications device and its components; and</li>
        <li id="ul0141-0014" num="0690">SIM (subscriber Identity Module) card <b>70</b> including SIM <b>72</b> for identifying the subscriber to mobile networks.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0476" num="0691">The mobile phone controller <b>36</b> implements the baseband functions of mobile voice and data communications protocols such as GSM, GSM modem for data, GPRS and CDMA, as well as higher-level messaging protocols such as SMS and MMS. The one or more local-area radio transceivers <b>56</b> enable wireless communication with peripherals such as headsets and Netpage pens, and hosts such as personal computers. The mobile phone controller <b>36</b> also implements the baseband functions of local-area voice and data communications protocols such as IEEE 802.11, IEEE 802.15, and Bluetooth&#x2122;.</p>
<p id="p-0477" num="0692">The mobile phone module <b>2</b> may also include sensors and/or motors (not shown) for electronically adjusting zoom, focus, aperture and exposure in relation to the digital camera.</p>
<p id="p-0478" num="0693">Similarly, as shown in <figref idref="DRAWINGS">FIG. 90</figref>, components of the printer module <b>4</b> include:
<ul id="ul0142" list-style="none">
    <li id="ul0142-0001" num="0000">
    <ul id="ul0143" list-style="none">
        <li id="ul0143-0001" num="0694">print engine controller (PEC) <b>74</b> in the form of a MoPEC device;</li>
        <li id="ul0143-0002" num="0695">program memory <b>76</b> for storing program code for execution by the print engine controller <b>74</b>;</li>
        <li id="ul0143-0003" num="0696">working memory <b>78</b> for storing data used and generated by the program code during execution by the print engine controller <b>74</b>; and</li>
        <li id="ul0143-0004" num="0697">a master QA chip <b>80</b> for authenticating printhead cartridge <b>32</b> via its QA chip <b>82</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0479" num="0698">Whilst the printhead cartridge in the preferred form includes the ink supply <b>34</b>, the ink reservoirs can be housed in a separate cartridge in alternative embodiments.</p>
<p id="p-0480" num="0699"><figref idref="DRAWINGS">FIG. 91</figref> shows the components of the tag sensor module <b>8</b>, which includes a CMOS tag image processor <b>74</b> that communicates with image memory <b>76</b>. A CMOS tag image sensor <b>78</b> sends captured image data to the processor <b>74</b> for processing. The contact sensor <b>14</b> indicates when a nib (not shown) is brought into contact with a surface with sufficient force to close a switch within the contact sensor <b>14</b>. Once the switch is closed, the infrared LED <b>16</b> illuminates the surface, and the image sensor <b>78</b> captures at least one image and sends it to the image processor <b>74</b> for processing. Once processed (as described below in more detail), image data is sent to the mobile phone controller <b>36</b> for decoding.</p>
<p id="p-0481" num="0700">In an alternative embodiment, shown in <figref idref="DRAWINGS">FIG. 92</figref>, the tag sensor module <b>8</b> is replaced by a tag decoder module <b>81</b>. The tag decoder module <b>81</b> includes all the elements of the tag sensor module <b>8</b>, but adds a hardware-based tag decoder <b>82</b>, as well as program memory <b>84</b> and working memory <b>86</b> for the tag decoder. This arrangement reduces the computational load placed on the mobile phone controller, with a corresponding increase in chip area compared to using the tag sensor module <b>8</b>.</p>
<p id="p-0482" num="0701">The Netpage sensor module can be incorporated in the form of a Netpage pointer, which is a simplified Netpage pen suitable mostly for activating hyperlinks. It preferably incorporates a non-marking stylus in place of the pen's marking nib (described in detail later in the specification); it uses a surface contact sensor in place of the pen's continuous force sensor; and it preferably operates at a lower position sampling rate, making it unsuitable for capturing drawings and hand-writing. A Netpage pointer is less expensive to implement than a Netpage pen, and tag image processing and tag decoding can potentially be performed by software without hardware support, depending on sampling rate.</p>
<p id="p-0483" num="0702">The various aspects of the invention can be embodied in any of a number of mobile telecommunications device types. Several different devices are described here, but in the interests of brevity, the detailed description will concentrate on the mobile telecommunications device embodiment.</p>
<p id="h-0104" num="0000">9.2 Mobile Device</p>
<p id="p-0484" num="0703">One preferred embodiment is the non-Netpage enabled &#x2018;candy bar&#x2019; mobile telecommunications device in the form of a mobile phone shown in <figref idref="DRAWINGS">FIGS. 92 to 98</figref>. While a candy bar style phone is described here, it could equally take the form of a &#x201c;flip&#x201d; style phone, which includes a pair of body sections that are hinged to each other. Typically, the display is disposed on one of the body sections, and the keypad is disposed on the other, such that the display and keypad are positioned adjacent to each other when the device is in the closed position.</p>
<p id="p-0485" num="0704">In further embodiments, the device can have two body sections that rotate or slide relative to each other. Typically, the aim of these mechanical relationships between first and second body sections is to protect the display from scratches and/or the keypad from accidental activation. Photo printing is considered one of the most compelling uses of the mobile Memjet printer. A preferred embodiment of the invention therefore includes a camera, with its attendant processing power and memory capacity.</p>
<p id="p-0486" num="0705">The elements of the mobile telecommunications device are best shown in <figref idref="DRAWINGS">FIG. 93</figref>, which (for clarity) omits minor details such as wires and hardware that operatively connect the various elements of the mobile telecommunications device together. The wires and other hardware will be well known to those skilled in the art. The mobile phone <b>100</b> comprises a chassis moulding <b>102</b>, a front moulding <b>104</b> and a rear cover moulding <b>106</b>. A rechargeable battery <b>108</b>, such as a lithium ion or nickel metal hydride battery, is mounted to the chassis moulding <b>102</b> and covered by the rear cover moulding <b>106</b>. The battery <b>108</b> powers the various components of the mobile phone <b>100</b> via battery connector <b>276</b> and the camera and speaker connector <b>278</b>.</p>
<p id="p-0487" num="0706">The front moulding <b>104</b> mounts to the emphasis to enclose the various components, and includes numerical interface buttons <b>136</b> positioned in vertical rows on each side of the display <b>138</b>. A multi-directional control pad <b>142</b> and other control buttons <b>284</b> enable menu navigation and other control inputs. A daughterboard <b>280</b> is mounted to the chassis moulding <b>102</b> and includes a directional switch <b>286</b> for the multi directional control pad <b>142</b>. The mobile telecommunications device includes a cartridge access cover <b>132</b> that protects the interior of the mobile telecommunications device from dust and other foreign objects when a print cartridge <b>148</b> is not inserted in the cradle <b>124</b>.</p>
<p id="p-0488" num="0707">An optional camera module <b>110</b> is also mounted to the chassis moulding <b>102</b>, to enable image capture through a hole <b>112</b> in the rear cover moulding <b>106</b>. The camera module <b>110</b> includes a lens assembly and a CCD image sensor for capturing images. A lens cover <b>268</b> in the hole <b>112</b> protects the lens of the camera module <b>110</b>. The rear cover moulding <b>106</b> also includes an inlet slot <b>228</b> and an outlet slot <b>150</b> through which print media passes.</p>
<p id="p-0489" num="0708">The chassis moulding <b>102</b> supports a data/recharge connector <b>114</b>, which enables a proprietary data cable to be plugged into the mobile telecommunications device for uploading and downloading data such as address book information, photographs, messages, and any type of information that might be sent or received by the mobile telecommunications device. The data/recharge connector <b>114</b> is configured to engage a corresponding interface in a desktop stand (not shown), which holds the mobile telecommunications device in a generally upright position whilst data is being sent or received by the mobile telecommunications device. The data/recharge connector also includes contacts that enable recharging of the battery <b>108</b> via the desktop stand. A separate recharge socket <b>116</b> in the data/recharge connector <b>114</b> is configured to receive a complimentary recharge plug for enabling recharging of the battery when the desktop stand is not in use.</p>
<p id="p-0490" num="0709">A microphone <b>170</b> is mounted to the chassis moulding <b>102</b> for converting sound, such as a user's voice, into an electronic signal to be sampled by the mobile telecommunications device's analog to digital conversion circuitry. This conversion is well known to those skilled in the art and so is not described in more detail here. A SIM (Subscriber Identity Module) holder <b>118</b> is formed in the chassis moulding <b>102</b>, to receive a SIM card <b>120</b>. The chassis moulding is also configured to support a print cartridge cradle <b>124</b> and a drive mechanism <b>126</b>, which receive a replaceable print cartridge <b>148</b>. These features are described in more detail below. Another moulding in the chassis moulding <b>102</b> supports an aerial (not shown) for sending and receiving RF signals to and from a mobile telecommunications network.</p>
<p id="p-0491" num="0710">A main printed circuit board (PCB) <b>130</b> is supported by the chassis moulding <b>102</b>, and includes a number of momentary pushbuttons <b>132</b>. The various integrated and discrete components that support the communications and processing (including printing processing) functions are mounted to the main PCB, but for clarity are not shown in the diagram.</p>
<p id="p-0492" num="0711">A conductive elastomeric overlay <b>134</b> is positioned on the main PCB <b>130</b> beneath the keys <b>136</b> on the front <b>40</b> moulding <b>104</b>. The elastomer incorporates a carbon impregnated pill on a flexible profile. When one of the keys <b>136</b> is pressed, it pushes the carbon pill to a 2-wire open circuit pattern <b>132</b> on the PCB surface. This provides a low impedance closed circuit. Alternatively, a small dome is formed on the overlay corresponding to each key <b>132</b>.</p>
<p id="p-0493" num="0712">Polyester film is screen printed with carbon paint and used in a similar manner to the carbon pills. Thin adhesive film with berrylium copper domes can also be used. A loudspeaker <b>144</b> is installed adjacent apertures <b>272</b> in the front moulding <b>104</b> to enable a user to hear sound such as voice communication and other audible signals.</p>
<p id="p-0494" num="0713">A color display <b>138</b> is also mounted to the main PCB <b>130</b>, to enable visual feedback to a user of the mobile telecommunications device. A transparent lens moulding <b>146</b> protects the display <b>138</b>. In one form, the transparent lens is touch-sensitive (or is omitted and the display <b>138</b> is touch sensitive), enabling a user to interact with icons and input text displayed on the display <b>138</b>, with a finger or stylus.</p>
<p id="p-0495" num="0714">A vibration assembly <b>274</b> is also mounted to the chassis moulding <b>102</b>, and includes a motor that drives an eccentrically mounted weight to cause vibration. The vibration is transmitted to the chassis <b>102</b> and provides tactile feedback to a user, which is useful in noisy environments where ringtones are not audible.</p>
<p id="h-0105" num="0000">10. Print Media Printing</p>
<p id="p-0496" num="0715">A Netpage printer normally prints the tags which make up the surface coding on demand, i.e. at the same time as it prints graphic page content. As an alternative, in a Netpage printer not capable of printing tags such as the preferred embodiment, pre-tagged but otherwise blank Netpages can be used. The printer, instead of being capable of tag printing, typically incorporates a Netpage tag sensor. The printer senses the tags and hence the region ID of a blank either prior to, during, or after the printing of the graphic page content onto the blank. It communicates the region ID to the Netpage server, and the server associates the page content and the region ID in the usual way.</p>
<p id="p-0497" num="0716">A particular Netpage surface coding scheme allocates a minimum number of bits to the representation of spatial coordinates within a surface region. If a particular media size is significantly smaller than the maximum size representable in the minimum number of bits, then the Netpage code space may be inefficiently utilised. It can therefore be of interest to allocate different sub-areas of a region to a collection of blanks. Although this makes the associations maintained by the Netpage server more complex, and makes subsequent routing of interactions more complex, it leads to more efficient code space utilisation. In the limit case the surface coding may utilise a single region with a single coordinate space, i.e. without explicit region IDs.</p>
<p id="p-0498" num="0717">If regions are sub-divided in this way, then the Netpage printer uses the tag sensor to determine not only the region ID but also the surface coding location of a known physical position on the print medium, i.e. relative to two edges of the medium. From the surface coding location and its corresponding physical position on the medium, and the known (or determined) size of the medium, it then determines the spatial extent of the medium in the region's coordinate space, and communicates both the region ID and the spatial extent to the server. The server associates the page content with the specified sub-area of the region.</p>
<p id="p-0499" num="0718">A number of mechanisms can be used to read tag data from a blank. A conventional Netpage tag sensor incorporating a two-dimensional image sensor can be used to capture an image of the tagged surface of the blank at any convenient point in the printer's paper path. As an alternative, a linear image sensor can be used to capture successive line images of the tagged surface of the blank during transport. The line images can be used to create a two-dimensional image which is processed in the usual way. As a further alternative, region ID data and other salient data can be encoded linearly on the blank, and a simple photodetector and ADC can be used to acquire samples of the linear encoding during transport.</p>
<p id="p-0500" num="0719">One important advantage of using a two-dimensional image sensor is that tag sensing can occur before motorised transport of the print medium commences. For example, if the print medium is manually inserted by the user, then tag sensing can occur during insertion. This has the further advantage that if the tag data is validated by the device, then the print medium can be rejected and possibly ejected before printing commences. For example, the print medium may have been pre-printed with advertising or other graphic content on the reverse side from the intended printing side. The device can use the tag data to detect incorrect media insertion, i.e. upside-down or back-to-front. The device can also prevent accidental overprinting of an already-printed medium. And it can detect the attempted use of an invalid print medium and refuse printing, e.g. to protect print quality. The device can also derive print medium characteristics from the tag data, to allow it to perform optimal print preparation.</p>
<p id="p-0501" num="0720">If a linear image sensor is used, or if a photodetector is used, then image sensing must occur during motorised transport of the print medium to ensure accurate imaging. Unless there are at least two points of contact between the transport mechanism and the print medium in the printing path, separated by a minimum distance equal to the tag data acquisition distance, tag data cannot be extracted before printing commences, and the validation advantages discussed above do not obtain. In the case of a linear image sensor, the tag data acquisition distance equals the diameter of the normal tag imaging field of view. In the case of a photodetector, the tag data acquisition distance is as long as the required linear encoding.</p>
<p id="p-0502" num="0721">If the tag sensor is operable during the entire printing phase at a sufficiently high sampling rate, then it can also be used to perform accurate motion sensing, with the motion data being used to provide a line synchronisation signal to the print engine. This can be used to eliminate the effects of jitter in the transport mechanism.</p>
<p id="p-0503" num="0722"><figref idref="DRAWINGS">FIGS. 100 to 106</figref> show one embodiment of the encoded medium and the media sensing and printing system within the mobile telecommunications device. While the encoding of the cards is briefly discussed here, it is described in detail in the Coded Media sub-section of this specification.</p>
<p id="p-0504" num="0723">Referring to <figref idref="DRAWINGS">FIG. 100</figref>, the &#x2018;back-side&#x2019; of one of the cards <b>226</b> is shown. The back-side of the card has two coded data tracks: a &#x2018;clock track&#x2019; <b>434</b> and a &#x2018;data track&#x2019; <b>436</b> running along the longitudinal sides of the cards. The coded data may be in the form of a two-dimensional grid or pattern. The cards are encoded with data indicating, inter alia:
<ul id="ul0144" list-style="none">
    <li id="ul0144-0001" num="0000">
    <ul id="ul0145" list-style="none">
        <li id="ul0145-0001" num="0724">the orientation of the card;</li>
        <li id="ul0145-0002" num="0725">the media type and authenticity;</li>
        <li id="ul0145-0003" num="0726">the longitudinal size;</li>
        <li id="ul0145-0004" num="0727">the pre-printed side;</li>
        <li id="ul0145-0005" num="0728">detection of prior printing on the card; and,</li>
        <li id="ul0145-0006" num="0729">the position of the card relative to the printhead IC.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0505" num="0730">In one form, the encoded data is printed in IR ink so that it is invisible and does not encroach on the space available for printing visible images.</p>
<p id="p-0506" num="0731">In a basic form, the M-Print cards <b>226</b> are only encoded with a data track and clocking (as a separate clock track or a self-clocking data track). However, in the more sophisticated embodiment shown in the figures, the cards <b>226</b> have a pre-printed Netpage tag pattern <b>438</b> covering the majority of the back-side. The front side may also have a pre-printed tag pattern. It is preferred in these embodiments that the data track encodes first information that is at least indicative of second information encoded in the tags. Most preferably, the first information is simply the document identity that is encoded in each of the tags.</p>
<p id="p-0507" num="0732">The clock track <b>434</b> allows the MoPEC <b>326</b> (see <figref idref="DRAWINGS">FIG. 101</figref>) to determine, by its presence, that the front of the card <b>226</b> is facing the printhead <b>202</b>, and allows the printer to sense the motion of the card <b>226</b> during printing. The clock track <b>434</b> also provides a clock for the densely coded data track <b>436</b>.</p>
<p id="p-0508" num="0733">The data track <b>436</b> provides the Netpage identifier and optionally associated digital signatures which allows MoPEC <b>326</b> to reject fraudulent or un-authorised media <b>226</b>, and to report the Netpage identifier of the front-side Netpage tag pattern to a Netpage server. It should be noted that a fragment of a digital signature can also be considered a digital signature in its own right.</p>
<p id="p-0509" num="0734"><figref idref="DRAWINGS">FIG. 101</figref> shows a block diagram of an M-Print system that uses media encoded with separate clock and data tracks. The clock and data tracks are read by separate optical encoders. The system may optionally have an explicit edge detector <b>474</b> which is discussed in more detail below in relation to <figref idref="DRAWINGS">FIG. 104</figref>.</p>
<p id="p-0510" num="0735"><figref idref="DRAWINGS">FIG. 102</figref> shows a simplified circuit for an optical encoder which may be used as the clock track or data track optical encoder. It incorporates a Schmitt trigger <b>466</b> to provide the MoPEC <b>326</b> with an essentially binary signal representative of the marks and spaces encountered by the encoder in the clock or data track. An IR LED <b>472</b> is configured to illuminate a mark-sized area of the card <b>226</b> and a phototransistor <b>468</b> is configured to capture the light <b>470</b> reflected by the card. The LED <b>472</b> has a peak wavelength matched to the peak absorption wavelength of the infrared ink used to print the media coding.</p>
<p id="p-0511" num="0736">As an alternative, the optical encoders can sense the direction of media movement by configuring them to be &#x2018;quadrature encoders&#x2019;. A quadrature encoder contains a pair of optical encoders spatially positioned to read the clock track 90 degrees out of phase. Its in-phase and quadrature outputs allow the MoPEC <b>326</b> to identify not just the motion of the clock track <b>434</b> but also the direction of the motion. A quadrature encoder is generally not required, since the media transport direction is known a priori because the printer controller also controls the transport motor. However, the use of a quadrature encoder can help decouple a bi-directional motion sensing mechanism from the motion control mechanism.</p>
<p id="p-0512" num="0737"><figref idref="DRAWINGS">FIG. 103</figref> shows a block diagram of the MoPEC <b>326</b>. It incorporates a digital phase lock loop (DPLL) <b>444</b> to track the clock inherent in the clock track <b>434</b> (see <figref idref="DRAWINGS">FIG. 100</figref>), a line sync generator <b>448</b> to generate the line sync signal <b>476</b> from the clock <b>446</b>, and a data decoder <b>450</b> to decode the data in the data track <b>436</b>. De-framing, error detection and error correction may be performed by software running on MoPEC's general-purpose processor <b>452</b>, or it may be performed by dedicated hardware in MoPEC.</p>
<p id="p-0513" num="0738">The data decoder <b>450</b> uses the clock <b>446</b> recovered by the DPLL <b>444</b> to sample the signal from the data track optical encoder <b>442</b>. It may either sample the continuous signal from the data track optical encoder <b>442</b>, or it may actually 5 trigger the LED of the data track optical encoder <b>442</b> for the duration of the sample period, thereby reducing the total power consumption of the LED. The DPLL <b>444</b> may be a PLL, or it may simply measure and filter the period between successive clock pulses.</p>
<p id="p-0514" num="0739">The line sync generator <b>456</b> consists of a numerically-controlled oscillator which generates line sync pulses <b>476</b> at a rate which is a multiple of the rate of the clock <b>446</b> recovered from the clock track <b>434</b>.</p>
<p id="p-0515" num="0740">As shown in <figref idref="DRAWINGS">FIG. 101</figref>, the print engine may optionally incorporate an explicit edge detector <b>474</b> to provide longitudinal registration of the card <b>226</b> with the operation of the printhead <b>202</b>. In this case, as shown in <figref idref="DRAWINGS">FIG. 104</figref>, it generates a page sync signal <b>478</b> to signal the start of printing after counting a fixed number of line syncs <b>476</b> after edge detection. Longitudinal registration may also be achieved by other card-in detection mechanisms ranging from opto-sensors, de-capping mechanical switches, drive shaft/tension spring contact switch and motor load detection.</p>
<p id="p-0516" num="0741">Optionally, the printer can rely on the media coding itself to obtain longitudinal registration. For example, it may rely on acquisition of a pilot sequence on the data track <b>436</b> to obtain registration. In this case, as shown in <figref idref="DRAWINGS">FIG. 105</figref>, it generates a page sync signal <b>478</b> to signal the start of printing after counting a fixed number of line syncs <b>476</b> after pilot detection. The pilot detector <b>460</b> consists of a shift register and combinatorial logic to recognise the pilot sequence <b>480</b> provided by the data decoder <b>450</b>, and generate the pilot sync signal <b>482</b>. Relying on the media coding itself can provide superior information for registering printed content with the Netpage tag pattern <b>438</b> (<figref idref="DRAWINGS">FIG. 100</figref>).</p>
<p id="p-0517" num="0742">As shown in <figref idref="DRAWINGS">FIG. 106</figref>, the data track optical encoder <b>442</b> is positioned adjacent to the first clock data encoder <b>440</b>, so that the data track <b>436</b> (see <figref idref="DRAWINGS">FIG. 100</figref>) can be decoded as early as possible and using the recovered clock signal <b>446</b>. The clock must be acquired before printing can commence, so a first optical encoder <b>440</b> is positioned before the printhead <b>202</b> in the media feed path. However, as the clock needs to be tracked throughout the print, a second clock optical encoder <b>464</b> is positioned coincident with or downstream of the printhead <b>202</b>. This is described in more detail below.</p>
<p id="p-0518" num="0743"><figref idref="DRAWINGS">FIG. 99</figref> shows the printed card <b>226</b> being withdrawn from the print cartridge, <b>148</b>. It will be appreciated that the printed card <b>226</b> needs to be manually withdrawn by the user. Once the trailing edge of the card <b>226</b> has passed between the drive shaft <b>178</b> and the spring fingers <b>238</b>, it is no longer driven along the media feed path. However, as the printhead <b>202</b> is less than 2 mm from the drive shaft <b>178</b>, the momentum of the card <b>226</b> projects the trailing edge of past the printhead <b>202</b>.</p>
<p id="p-0519" num="0744">While the momentum of the card is sufficient to carry the trailing edge past the printhead, it is not enough to fling it out of the exit slot <b>150</b> (<figref idref="DRAWINGS">FIG. 98</figref>). Instead, the card <b>226</b> is lightly gripped by the opposed lock actuator arms <b>232</b> as it protrudes from the exit slot <b>150</b> in the side of the mobile phone <b>100</b>. This retains the card <b>226</b> so it does not simply fall from exit slot <b>150</b>, but rather allows users to manually remove the printed card <b>226</b> from the mobile phone <b>100</b> at their convenience. This is important to the practicality of the mobile telecommunications device because the card <b>226</b> is fed into one side of the mobile telecommunications device and retrieved from the other, so users will typically want to swap the hand that holds the mobile telecommunications device when collecting the printed card. By lightly retaining the printed card, users do not need to swap hands and be ready to collect the card before completion of the print job (approximately 1-2 secs). Alternatively, the velocity of the card as it leaves the roller can be made high enough that the card exits the outlet slot <b>123</b> under its own inertia.</p>
<p id="h-0106" num="0000">10.1 M-Print Flip Printing</p>
<p id="p-0520" num="0745">One can allow a previously printed m-print Netpage card to be re-inserted into the printing mechanism &#x201c;flipped-over&#x201d;, so that the side not previously printed on (i.e. the back of the card) is now facing towards the print head. The printer would detect such an insertion and would automatically print additional information on to the back of the card. The additional information would typically, but not necessarily, be application and context specific. That is:
<ul id="ul0146" list-style="none">
    <li id="ul0146-0001" num="0000">
    <ul id="ul0147" list-style="none">
        <li id="ul0147-0001" num="0746">the application which created the original printout would determine what is printed onto the back side of the card, and</li>
        <li id="ul0147-0002" num="0747">would be able to take into account context specific information such as the impression ID of the card.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0521" num="0748">This allows applications to print information onto the back side of the card which is specific to the original printout on the front side of the card. There are many potential uses for such a mechanism. For the sake of discussion, one such case is described below.</p>
<p id="h-0107" num="0000">10.1.1 Camera Use-case</p>
<p id="p-0522" num="0000">
<ul id="ul0148" list-style="none">
    <li id="ul0148-0001" num="0000">
    <ul id="ul0149" list-style="none">
        <li id="ul0149-0001" num="0749">1. User takes a photo using an m-print enabled camera phone</li>
        <li id="ul0149-0002" num="0750">2. User prints photo onto Netpage tagged card</li>
        <li id="ul0149-0003" num="0751">3. User feeds card back through printer flipped-over</li>
        <li id="ul0149-0004" num="0752">4. Various details about the photo would then be printed onto the back of the card. Examples of details might be:
        <ul id="ul0150" list-style="none">
            <li id="ul0150-0001" num="0753">The date and time the photo was taken;</li>
            <li id="ul0150-0002" num="0754">Location where photo was taken, either automatically determined by a geographical positioning system within the phone (e.g. GPS or cell-based location detection), or manually entered after the fact by the user; and/or</li>
            <li id="ul0150-0003" num="0755">Arbitrary textual information entered by the user (perhaps entered on the phone itself or via a web-based photo archiving application sometime after the photo was taken).</li>
        </ul>
        </li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0523" num="0756">The time duration between the user taking the original photo and inserting the flipped-over card could be arbitrarily-long. As such, the mechanism can act as a &#x201c;what is this photo that I just found?&#x201d; facility. Another advantage is that it removes the need to have text obscuring parts of the photo in order to provide date/time information.</p>
<p id="h-0108" num="0000">11. General Netpage Overview</p>
<p id="p-0524" num="0757">Netpage interactivity can be used to provide printed user interfaces to various phone functions and applications, such as enabling particular operational modes of the mobile telecommunications device or interacting with a calculator application, as well as providing general &#x201c;keypad&#x201d;, &#x201c;keyboard&#x201d; and &#x201c;tablet&#x201d; input to the mobile telecommunications device. Such interfaces can be pre-printed and bundled with a phone, purchased separately (as a way of customizing phone operation, similar to ringtones and themes) or printed on demand where the phone incorporates a printer.</p>
<p id="p-0525" num="0758">A printed Netpage business card provides a good example of how a variety of functions can be usefully combined in a single interface, including:
<ul id="ul0151" list-style="none">
    <li id="ul0151-0001" num="0000">
    <ul id="ul0152" list-style="none">
        <li id="ul0152-0001" num="0759">loading contact details into an address book</li>
        <li id="ul0152-0002" num="0760">displaying a Web page</li>
        <li id="ul0152-0003" num="0761">displaying an image</li>
        <li id="ul0152-0004" num="0762">dialing a contact number</li>
        <li id="ul0152-0005" num="0763">bringing up an e-mail, SMS or MMS form</li>
        <li id="ul0152-0006" num="0764">loading location info into a navigation system</li>
        <li id="ul0152-0007" num="0765">activating a promotion or special offer</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0526" num="0766">Any of these functions can be made single-use only. A business card may be printed by the mobile telecommunications device user for presentation to someone else, or may be printed from a Web page relating to a business for the mobile telecommunications device user's own use. It may also be pre-printed.</p>
<p id="p-0527" num="0767">As described below, the primary benefit of incorporating a Netpage pointer or pen in another device is synergy. A Netpage pointer or pen incorporated in a mobile phone, smartphone or telecommunications-enabled PDA, for example, allows the device to act as both a Netpage pointer and as a relay between the pointer and the mobile phone network and hence a Netpage server. When the pointer is used to interact with a page, the target application of the interaction can display information on the phone display and initiate further interaction with the user via the phone touchscreen. The pointer is most usefully configured so that its &#x201c;nib&#x201d; is in a corner of the phone body, allowing the user to easily manipulate the phone to designate a tagged surface. The phone can incorporate a marking nib and optionally a continuous force sensor to provide full Netpage pen functionality.</p>
<p id="p-0528" num="0768">An exemplary Netpage interaction will now be described to show how a sensing device in the form of a Netpage enabled mobile device interacts with the coded data on a print medium in the form of a card. Whilst in the preferred form the print medium is a card generated by the mobile device or another mobile device, it can also be a commercially pre-printed card that is purchased or otherwise provided as part of a commercial transaction. The print medium can also be a page of a book, magazine, newspaper or brochure, for example. The print medium can be provided with coded data in a variety of formats, the coded data encoding a range of information, preferably, at least some of the information being indicative of the print media identifier. The information can be indicative of a two-dimensional coordinate grid, and the format can be a two-dimensional pattern.</p>
<p id="p-0529" num="0769">For example, the print medium can be provided with first coded data in a first format and second coded data in a second format, the first coded data encoding first information and the second coded data encoding second information, with at least some of the first information being indicative of the print media identifier, the first format being a linear pattern, and with at least some of the second information being indicative of the print media identifier and of a two-dimensional coordinate grid, the second format being a two-dimensional pattern. In a particular example form, the information is further indicative of at least part of a digital signature associated with the print media identifier, the sensor module determining, by reading at least some of the coded data, at least part of the digital signature, and the printer module can then print, if the digital signature is authentic, content on the print media.</p>
<p id="p-0530" num="0770">The mobile device senses a tag using an area image sensor and detects tag data. The mobile device uses the sensed data tag to generate interaction data, which is sent via a mobile telecommunications network to a document server. The document server uses the ID to access the document description, and interpret the interaction. In appropriate circumstances, the document server sends a corresponding message to an application server, which can then perform a corresponding action.</p>
<p id="p-0531" num="0771">Typically Netpage pen and Netpage-enabled mobile device users register with a registration server, which associates the user with an identifier stored in the respective Netpage pen or Netpage enabled mobile device. By providing the sensing device identifier as part of the interaction data, this allows users to be identified, allowing transactions or the like to be performed. Netpage documents are generated by having an ID server generate an ID which is transferred to the document server. The document server determines a document description and then records an association between the document description and the ID, to allow subsequent retrieval of the document description using the ID. The ID is then used to generate the tag data, as will be described in more detail below, before the document is printed by a suitable printer, using the page description and the tag map.</p>
<p id="p-0532" num="0772">Each tag is represented by a pattern which contains two kinds of elements. The first kind of element is a target. Targets allow a tag to be located in an image of a coded surface, and allow the perspective distortion of the tag to be inferred. The second kind of element is a macrodot. Each macrodot encodes the value of a bit by its presence or absence. The pattern is represented on the coded surface in such a way as to allow it to be acquired by an optical imaging system, and in particular by an optical system with a narrowband response in the near-infrared. The pattern is typically printed onto the surface using a narrowband near-infrared ink.</p>
<p id="p-0533" num="0773">In the preferred embodiment, the region typically corresponds to the entire surface of an M-Print card, and the region ID corresponds to the unique M-Print card ID. For clarity in the following discussion we refer to items and IDs, with the understanding that the ID corresponds to the region ID. The surface coding is designed so that an acquisition field of view large enough to guarantee acquisition of an entire tag is large enough to guarantee acquisition of the ID of the region containing the tag. Acquisition of the tag itself guarantees acquisition of the tag's two-dimensional position within the region, as well as other tag-specific data. The surface coding therefore allows a sensing device to acquire a region ID and a tag position during a purely local interaction with a coded surface, e.g. during a &#x201c;click&#x201d; or tap on a coded surface with a pen.</p>
<p id="p-0534" num="0774">Optional embodiments of the present invention may also be said to broadly consist in the parts, elements and features referred to or indicated herein, individually or collectively, in any or all combinations of two or more of the parts, elements or features, and wherein specific integers are mentioned herein which have known equivalents in the art to which the invention relates, such known equivalents are deemed to be incorporated herein as if individually set forth.</p>
<p id="p-0535" num="0775">Although a preferred embodiment has been described in detail, it should be understood that various changes, substitutions, and alterations can be made by one of ordinary skill in the art without departing from the scope of the present invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of generating an association between a sticker and an object of an object type, the sticker having disposed therein or thereon coded data at least partially indicative of a sticker identity and the object type, the method including, in a computer system:
<claim-text>receiving indicating data from a sensing device, the indicating data being at least partially indicative of the identity of the sticker and the object type, the sensing device, when placed in an operative position relative to the sticker, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</claim-text>
<claim-text>identifying, using the indicating data, the identity of the sticker, the object type and the object of the object type;</claim-text>
<claim-text>generating an association based at least partially on the sticker identity and the object, the object being stored in an object repository; and,</claim-text>
<claim-text>if the object repository is empty, generating, in the computer system, an indication that the association cannot be generated; wherein during use,</claim-text>
<claim-text>the computer system is configured to initiate an action regarding the object in response to the sensing device being placed in an operative position relative to the sticker.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method includes, in the computer system:
<claim-text>receiving object data indicative of at least one received object; and,</claim-text>
<claim-text>storing, using the received object data, the at least one received object in the object repository.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method includes, in the computer system:
<claim-text>selecting, using the object type, a stored object having the object type to be associated with the sticker identity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method includes, in the computer system:
<claim-text>receiving, from the sensing device, indicating data indicative of a value related to at least some of the coded data; and,</claim-text>
<claim-text>determining, using the value, the object type for selecting an object to be associated with the sticker.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the object type includes at least one of:
<claim-text>a video object;</claim-text>
<claim-text>an image object;</claim-text>
<claim-text>a audio object;</claim-text>
<claim-text>a text object;</claim-text>
<claim-text>a file object; and,</claim-text>
<claim-text>a data object.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the coded data is at least partially indicative of at least one interactive element, the at least one interactive element being related to at least one action, the method including, in the computer system:
<claim-text>receiving, from the sensing device, indicating data at least partially indicative of the at least one action, the sensing device, when placed in an operative position relative to the at least one interactive element, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</claim-text>
<claim-text>identifying, using the indicating data, the at least one action; and,</claim-text>
<claim-text>generating, using the at least one action, the association.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the objects stored in the object repository are ordered according to when a received object was stored in the object repository, the method including, in the computer system:
<claim-text>updating, using the received object data, the order of received objects in the object repository;</claim-text>
<claim-text>determining, using the order indicated by the object repository, a stored object which has been most recently stored in the object repository; and,</claim-text>
<claim-text>generating the association based at least partially on the most recently stored object.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method includes, in the computer system:
<claim-text>recording the generated association in the computer system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method includes, in the computer system:
<claim-text>deleting, from the object repository, the stored object after generating the association.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein object repository is located on a server, the method including, in a computer system:
<claim-text>storing, using the received object data, the received object in the object repository located on the server;</claim-text>
<claim-text>retrieving, using the object repository located on the server, the stored object to be associated with the sticker identity; and,</claim-text>
<claim-text>recording, in the server, the generated association.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the method includes, in the computer system:
<claim-text>receiving object data indicative of an object identity of the received object;</claim-text>
<claim-text>storing the object identity in the object repository; and,</claim-text>
<claim-text>generating the association based at least partially on the object identity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generated association is indicative of:
<claim-text>the sticker identity;</claim-text>
<claim-text>the object.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the association is generated according to a user identity, wherein the method includes, in the computer system:
<claim-text>storing, using the received object data, the received object associated with the user identity in the object repository.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the method includes, in the computer system:
<claim-text>determining, using the object repository and the user identity, a stored object to be associated with the sticker identity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the coded data is indicative of at least one location on the sticker, the method including, in the computer system:
<claim-text>receiving the indicating data indicative of at least one position of the sensing device relative to the sticker, the sensing device being responsive to sensing at least some of the coded data to generate the indicating data;</claim-text>
<claim-text>identifying, using the indicating data, the at least one position; and,</claim-text>
<claim-text>generating the association based at least partially on the at least one position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the coded data is substantially invisible to an unaided human.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the coded data is printed on the sticker using at least one of:
<claim-text>an invisible ink; and,</claim-text>
<claim-text>an infrared-absorptive ink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A computer system configured to generate an association between a sticker and an object of an object type, the sticker having disposed therein or thereon coded data at least partially indicative of a sticker identity and the object type, the computer system being configured to:
<claim-text>receive indicating data from a sensing device, the indicating data being at least partially indicative of the identity of the sticker and the object type, the sensing device, when placed in an operative position relative to the sticker, being responsive to sense at least some of the coded data and generate the indicating data using the sensed coded data;</claim-text>
<claim-text>identify, using the indicating data, the identity of the sticker, the object type and the object of the object type;</claim-text>
<claim-text>generate an association based at least partially on the sticker identity and the object, the object being stored in an object repository;</claim-text>
<claim-text>if the object repository is empty, generate an indication that the association cannot be generated; wherein during use, and,</claim-text>
<claim-text>initiate an action regarding the object in response to the sensing device being placed in an operative position relative to the sticker.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
